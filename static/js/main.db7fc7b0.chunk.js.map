{"version":3,"sources":["models/CountryInfo.ts","models/CountryDailyInfo.ts","models/TotalInfo.ts","pages/footer/footer.tsx","components/navBar/navbar.tsx","pages/header/header.tsx","pages/about/About.tsx","utils/StringUtils.js","utils/UIHelper.js","components/card/Card.js","components/coronadash/mapD3/Legend.js","components/coronadash/mapD3/CoronaMapView.js","components/panelchart/Panel.js","utils/DataHelper.js","components/region/Region.js","components/coronadash/data/countries.tsv","components/coronadash/container/Container.js","components/pieChart/PieChartFullOption.tsx","pages/page1/Page1.tsx","components/table/schema/schema.ts","components/table/DataTable.tsx","pages/page2/Page2.tsx","pages/page3/Page3.tsx","routes/router.tsx","utils/Constants.ts","App.tsx","services/covidNinja/NinjaService.ts","serviceWorker.js","index.js"],"names":["CountryInfo","JsonObject","JsonProperty","Number","String","this","_id","iso2","iso3","lat","long","flag","CountryDailyInfo","id","updated","country","countryInfo","cases","todayCases","deaths","todayDeaths","recovered","todayRecovered","active","critical","tests","population","continent","TotalInfo","affectedCountries","Footer","className","href","style","color","React","Navbar","to","Header","About","deleteSpecialChar","string","split","join","entity","num","toString","replace","getRadiusCases","rayon","getRadiusDeath","value","separator","end","duration","d","context","checkToggleBTn","StringUtils","stat","checkZoneDesease","Card","totalConfirmed","activeCases","totalDeaths","props","covid19","totalInfo","countryClicked","data","Array","isArray","length","filter","elt","Country","marginLeft","uihelper","Component","Legend","svg","d3","append","attr","text","svgMap","node","getBoundingClientRect","height","width","top","zIndex","CoronaMapView","viewBox","borderColor","mergeMorrocanSahara","g","jsonData","morocco","objects","countries","geometries","morrocanSahara","toBeMerged","datum","merge","calculatePath","getMoroccoCountryColor","on","clickOnCountry","morrocanTodayCases","c","getCountryColor","addCountriesName","worldData","selectAll","includes","properties","name","enter","path","centroid","drawMap","i","markDesease","e","trim","dailyNewCase","dailyCase","addZoom","call","scaleExtent","translateExtent","extent","closePanel","zoomed","transform","markerRed","markersBlack","placeLabel","contextDesease","scaledRadius","scaleRadius","k","contextDeaths","calculatedRadius","UIHelper","projection","geoMercator","center","scale","translate","precision","gGlobal","drawSvgWrapper","wrapper","PureComponent","Panel","handleClick","contains","target","handleClickOutside","tagName","getPanelParagraph","label","field","margin","fontSize","fontWeight","document","addEventListener","removeEventListener","opacity","x","y","ref","left","maxHeight","maxWidth","onClick","src","tabIndex","right","getStatByPays","countryData","world","constructData","pays","statCovid19","result","forEach","coordinate","longitude","latitude","object","push","Region","drawCircles","markers","empty","drawZoneByContext","drawDimondPrincess","DataHelper","dataFiltered","filterCountriesByContext","getMarkerId","clickOnCircle","getCx","getCy","getClassByContext","dataSorted","TotalDeaths","sort","e1","e2","totalDeath1Int","parseInt","ActiveCases","activeCase1Int","getRadius","getNodeColor","media","remove","Container","getData","TotalRecovered","position","getPositionPanel","setState","panelOpacity","panelZindex","sendSvgToBackground","onclick","panelStatDim","leftsideDim","headerDim","pageX","pageY","sendSvgToFrontPage","closePanelDetails","initGlobalStat","state","pieOpacity","countries110","feature","features","then","response","error","zoneDeaths","PieChartFullOption","useState","selected","setSelected","undefined","hovered","setHovered","map","entry","fontFamily","radius","PieChart","defaultProps","lineWidth","segmentsStyle","transition","cursor","segmentsShift","index","animate","dataEntry","Math","round","percentage","labelPosition","labelStyle","fill","pointerEvents","_","onMouseOver","onMouseOut","Page1","getPieData","totalCases","getGlobalStat","totalStatistics","onclickCountry","countryFiltered","dataset","pieData","paddingRight","window","screen","overflow","title","columnsSchema","headerName","valueGetter","params","row","editable","description","type","sortable","DataTable","rows","columns","pageSize","rowsPerPageOptions","checkboxSelection","disableSelectionOnClick","Page2","coutriesDailyinfo","JsonConvert","deserializeArray","Page3","Router","element","jsonConvert","ignorePrimitiveChecks","valueCheckingMode","ValueCheckingMode","ALLOW_NULL","App","isDataLoaded","fetch","json","allDataExceptWS","allCoutriesDailyinfo","deserializeObject","console","log","padding","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db7fc7b0.chunk.js","sourcesContent":["import { JsonObject, JsonProperty } from \"json2typescript\";\r\n\r\n@JsonObject(\"CountryInfo\")\r\nexport class CountryInfo {\r\n  @JsonProperty(\"_id\", Number)\r\n  _id: number;\r\n  @JsonProperty(\"iso2\", String)\r\n  iso2: string;\r\n  @JsonProperty(\"iso3\", String)\r\n  iso3: string;\r\n  @JsonProperty(\"lat\", Number)\r\n  lat: number;\r\n  @JsonProperty(\"long\", Number)\r\n  long: number;\r\n  @JsonProperty(\"flag\", String)\r\n  flag: string;\r\n\r\n  constructor() {\r\n    this._id = 0;\r\n    this.iso2 = \"\";\r\n    this.iso3 = \"\";\r\n    this.lat = 0;\r\n    this.long = 0;\r\n    this.flag = \"\";\r\n  }\r\n\r\n}\r\n","import { JsonObject, JsonProperty } from \"json2typescript\";\r\nimport { CountryInfo } from \"./CountryInfo\";\r\n\r\n@JsonObject(\"CountryDailyInfo\")\r\nexport class CountryDailyInfo {\r\n  @JsonProperty(\"country\", String)\r\n  id: string;\r\n  \r\n  @JsonProperty(\"updated\", Number)\r\n  updated: number;\r\n  @JsonProperty(\"country\", String)\r\n  country: string;\r\n  @JsonProperty(\"countryInfo\")\r\n  countryInfo : CountryInfo;\r\n  @JsonProperty(\"cases\", Number)\r\n  cases: number;\r\n  @JsonProperty(\"todayCases\", Number)\r\n  todayCases: number;\r\n  @JsonProperty(\"deaths\", Number)\r\n  deaths: number;\r\n  @JsonProperty(\"todayDeaths\", Number)\r\n  todayDeaths: number;\r\n  @JsonProperty(\"recovered\", Number)\r\n  recovered: number;\r\n  @JsonProperty(\"todayRecovered\", Number)\r\n  todayRecovered: number;\r\n  @JsonProperty(\"active\", Number)\r\n  active: number;\r\n  @JsonProperty(\"critical\", Number)\r\n  critical: number;\r\n  @JsonProperty(\"tests\", Number)\r\n  tests: number;\r\n  @JsonProperty(\"population\", Number)\r\n  population: number;\r\n  @JsonProperty(\"continent\", String)\r\n  continent: string;\r\n\r\n  constructor() {\r\n      this.id = \"\";\r\n    this.updated = 0;\r\n    this.country = \"\";\r\n    this.countryInfo = new CountryInfo();\r\n    this.cases = 0;\r\n    this.todayCases = 0;\r\n    this.deaths = 0;\r\n    this.todayDeaths = 0;\r\n    this.recovered = 0;\r\n    this.todayRecovered = 0;\r\n    this.active = 0;\r\n    this.critical = 0;\r\n    this.tests = 0;\r\n    this.population = 0;\r\n    this.continent = \"\";\r\n  }\r\n}\r\n","import { JsonObject, JsonProperty } from \"json2typescript\";\r\n\r\n@JsonObject(\"TotalInfo\")\r\nexport class TotalInfo {\r\n  @JsonProperty(\"updated\", Number)\r\n  private updated: number;\r\n  @JsonProperty(\"affectedCountries\", Number)\r\n  private affectedCountries: number;\r\n  @JsonProperty(\"cases\", Number)\r\n  private cases: number;\r\n  @JsonProperty(\"todayCases\", Number)\r\n  private todayCases: number;\r\n  @JsonProperty(\"deaths\", Number)\r\n  private deaths: number;\r\n  @JsonProperty(\"todayDeaths\", Number)\r\n  private todayDeaths: number;\r\n  @JsonProperty(\"recovered\", Number)\r\n  private recovered: number;\r\n  @JsonProperty(\"todayRecovered\", Number)\r\n  private todayRecovered: number;\r\n  @JsonProperty(\"active\", Number)\r\n  private active: number;\r\n  @JsonProperty(\"critical\", Number)\r\n  private critical: number;\r\n  @JsonProperty(\"tests\", Number)\r\n  private tests: number;\r\n  @JsonProperty(\"population\", Number)\r\n  private population: number;\r\n\r\n  constructor() {\r\n    this.updated = 0;\r\n    this.affectedCountries = 0;\r\n    this.cases = 0;\r\n    this.todayCases = 0;\r\n    this.deaths = 0;\r\n    this.todayDeaths = 0;\r\n    this.recovered = 0;\r\n    this.todayRecovered = 0;\r\n    this.active = 0;\r\n    this.critical = 0;\r\n    this.tests = 0;\r\n    this.population = 0;\r\n  }\r\n}\r\n","import * as React from \"react\"\r\n\r\nexport class Footer extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                    <i className=\"fa fa-github-square\" aria-hidden=\"true\"></i>\r\n                    <a\r\n                        href=\"https://github.com/ahmedElmaghr/coronaMap.git\"\r\n                        className=\"github-link\"\r\n                        style={{ color: \"white\" }}\r\n                    >\r\n                        {\" \"}\r\n                        github repository\r\n                    </a>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport './navbar.css'\r\nconst Navbar = () => {\r\n    return (\r\n        <div className=''>\r\n                    <ul className=\"topnav\">\r\n                        <li className='active'>\r\n                            <Link to=\"/map\">\r\n                            <i className=\"fa fa-map\" aria-hidden=\"true\"></i>\r\n                            {\" \"} Map \r\n                                </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/stat\">\r\n                            <i className=\"fa fa-table\" aria-hidden=\"true\"></i>\r\n                            {\" \"} Countries \r\n                                </Link>\r\n                        </li>\r\n                        <li>\r\n                            <Link to=\"/charts\">\r\n                            <i className=\"fa fa-line-chart\" aria-hidden=\"true\"></i>\r\n                            {\" \"} Charts \r\n                                </Link>\r\n                        </li>\r\n                        <li className='about'>\r\n                            <Link to=\"/about\">\r\n                            <i className=\"fa fa-info\" aria-hidden=\"true\"></i>\r\n                            {\" \"} About\r\n                                </Link>\r\n                        </li>\r\n                    </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import * as React from \"react\"\r\nimport Navbar from \"../../components/navBar/navbar\"\r\nimport { NextPrevious } from \"../../components/nextPrevious/nextPrevious\"\r\n\r\nexport class Header extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <div className=\"header\">\r\n                    {/*to improve navbar https://mui.com/components/app-bar/ */}\r\n                    <Navbar/>\r\n                    {/* <NextPrevious clickPrevious={()=>{console.log(\"click previous\")}} clickNext={()=>{console.log(\"click next\")}} /> */}\r\n                    <div>covid19 worldwide <i className=\"fa fa-globe\" aria-hidden=\"true\"></i></div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","\r\n\r\nexport const About =()=>{\r\n\r\n    return (\r\n        <div>\r\n            About section.\r\n        </div>\r\n        )\r\n}","  //verify string not empty\r\n  const isNotEmpty = entity => {\r\n   return entity != \"\" && entity != null;\r\n   //    return entity != null && entity.trim() != \"\";\r\n\r\n  };\r\n\r\n  //\r\n  const deleteSpecialChar = (string)=>{\r\n    if(typeof string != \"string\"){\r\n      throw \"formatStringToNumber is applied only on string format\"\r\n    }\r\n    var splitted = string.split(`,`).join('');\r\n\r\n    return splitted;\r\n  }\r\n\r\n  const stringVirSepToNumber = (string)=>{\r\n    var stringWithoutSpecChar = deleteSpecialChar(string);\r\n    return parseInt(stringWithoutSpecChar,10);\r\n  }\r\n\r\n  const formatNumberToString = (num) =>{\r\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n  }\r\n\r\nexport default { isNotEmpty,deleteSpecialChar,stringVirSepToNumber,formatNumberToString};","\r\nimport React from 'react';\r\nimport CountUp from 'react-countup';\r\nimport StringUtils from './StringUtils';\r\n\r\n/** example \"16.25\" -> 16,25 + counter  */\r\nconst buildCountUpByStringValue = (value)=>{\r\n    return (\r\n      <CountUp\r\n        separator=\",\"\r\n        end={value}\r\n        duration={0.5}\r\n      ></CountUp>\r\n    );\r\n  }\r\n\r\nconst   calculateRadius = (d, context) => {\r\n  let cases;\r\n  if (context.checkToggleBTn) {\r\n    cases = StringUtils.deleteSpecialChar(d.stat.deaths);\r\n    return getRadiusDeath(cases)\r\n  } else if (context.checkZoneDesease) {\r\n    cases = StringUtils.deleteSpecialChar(d.stat.cases);\r\n    return getRadiusCases(cases)\r\n  }\r\n};\r\n\r\nconst getRadiusCases = (cases)=>{\r\n  let rayon = 0;\r\n  if (0 <= cases && cases < 1000) {\r\n    let r = (cases / 1000) * 5;\r\n    rayon = r;\r\n  } else if (1000 <= cases && cases < 5000) {\r\n    let r = (cases / 5000) * 10;\r\n    rayon = r;\r\n  } else if (5000 <= cases && cases < 10000) {\r\n    let r = (cases / 10000) * 20;\r\n    rayon = r;\r\n  } else if (10000 <= cases && cases < 60000) {\r\n    let r = (cases / 50000) * 50;\r\n    rayon = r;\r\n  }else if (60000 <= cases && cases < 100000) {\r\n    let r = (cases / 100000) * 60;\r\n    rayon = r;\r\n  }\r\n  \r\n  return rayon < 1 && rayon > 0 ? 2 : rayon;\r\n}\r\n\r\nconst getRadiusDeath = (cases)=>{\r\n  let rayon = 0;\r\n  if (0 <= cases && cases < 1000) {\r\n    let r = (cases / 1000) * 5;\r\n    rayon = r;\r\n  } else if (1000 <= cases && cases < 2000) {\r\n    let r = (cases / 2000) * 20;\r\n    rayon = r;\r\n  } else if (2000 <= cases && cases < 5000) {\r\n    let r = (cases / 5000) * 22;\r\n    rayon = r;\r\n  } else if (5000 <= cases && cases < 15000) {\r\n    let r = (cases / 5000) * 25;\r\n    rayon = r;\r\n  }else{\r\n    rayon = 30;\r\n  }\r\n  \r\n  return rayon < 1 && rayon > 0 ? 2 : rayon;\r\n}\r\n\r\nexport default{buildCountUpByStringValue,calculateRadius}","import React, { Component } from \"react\";\r\nimport uihelper from \"../../utils/UIHelper\";\r\nimport \"./Card.css\";\r\n\r\nexport default class Card extends Component {\r\n  render() {\r\n    const {covid19,totalInfo} = this.props;\r\n    const countryClicked = this.props.countryClicked;\r\n\r\n    let data = covid19;\r\n    let totalStatistics;\r\n    if (Array.isArray(data) && data.length) {\r\n      //FIXME : refactor this code\r\n      totalStatistics = data.filter((elt) => { return elt.Country == \"Total:\" })[7]\r\n    }\r\n    let totalConfirmed;\r\n    let activeCases;\r\n    let recovered;\r\n    let totalDeaths;\r\n    if (countryClicked) {\r\n      totalConfirmed = countryClicked.cases;\r\n      activeCases = countryClicked.active;\r\n      recovered = countryClicked.recovered;\r\n      totalDeaths = countryClicked.deaths;\r\n    } else {\r\n      //FIXME\r\n      totalConfirmed = totalInfo.cases;\r\n      activeCases = totalInfo.todayCases;\r\n      recovered = totalInfo.todayRecovered;\r\n      totalDeaths = totalInfo.todayDeaths;\r\n    }\r\n    //\r\n    return (\r\n      <div style={{ marginLeft: 10 + \"px\" }}>\r\n        <div className=\"card\">\r\n          <div className=\"red-title\"> <i className=\"fa fa-globe\" aria-hidden=\"true\"></i> Total Confirmed</div>\r\n    <div className=\"red-content\">{uihelper.buildCountUpByStringValue(totalConfirmed)}</div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"orange-title\"><i className=\"fa fa-ambulance\" aria-hidden=\"true\"></i> Active cases</div>\r\n          <div className=\"orange-content\">{uihelper.buildCountUpByStringValue(activeCases)}</div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"green-title\"><i className=\"fa fa-heart\" aria-hidden=\"true\"></i> Recovered</div>\r\n          <div className=\"green-content\">{uihelper.buildCountUpByStringValue(recovered)}</div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"black-title\"><i className=\"fa fa-heartbeat\" aria-hidden=\"true\"></i> Total Deaths</div>\r\n          <div className=\"black-content\">{uihelper.buildCountUpByStringValue(totalDeaths)}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // buildCountUpByStringValue = (valueStr)=>{\r\n  //   return (\r\n  //     <CountUp\r\n  //       separator=\",\"\r\n  //       end={StringUtils.stringVirSepToNumber(valueStr)}\r\n  //     ></CountUp>\r\n  //   );\r\n  // }\r\n\r\n}\r\n","import * as d3 from \"d3\";\r\nimport React, { Component } from \"react\";\r\nimport \"./Legend.css\";\r\n\r\nexport default class Legend extends Component {\r\n  componentDidMount() {\r\n    var svg = d3.select(\"#legend\")\r\n    // Handmade legend\r\n    svg.append(\"circle\").attr(\"cx\",10).attr(\"cy\",10).attr(\"r\", 6).style(\"fill\", \"#6f8d43\")\r\n    svg.append(\"circle\").attr(\"cx\",10).attr(\"cy\",30).attr(\"r\", 6).style(\"fill\", \"#71c7ec\")\r\n    svg.append(\"circle\").attr(\"cx\",10).attr(\"cy\",50).attr(\"r\", 6).style(\"fill\", \"#65b3d4\")\r\n    svg.append(\"circle\").attr(\"cx\",10).attr(\"cy\",70).attr(\"r\", 6).style(\"fill\", \"#386376\")\r\n    svg.append(\"circle\").attr(\"cx\",10).attr(\"cy\",90).attr(\"r\", 6).style(\"fill\", \"#16272f\")\r\n    // svg.append(\"circle\").attr(\"cx\",10).attr(\"cy\",110).attr(\"r\", 6).style(\"fill\", \"#386376\")\r\n    svg.append(\"circle\").attr(\"cx\",10).attr(\"cy\",110).attr(\"r\", 6).style(\"fill\", \"rgba(218, 223, 225, 1)\")\r\n\r\n    svg.append(\"text\").attr(\"x\", 30).attr(\"y\", 10).text(\"no new cases\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\r\n    svg.append(\"text\").attr(\"x\", 30).attr(\"y\", 30).text(\"< 2k\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\r\n    svg.append(\"text\").attr(\"x\", 30).attr(\"y\", 50).text(\"2k - 5K\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\r\n    svg.append(\"text\").attr(\"x\", 30).attr(\"y\", 70).text(\"5K - 15K\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\r\n    svg.append(\"text\").attr(\"x\", 30).attr(\"y\", 90).text(\">15k\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\r\n    // svg.append(\"text\").attr(\"x\", 30).attr(\"y\", 110).text(\"30K - 100K\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\r\n    svg.append(\"text\").attr(\"x\", 30).attr(\"y\", 110).text(\"infos not available\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\r\n\r\n    \r\n  }\r\n\r\n  render() {\r\n    let svgMap = d3.selectAll('#content').node().getBoundingClientRect();\r\n    return (\r\n      <div className=\"legend\" style = {{height:'30%',width:'15%',top : svgMap.height*.6,zIndex:1}}>\r\n        <svg  id = \"legend\" style = {{height:'100%',width:'100%'}}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as d3 from \"d3\";\r\nimport React, { PureComponent } from \"react\";\r\nimport { merge } from \"topojson-client\";\r\nimport UIHelper from \"../../../utils/UIHelper\";\r\nimport \"./CoronaMapViewCss.css\";\r\nimport Legend from \"./Legend.js\";\r\n\r\nexport default class CoronaMapView extends PureComponent {\r\n  //Constantes\r\n\r\n  width = \"100%\";\r\n  height = \"100%\";\r\n  viewBox = `0 0 800 400`;\r\n  borderColor = \"blue\";\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (this.props.jsonData.length != 0) {\r\n      //Draw svg Wrapper\r\n      var svg = this.drawSvgWrapper();\r\n      var gGlobal = svg.append(\"g\").attr(\"id\", \"gWrapper\");\r\n      //Draw Path from worldData\r\n      var g = this.drawMap(gGlobal, this.props.worldData);\r\n      //Merge morrocan sahara\r\n      this.mergeMorrocanSahara(g);\r\n      //country names\r\n      this.addCountriesName(g,this.props.worldData);\r\n      //add zoom\r\n      var wrapper = d3.select(\"#content\");\r\n      this.addZoom(wrapper);\r\n    }\r\n  }\r\n\r\n  mergeMorrocanSahara = g => {\r\n    //merge Morocco\r\n    var jsonData = this.props.jsonData;\r\n    //Moroccan Sahara id = 732\r\n    //Morocco id = 504\r\n    var morocco = jsonData.objects.countries.geometries.filter(\r\n      d => d.id == 504\r\n    );\r\n    var morrocanSahara = jsonData.objects.countries.geometries.filter(\r\n      d => d.id == 732\r\n    );\r\n    var toBeMerged = [morocco[0], morrocanSahara[0]];\r\n    //\r\n    g.append(\"path\")\r\n      .datum(merge(jsonData, toBeMerged))\r\n      .attr(\"class\", \"country\")\r\n      .attr(\"d\", d => this.calculatePath(d))\r\n      .attr(\"fill\", this.getMoroccoCountryColor(this.props.covid19))\r\n      .on(\"click\", (d) => {\r\n        this.props.clickOnCountry()\r\n      })\r\n  };\r\n\r\n   getMoroccoCountryColor = (data) => {\r\n    const moroccoData = data.filter(c => c.country == \"Morocco\");\r\n    let morrocanTodayCases = moroccoData[0].todayCases;\r\n    return this.getCountryColor(morrocanTodayCases); \r\n   }\r\n\r\n   addCountriesName = (g, worldData) => {\r\n    g.selectAll(\".place-label\")\r\n      .data(\r\n        worldData.filter((d) => {\r\n          return [\r\n            \"Morocco\",\r\n            \"USA\",\r\n            \"China\",\r\n            \"Brazil\",\r\n            \"Australia\",\r\n            \"Russia\",\r\n            \"South Africa\",\r\n            \"Chile\",\r\n            \"Mexico\",\r\n            \"Iran\",\r\n            \"Germany\",\r\n            \"Nigeria\",\r\n            \"Egypt\",\r\n            \"India\",  \r\n            \"Greenland\",\r\n            \"France\"\r\n          ].includes(d.properties.name);\r\n        })\r\n      )\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"class\", \"place-label\")\r\n      .attr(\"x\", (d) => {\r\n        return this.path().centroid(d)[0];\r\n      })\r\n      .attr(\"y\", (d) => {\r\n        return this.path().centroid(d)[1];\r\n      })\r\n      .text((d) => {\r\n        return d.properties.name;\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Legend></Legend>\r\n    );\r\n  }\r\n\r\n\r\n  //Draw svg wrapper for map\r\n  drawSvgWrapper() {\r\n    //Construct Body\r\n    var body = d3.select(\"#mapWW\")\r\n    //Construct SVG\r\n    var svg = body\r\n      .append(\"svg\")\r\n      .attr(\"class\", \"svg\")\r\n      .attr(\"id\", \"content\")\r\n      .attr(\"width\", this.width)\r\n      // .attr(\"height\", window.screen.height +'px')\r\n      .attr(\"viewBox\", this.viewBox)\r\n      ;\r\n    return svg;\r\n  }\r\n\r\n  //Draw the world Map\r\n  drawMap = (node, worldData) => {\r\n      var g = node\r\n        .append(\"g\")\r\n        .attr(\"id\", \"worldMap\")\r\n        .attr(\"className\", \"countries\");\r\n      g.selectAll(\"path\")\r\n        .data(worldData)\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"key\", (d, i) => `path-${i}`)\r\n        .attr(\"d\", d => this.calculatePath(d))\r\n        .attr(\"class\", \"country\")\r\n        .attr(\"fill\", (d) => {\r\n          return this.markDesease(d)\r\n        })\r\n        .on(\"click\", (d) => {\r\n          this.props.clickOnCountry(d);\r\n        })\r\n      return g;\r\n\r\n  };\r\n\r\n  //Color land \r\n  markDesease = (d) => {\r\n    let elt = this.props.covid19.filter((e) => {\r\n      let countryTrimmed = e.country ? e.country.trim() : \"\";\r\n\r\n      return countryTrimmed == d.properties.name\r\n    })\r\n    if (elt[0]) {\r\n      let dailyNewCase = elt[0].todayCases;\r\n      return this.getCountryColor(dailyNewCase);\r\n\r\n    } else {\r\n      return `rgba(218, 223, 225, 1)`\r\n    }\r\n  }\r\n\r\n  //Get country color range rgba(255,255,255)\r\n  getCountryColor = (dailyCase) => {\r\n    if(dailyCase == 0){\r\n      return '#6f8d43'\r\n    } \r\n    \r\n    /*else if (0 < dailyCase && dailyCase <= 100) {\r\n      return '#71c7ec'\r\n    } else if (100 <= dailyCase && dailyCase < 200) {\r\n      return '#65b3d4'\r\n    } else if (200 <= dailyCase && dailyCase < 500) {\r\n      return '#5a9fbc'\r\n    } else if (500 <= dailyCase && dailyCase < 1000) {\r\n      return '#4f8ba5'\r\n    } else if (1000 <= dailyCase && dailyCase < 5000) {\r\n      return '#43778d'\r\n    } */\r\n    else if (0 < dailyCase && dailyCase <= 2000) {\r\n      return '#71c7ec'\r\n    }\r\n    else if (2000 < dailyCase && dailyCase <= 5000) {\r\n      return '#65b3d4'\r\n    }\r\n    else if (5000 <= dailyCase && dailyCase < 15000) {\r\n      return '#386376'\r\n    } else if (15000 <= dailyCase) {\r\n      return '#16272f'\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  //Add zoom\r\n  addZoom = svg => {\r\n    const map = d3.select(\".svg\");\r\n    const width = map.node().getBoundingClientRect().width;\r\n    const height = width / 3;\r\n\r\n    svg.call(d3.zoom()\r\n    .scaleExtent([1, 50])\r\n    .translateExtent([[0,0], [width, height]])\r\n    .extent([[0, 0], [width, height]])\r\n    .on(\"zoom\", () => {\r\n      this.props.closePanel();\r\n      this.zoomed(svg)\r\n    }));\r\n  };\r\n\r\n  zoomed = svg => {\r\n    var transform = d3.event.transform;\r\n    svg.selectAll(\"path,circle,.place-label\").attr(\"transform\", transform);\r\n    var markerRed = d3.selectAll(\".marker-red\");\r\n    var markersBlack = d3.selectAll(\".marker-black\");\r\n    var placeLabel = d3.selectAll(\".place-label\");\r\n\r\n    let contextDesease = { checkToggleBTn: false , checkZoneDesease:true}\r\n    markerRed.attr(\"r\", (d)=>{\r\n      let scaledRadius =this.scaleRadius(d,contextDesease,transform.k)\r\n      return scaledRadius<5 ? 5 : scaledRadius;\r\n    } )\r\n    let contextDeaths = { checkToggleBTn: true , checkZoneDesease:false}\r\n    markersBlack.attr(\"r\", (d)=>{\r\n      let scaledRadius =this.scaleRadius(d,contextDeaths,transform.k)\r\n      return scaledRadius<5 ? 5 : scaledRadius;\r\n    } );\r\n  //Countries label Transformation\r\n  let k = transform.k;\r\n\r\n  if (k >= 1 && k < 2) {\r\n    placeLabel.style(\"font-size\", \"10px\");\r\n  } else if (k >= 2 && k < 3) {\r\n    placeLabel.style(\"font-size\", \"5px\");\r\n  } else if (k >= 3 && k < 8) {\r\n    placeLabel.style(\"font-size\", \"3px\").style(\"stroke-width\", \"0.1px\");\r\n  } else {\r\n    placeLabel\r\n      .style(\"font-size\", \"1px\")\r\n      .style(\"stroke-width\", \"0px\")\r\n      .style(\"letter-spacing\", \"0px\");\r\n  }\r\n\r\n};\r\n  /**\r\n   * d: element data\r\n   * context : the contxt\r\n   * k : scale projection [0,1]\r\n   */\r\n  scaleRadius = (d,context,k)=>{\r\n    let calculatedRadius = UIHelper.calculateRadius(d, context)/2;\r\n    let scaledRadius = k> .5 ? calculatedRadius/k : calculatedRadius\r\n    return scaledRadius + \"px\";\r\n  }\r\n\r\n  //Projection and path calculator\r\n  projection = () =>{\r\n    var geoMercator = d3\r\n      .geoMercator()\r\n      .center([0,-60])\r\n      .scale(80)\r\n      .translate([800 / 2, 650 / 2]);\r\n\r\n    var projection2 = d3\r\n      .geoOrthographic()\r\n      .center([0,-15])\r\n      .scale(190)\r\n      .precision(0.1);\r\n    var projection3 = d3\r\n      .geoConicEqualArea()\r\n      .scale(100)\r\n      .center([0, 150])\r\n      //.translate([width / 2, height / 2])\r\n      .precision(0.3);\r\n    return geoMercator;\r\n  }\r\n\r\n  calculatePath = d => {\r\n    return d3.geoPath().projection(this.projection())(d);\r\n  };\r\n\r\n  path = () => {\r\n    return d3.geoPath().projection(this.projection());\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport StringUtils from \"../../utils/StringUtils\";\r\nimport \"./Panel.css\";\r\n\r\nexport default class Panel extends React.Component {\r\n  \r\n  componentWillMount(){\r\n    document.addEventListener(\"click\",this.handleClick,false)\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    document.removeEventListener(\"click\",this.handleClick,false)\r\n  }\r\n\r\n  handleClick=(e)=>{\r\n    if(this.node.contains(e.target)){\r\n      return;\r\n    }\r\n    this.handleClickOutside(e)\r\n  }\r\n\r\n  handleClickOutside=(e)=>{\r\n    if(e.target.tagName!==\"path\" && e.target.tagName!==\"circle\"){\r\n      this.props.closePanel();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { stat, opacity,zIndex, x, y } = this.props;\r\n    return (\r\n      <div ref={(node) => (this.node = node)}>\r\n        <div\r\n          id=\"panelStat\"\r\n          className=\"mapboxgl-popup mapboxgl-popup-anchor-bottom\"\r\n          style={{\r\n            top: y + \"px\",\r\n            left: x + \"px\",\r\n            opacity: opacity,\r\n            zIndex: zIndex,\r\n          }}\r\n        >\r\n          <div className=\"mapboxgl-popup-tip\"></div>\r\n          <div className=\"mapboxgl-popup-content\">\r\n            <div\r\n              className=\"maphub-popup-inner maphub-popup-text ps\"\r\n              style={{ maxHeight: 411 + \"px\", maxWidth: 840 + \"px\" }}\r\n            >\r\n              <span\r\n                className=\"closePanel\"\r\n                onClick={() => {\r\n                  this.props.closePanel();\r\n                }}\r\n              >\r\n                X\r\n              </span>\r\n              <div className=\"nicetext\">\r\n                <div>\r\n                  <div className=\"nicetext-title panelTitle1\">\r\n                    <img className = \"impFlag\"src={stat?(stat.countryInfo? stat.countryInfo.flag : \"\") : \"\"}/>\r\n                    {\" \"}\r\n                    <span>{stat ? stat.country : \"\"}</span>\r\n                    \r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <p className=\"panelTitle2\">Daily news</p>\r\n                  {this.getPanelParagraph(\r\n                    stat,\r\n                    \"green\",\r\n                    \"New recovered\",\r\n                    \"todayRecovered\"\r\n                  )}\r\n                  {this.getPanelParagraph(\r\n                    stat,\r\n                    \"darkorange\",\r\n                    \"New cases\",\r\n                    \"todayCases\"\r\n                  )}\r\n                  {this.getPanelParagraph(\r\n                    stat,\r\n                    \"darkred\",\r\n                    \"New deaths\",\r\n                    \"todayDeaths\"\r\n                  )}\r\n                  <p className=\"panelTitle2\">Total</p>\r\n                  {this.getPanelParagraph(\r\n                    stat,\r\n                    \"green\",\r\n                    \"Total recovered\",\r\n                    \"recovered\"\r\n                  )}\r\n                  {this.getPanelParagraph(\r\n                    stat,\r\n                    \"black\",\r\n                    \"Total deaths\",\r\n                    \"deaths\"\r\n                  )}\r\n                  {this.getPanelParagraph(\r\n                    stat,\r\n                    \"darkorange\",\r\n                    \"Total cases\",\r\n                    \"cases\"\r\n                  )}\r\n                  {this.getPanelParagraph(\r\n                    stat,\r\n                    \"black\",\r\n                    \"Total tests\",\r\n                    \"tests\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"ps__rail-x\"\r\n                style={{ left: 0 + \"px\", top: 0 + \"px\" }}\r\n              >\r\n                <div\r\n                  className=\"ps__thumb-x\"\r\n                  tabIndex=\"0\"\r\n                  style={{ left: 0 + \"px\", width: 0 + \"px\" }}\r\n                ></div>\r\n              </div>\r\n              <div\r\n                className=\"ps__rail-y\"\r\n                style={{ top: 0 + \"px\", right: 0 + \"px\" }}\r\n              >\r\n                <div\r\n                  className=\"ps__thumb-y\"\r\n                  tabIndex=\"0\"\r\n                  style={{ top: 0 + \"px\", height: 0 + \"px\" }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getPanelParagraph = (stat,color,label,field)=>{\r\n    return <p\r\n    style={{\r\n      color,\r\n       //borderTop: \"solid 1px\",\r\n      margin: \"2px 2px 2px 2px\",\r\n       //borderRadius: 6 + \"px\",\r\n      fontSize: 12+'px',\r\n      fontWeight: 'bold'\r\n    }}\r\n  >\r\n    \r\n    {label + \": \"}\r\n    {(stat && StringUtils.isNotEmpty(stat[field])) ? StringUtils.formatNumberToString(stat[field]) : \"0\"}\r\n\r\n  </p>\r\n  }\r\n}\r\n","\r\nconst constructData = (pays, statCovid19) => {\r\n    var result = [];\r\n    var i = 0;\r\n    pays.forEach((d) => {\r\n        var coordinate = {\r\n            longitude: d.longitude,\r\n            latitude: d.latitude\r\n        };\r\n\r\n        var object = {\r\n            id: i,\r\n            coordinate,\r\n            data: d,\r\n            stat: getStatByPays(d, statCovid19)\r\n        }\r\n        result.push(object);\r\n        i++;\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nconst getStatByPays = (d, covid19) => {\r\n    let variable = covid19.filter(world => {\r\n        let countryTrimmed = world.country ? world.country.trim() : \"\";\r\n        return countryTrimmed === d.name\r\n    })\r\n    let countryData = variable[0];\r\n    if (countryData) {\r\n        return countryData\r\n    } else {\r\n        return {\r\n            country: d.name\r\n        };\r\n    }\r\n}\r\nexport default { constructData, getStatByPays };","import * as d3 from \"d3\";\r\nimport { Component } from \"react\";\r\nimport DataHelper from \"../../utils/DataHelper.js\";\r\nimport StringUtils from \"../../utils/StringUtils.js\";\r\nimport uihelper from '../../utils/UIHelper';\r\nimport \"./Region.css\";\r\nclass Region extends Component {\r\n\r\n  componentWillUnmount() {\r\n    d3.selectAll(\"#markersDeaths,#markersDesease\").remove();\r\n    //.attr(\"visibility\", \"hidden\").style(\"opacity\",0);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { countries, covid19, context } = this.props;\r\n    this.drawCircles(countries, covid19, context);\r\n    //add zoom\r\n    return \"\";\r\n  }\r\n\r\n\r\n  //Create the world map\r\n  drawCircles = (countries, covid19, context) => {\r\n    let markers ;\r\n    if(context.checkZoneDesease){\r\n      markers = d3.selectAll(\"#markersDesease\");\r\n      d3.selectAll(\"#markersDeaths\").attr(\"visibility\", \"hidden\");\r\n    }\r\n    if(context.checkToggleBTn){\r\n      markers = d3.selectAll(\"#markersDeaths\");\r\n      d3.selectAll(\"#markersDesease\").attr(\"visibility\", \"hidden\");\r\n    }\r\n    if (markers.empty()) {\r\n      var gGlobal = d3.select(\"#gWrapper\");\r\n      //Draw Medias\r\n      this.drawZoneByContext(gGlobal, countries, covid19, context);\r\n      this.drawDimondPrincess(gGlobal, countries, covid19);\r\n    } \r\n    // else {\r\n    //   markers.attr(\"visibility\", \"visible\").style(\"opacity\",1);\r\n    // }\r\n  };\r\n\r\n  drawDimondPrincess = (node, countries, covid19) => {\r\n    let dimondPrincess = countries.filter(e => {\r\n      return e.country == \"DP\";\r\n    });\r\n    let statDP = DataHelper.getStatByPays(\r\n      { name: \"Diamond Princess\" },\r\n      covid19\r\n    );\r\n  };\r\n\r\n  //Add Markers Function\r\n  drawZoneByContext = (node, countries, covid19, context) => {\r\n    let data = DataHelper.constructData(countries, covid19);\r\n    var markers;\r\n    let dataFiltered = this.filterCountriesByContext(data, context);\r\n    if (dataFiltered) {\r\n      markers = node\r\n        .append(\"g\")\r\n        .attr(\"id\", this.getMarkerId(context))\r\n      markers\r\n        .selectAll(\"circle\")\r\n        .data(dataFiltered)\r\n        .enter()\r\n        .append(\"circle\")\r\n        .on(\"click\", (d, i) => {\r\n          this.props.clickOnCircle(d);\r\n        })\r\n        .attr(\"key\", d => `marker-${d.id}`)\r\n        .attr(\"cx\", d => {\r\n          return this.getCx(d);\r\n        })\r\n        .attr(\"cy\", d => {\r\n          return this.getCy(d);\r\n        })\r\n        .attr(\"r\", d => {\r\n          return uihelper.calculateRadius(d, context)/2  + \"px\";\r\n        })\r\n        .attr(\"class\", this.getClassByContext(context))\r\n        .append(\"title\")\r\n        .text(d => {\r\n          return `country : ${d.data.country} cases : ${d.stat.cases}`;\r\n        });\r\n    }\r\n    return markers;\r\n  };\r\n\r\n  getClassByContext = (context)=>{\r\n    if(context.checkToggleBTn){\r\n      return \"marker-black\"\r\n    }else if(context.checkZoneDesease){\r\n      return \"marker-red\"\r\n    }\r\n    \r\n  }\r\n\r\n  getMarkerId = (context)=>{\r\n    if(context.checkToggleBTn){\r\n      return \"markersDeaths\"\r\n    }else if(context.checkZoneDesease){\r\n      return \"markersDesease\"\r\n    }\r\n    \r\n  }\r\n\r\n  filterCountriesByContext = (data, context) => {\r\n    let dataFiltered;\r\n    let dataSorted;\r\n    if (context.checkToggleBTn) {\r\n      dataFiltered = data.filter(\r\n        d =>\r\n          d.stat != null &&\r\n          d.stat.TotalDeaths != 0 &&\r\n          d.stat.TotalDeaths != null &&\r\n          d.data.country != \"DP\"\r\n      );\r\n      dataSorted = dataFiltered.sort((e1, e2) => {\r\n        var totalDeath1Int = parseInt(\r\n          StringUtils.deleteSpecialChar(e1.stat.deaths),\r\n          10\r\n        );\r\n        var totalDeath2Int = parseInt(\r\n          StringUtils.deleteSpecialChar(e2.stat.deaths),\r\n          10\r\n        );\r\n        return totalDeath2Int - totalDeath1Int;\r\n      });\r\n    } else if (context.checkZoneDesease) {\r\n      dataFiltered = data.filter(\r\n        d =>\r\n          d.stat != null &&\r\n          d.stat.ActiveCases != 0 &&\r\n          d.stat.ActiveCases != null &&\r\n          d.data.country != \"DP\"\r\n      );\r\n      dataSorted = dataFiltered.sort((e1, e2) => {\r\n        var activeCase1Int = parseInt(\r\n          StringUtils.deleteSpecialChar(e1.stat.cases),\r\n          10\r\n        );\r\n        var activeCase2Int = parseInt(\r\n          StringUtils.deleteSpecialChar(e2.stat.cases),\r\n          10\r\n        );\r\n        return activeCase2Int - activeCase1Int;\r\n      });\r\n    }\r\n\r\n    return dataSorted;\r\n  };\r\n\r\n  getRadius = (d, context) => {\r\n\r\n    let cases;\r\n    if (context.checkToggleBTn) {\r\n      cases = StringUtils.deleteSpecialChar(d.stat.deaths);\r\n      return this.getRadiusDeath(cases)\r\n    } else if (context.checkZoneDesease) {\r\n      cases = StringUtils.deleteSpecialChar(d.stat.cases);\r\n      return this.getRadiusCases(cases)\r\n    }\r\n  };\r\n  getRadiusCases = (cases)=>{\r\n    let rayon = 0;\r\n    if (0 <= cases && cases < 1000) {\r\n      let r = (cases / 1000) * 5;\r\n      rayon = r;\r\n    } else if (1000 <= cases && cases < 5000) {\r\n      let r = (cases / 5000) * 10;\r\n      rayon = r;\r\n    } else if (5000 <= cases && cases < 10000) {\r\n      let r = (cases / 10000) * 20;\r\n      rayon = r;\r\n    } else if (10000 <= cases && cases < 60000) {\r\n      let r = (cases / 50000) * 50;\r\n      rayon = r;\r\n    }else if (60000 <= cases && cases < 100000) {\r\n      let r = (cases / 100000) * 60;\r\n      rayon = r;\r\n    }\r\n    \r\n    return rayon < 1 && rayon > 0 ? 2 : rayon;\r\n  }\r\n  \r\n  getRadiusDeath = (cases)=>{\r\n    let rayon = 0;\r\n    if (0 <= cases && cases < 1000) {\r\n      let r = (cases / 1000) * 10;\r\n      rayon = r;\r\n    } else if (1000 <= cases && cases < 2000) {\r\n      let r = (cases / 2000) * 30;\r\n      rayon = r;\r\n    } else if (2000 <= cases && cases < 5000) {\r\n      let r = (cases / 5000) * 40;\r\n      rayon = r;\r\n    } else if (5000 <= cases && cases < 15000) {\r\n      let r = (cases / 5000) * 45;\r\n      rayon = r;\r\n    }\r\n    \r\n    return rayon < 1 && rayon > 0 ? 2 : rayon;\r\n  }\r\n  getCx = d => {\r\n    if (StringUtils.isNotEmpty(d)) {\r\n      var x = d.coordinate.latitude;\r\n      var y = d.coordinate.longitude;\r\n\r\n      var coordinate = [x, y];\r\n      return this.projection()(coordinate)[0];\r\n    }\r\n  };\r\n\r\n  getCy = d => {\r\n    if (StringUtils.isNotEmpty(d)) {\r\n      var x = d.coordinate.latitude;\r\n      var y = d.coordinate.longitude;\r\n      var coordinate = [x, y];\r\n      return this.projection()(coordinate)[1];\r\n    }\r\n  };\r\n\r\n  //get node color\r\n  getNodeColor = (id, media) => {\r\n    var childsCount = media.filter(d => d.id === id).length;\r\n    if (childsCount == 0) {\r\n      return \"rgba(65, 131, 215, 1)\";\r\n    } else {\r\n      return \"rgba(214, 69, 65, 1)\";\r\n    }\r\n  };\r\n\r\n  //Projection and path calculator\r\n  projection() {\r\n    var geoMercator = d3\r\n    .geoMercator()\r\n    .center([0,-60])\r\n    .scale(80)\r\n    .translate([800 / 2, 650 / 2]);\r\n\r\n    var projection2 = d3\r\n      .geoOrthographic()\r\n      .scale(300)\r\n      .precision(0.1);\r\n    var projection3 = d3\r\n      .geoConicEqualArea()\r\n      .scale(150)\r\n      .center([0, 33])\r\n      //.translate([width / 2, height / 2])\r\n      .precision(0.3);\r\n    return geoMercator;\r\n  }\r\n  \r\n}\r\n\r\nexport default Region;\r\n","export default __webpack_public_path__ + \"static/media/countries.9e8d431d.tsv\";","import * as d3 from \"d3\";\r\nimport React, { Component } from \"react\";\r\nimport { feature } from \"topojson-client\";\r\nimport CoronaMapView from \"../mapD3/CoronaMapView\";\r\nimport Panel from \"../../panelchart/Panel\";\r\nimport Region from \"../../region/Region\";\r\nimport DataHelper from \"../../../utils/DataHelper.js\";\r\nimport countries110 from \"../../../countries-110m.json\";\r\nimport countries from \"../data/countries.tsv\";\r\n\r\nclass Container extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      worldData: [],\r\n      jsonData: [],\r\n      countries: [],\r\n      pieOpacity: 0,\r\n      panelOpacity: 0,\r\n\r\n      context: {\r\n        checkToggleBTn: false,\r\n        checkZoneDesease: false\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let worldData = countries110;\r\n\r\n    this.setState({\r\n      worldData: feature(worldData, worldData.objects.countries).features,\r\n      jsonData: worldData\r\n    });\r\n\r\n    d3.tsv(countries).then((response, error) => {\r\n      this.setState({\r\n        countries: response\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      worldData,\r\n      jsonData,\r\n      countries,\r\n      panelOpacity,\r\n      context\r\n    } = this.state;\r\n    const { covid19 } = this.props;\r\n    let zoneDeaths = \"\";\r\n\r\n    if (context && (context.checkToggleBTn || context.checkZoneDesease)) {\r\n      zoneDeaths = (\r\n        <Region\r\n          context = {context}\r\n          worldData={worldData}\r\n          countries={countries}\r\n          covid19={covid19}\r\n          clickOnCircle={d => {\r\n            this.clickOnCircle(d);\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    if (jsonData.length != 0 && covid19) {\r\n      return (\r\n        <div>\r\n          <CoronaMapView\r\n            worldData={worldData}\r\n            jsonData={jsonData}\r\n            closePanel={() => {\r\n              this.closePanelDetails();\r\n            }}\r\n            countries={countries}\r\n            covid19={covid19}\r\n            clickOnCountry={d => {\r\n              this.clickOnCountry(d);\r\n            }}\r\n          />\r\n          {zoneDeaths}\r\n          <Panel\r\n            opacity={panelOpacity}\r\n            zIndex={this.state.panelZindex}\r\n            stat={this.state.stat}\r\n            closePanel={() => {\r\n              this.closePanelDetails();\r\n            }}\r\n            x={this.state.x}\r\n            y={this.state.y}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div></div>;\r\n    }\r\n  }\r\n\r\n  getData = data => {\r\n    if (data) {\r\n      return [data.ActiveCases, data.TotalDeaths, data.TotalRecovered];\r\n    } else {\r\n      return [0];\r\n    }\r\n  };\r\n\r\n  clickOnCountry = d => {\r\n    \r\n\r\n    let stat = {};\r\n    let covid19 = this.props.covid19;\r\n    if (d) {\r\n      stat = DataHelper.getStatByPays({ name: d.properties.name }, covid19);\r\n    } else {\r\n      stat = DataHelper.getStatByPays({ name: \"Morocco\" }, covid19);\r\n    }\r\n    let position = this.getPositionPanel();\r\n    this.setState({\r\n      panelOpacity: 1,\r\n      panelZindex: 1,\r\n      stat: stat,\r\n      x: position.x,\r\n      y: position.y \r\n    });\r\n    this.sendSvgToBackground();\r\n    this.props.onclick(d)\r\n  };\r\n\r\n  getPositionPanel = ()=>{\r\n    let panelStatDim = d3.selectAll(\"#panelStat\").node().getBoundingClientRect();\r\n    let leftsideDim = d3.selectAll(\"#leftside\").node().getBoundingClientRect();\r\n    let headerDim = d3.selectAll(\"#header\").node().getBoundingClientRect();\r\n    let x = d3.event.pageX - leftsideDim.width - (panelStatDim.width / 2) - 15\r\n    let y = d3.event.pageY - panelStatDim.height -headerDim.height;\r\n    return {x,y}\r\n  }\r\n\r\n  sendSvgToBackground = () => {\r\n    d3.selectAll(\"#worldMap\").style(\"opacity\", 0.3);\r\n  };\r\n\r\n  sendSvgToFrontPage = () => {\r\n    d3.selectAll(\"#worldMap\").style(\"opacity\", 1);\r\n  };\r\n\r\n  closePanelDetails = () => {\r\n    this.setState({\r\n      panelOpacity: 0,\r\n      panelZindex: -1\r\n    });\r\n    this.sendSvgToFrontPage();\r\n    this.props.initGlobalStat();\r\n  };\r\n}\r\n\r\nexport default Container;\r\n","import React, { useState, ComponentProps } from 'react';\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\n\r\n\r\ntype Props = {\r\n  data: ComponentProps<typeof PieChart>['data'];\r\n  countryClicked : {};\r\n};\r\n\r\nfunction PieChartFullOption(props: Props) {\r\n  const [selected, setSelected] = useState<number | undefined>(0);\r\n  const [hovered, setHovered] = useState<number | undefined>(undefined);\r\n\r\n  const data = props.data.map((entry, i) => {\r\n    if (hovered === i) {\r\n      return {\r\n        ...entry,\r\n        color: 'grey',\r\n      };\r\n    }\r\n    return entry;\r\n  });\r\n\r\n  const lineWidth = 60;\r\n\r\n  return (\r\n    <PieChart\r\n      style={{\r\n        fontFamily:\r\n          '\"Nunito Sans\", -apple-system, Helvetica, Arial, sans-serif',\r\n        fontSize: '8px',\r\n      }}\r\n      data={data}\r\n      radius={PieChart.defaultProps.radius - 6}\r\n      lineWidth={60}\r\n      segmentsStyle={{ transition: 'stroke .3s', cursor: 'pointer' }}\r\n      segmentsShift={(index) => (index === selected ? 6 : 1)}\r\n      animate\r\n      label={({ dataEntry }) => Math.round(dataEntry.percentage) + '%'}\r\n      labelPosition={100 - lineWidth / 2}\r\n      labelStyle={{\r\n        fill: '#fff',\r\n        opacity: 0.75,\r\n        pointerEvents: 'none',\r\n      }}\r\n      onClick={(_, index) => {\r\n        setSelected(index === selected ? undefined : index);\r\n      }}\r\n      onMouseOver={(_, index) => {\r\n        setHovered(index);\r\n      }}\r\n      onMouseOut={() => {\r\n        setHovered(undefined);\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default PieChartFullOption;","import * as React from \"react\";\r\nimport './page1.css'\r\nimport Card from \"../../components/card/Card\";\r\nimport Container from \"../../components/coronadash/container/Container\";\r\nimport PieChartFullOption from \"../../components/pieChart/PieChartFullOption\";\r\n\r\n\r\ninterface Props {\r\n  dataset: any;\r\n  totalInfo: any;\r\n}\r\ninterface State {\r\n  countryClicked: any;\r\n}\r\nexport class Page1 extends React.Component<Props, State>{\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      countryClicked : undefined,\r\n    };\r\n  }\r\n  \r\n  render() {\r\n\r\n    let pieData;\r\n    if (this.state.countryClicked) {\r\n      pieData = this.getPieData(this.state.countryClicked);\r\n    } else {\r\n      pieData = this.getPieData(this.getGlobalStat(this.props.dataset));\r\n    }\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div\r\n          id=\"leftside\"\r\n          className=\"col-2 leftside\"\r\n          style={{\r\n            paddingRight: 0 + \"px\",\r\n            height: window.screen.height + \"px\",\r\n          }}\r\n        >\r\n          <div className=\"row cards\">\r\n            <Card\r\n              covid19={this.props.dataset}\r\n              totalInfo={this.props.totalInfo}\r\n              countryClicked={this.state.countryClicked}\r\n            ></Card>\r\n          </div>\r\n          <div\r\n            className=\"row statistics\"\r\n            style={{\r\n              overflow: \"hidden\",\r\n              width: \"auto\",\r\n              height: \"auto\",\r\n            }}\r\n          >\r\n            <PieChartFullOption\r\n              data={[\r\n                { title: \"total recovered\", value: parseInt(pieData[0]), color: \"rgb(44, 100, 6)\" },\r\n                { title: \"total cases\", value: parseInt(pieData[1]), color: \"rgb(201, 93, 22)\" },\r\n                { title: \"total deaths\", value: parseInt(pieData[2]), color: \"rgb(0, 0, 0)\" },\r\n              ]}\r\n              countryClicked={this.state && this.state.countryClicked}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"col-10\"\r\n          style={{ height: window.screen.height + \"px\" }}\r\n        >\r\n          <div id=\"mapWW\" className=\"col\">\r\n            <Container\r\n              covid19={this.props.dataset}\r\n              onclick={(d) => this.onclickCountry(d)}\r\n              initGlobalStat={() => {\r\n                this.initGlobalStat();\r\n              }}\r\n            ></Container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  clickPrevious() {\r\n  }\r\n\r\n  clickNext() {\r\n  }\r\n\r\n  getPieData = data => {\r\n    if (data) {\r\n      let totalCases = data.cases;\r\n      let totalRecovered = data.recovered;\r\n      let totalDeaths = data.deaths;\r\n      return [totalRecovered, totalCases, totalDeaths];\r\n    } else {\r\n      return [0];\r\n    }\r\n  };\r\n\r\n  getGlobalStat = data => {\r\n    let totalStatistics;\r\n    if (Array.isArray(data) && data.length) {\r\n      //FIXME : refactor this code\r\n      totalStatistics = data.filter(elt => {\r\n        return elt.country == \"Morocco\";\r\n      })[0];\r\n    }\r\n    return totalStatistics;\r\n  };\r\n\r\n  onclickCountry = (d) => {\r\n    var dataset = this.props.dataset;\r\n    var countryFiltered;\r\n    if (!d) {\r\n      countryFiltered = dataset.filter((elt) => {\r\n        return elt.country == \"Morocco\";\r\n      })\r\n    } else {\r\n      countryFiltered = dataset.filter((elt) => {\r\n        return elt.country == d.properties.name;\r\n      })\r\n    }\r\n    this.setState({\r\n      countryClicked: countryFiltered[0]\r\n    })\r\n  }\r\n\r\n\r\n  initGlobalStat = () => {\r\n    this.setState({\r\n      countryClicked: undefined\r\n    })\r\n  }\r\n}","export const columnsSchema = [\r\n    {\r\n      field: \"countryInfo\",\r\n      headerName: \"ID\",\r\n      width: 50,\r\n      valueGetter: (params) => `${params.row.countryInfo.iso3}`,\r\n    },\r\n    { field: \"country\", headerName: \"Country name\", width: 150 },\r\n    { field: \"continent\", headerName: \"Continent\", width: 130 },\r\n    {\r\n      field: \"cases\",\r\n      headerName: \"Total cases\",\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: \"todayCases\",\r\n      headerName: \"Today cases\",\r\n      width: 120,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: \"todayDeaths\",\r\n      headerName: \"Today deaths\",\r\n      description: \"\",\r\n      width: 120,\r\n    },\r\n    {\r\n      field: \"deaths\",\r\n      headerName: \"Total deaths\",\r\n      type: \"number\",\r\n      width: 120,\r\n    },\r\n    {\r\n      field: \"todayRecovered\",\r\n      headerName: \"Today recovered\",\r\n      sortable: true,\r\n      width: 120,\r\n    },\r\n    {\r\n      field: \"recovered\",\r\n      headerName: \"Total recovered\",\r\n      sortable: true,\r\n      width: 120,\r\n    },\r\n  ];","import { DataGrid } from '@mui/x-data-grid';\r\nimport * as React from 'react';\r\nimport { CountryDailyInfo } from '../../models/CountryDailyInfo';\r\nimport './DataTable.css';\r\nimport { columnsSchema } from './schema/schema';\r\n\r\ninterface Props{\r\n  data: CountryDailyInfo[];\r\n}\r\ninterface State{\r\n  \r\n}\r\nexport class DataTable extends React.Component<Props,State>{\r\n\r\n  render(){\r\n    return (\r\n      <div className='data-table'>\r\n        <DataGrid\r\n          rows={this.props.data}\r\n          columns={columnsSchema}\r\n          pageSize={20}\r\n          rowsPerPageOptions={[5]}\r\n          checkboxSelection\r\n          disableSelectionOnClick\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { JsonConvert } from \"json2typescript\";\r\nimport * as React from \"react\";\r\nimport { CountryDailyInfo } from \"../../models/CountryDailyInfo\";\r\nimport { DataTable } from \"../../components/table/DataTable\";\r\n\r\ninterface Props {\r\n    dataset : any;\r\n}\r\nexport class Page2 extends React.Component<Props, Readonly<{}>>{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    render() {\r\n          let jsonConvert: JsonConvert = new JsonConvert();\r\n          let coutriesDailyinfo : CountryDailyInfo[] = jsonConvert.deserializeArray(this.props.dataset, CountryDailyInfo);\r\n        return (\r\n            <div>\r\n                <DataTable data={coutriesDailyinfo}></DataTable>\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from \"react\";\r\nimport * as d3 from \"d3\";\r\ninterface Props {\r\n}\r\nexport class Page3 extends React.Component<Props, Readonly<{}>>{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"my_dataviz\"></div>\r\n        )\r\n    }\r\n}","import * as React from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport { About } from \"../pages/about/About\";\r\nimport { Page1 } from \"../pages/page1/Page1\";\r\nimport { Page2 } from \"../pages/page2/Page2\";\r\nimport { Page3 } from \"../pages/page3/Page3\";\r\n\r\ninterface Props {\r\n    dataset: any;\r\n    totalInfo: any;\r\n}\r\ninterface State {\r\n\r\n}\r\nexport class Router extends React.Component<Props, State> {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Routes>\r\n                    <Route\r\n                        path={\"/\"}\r\n                        element={\r\n                            <Page1 dataset={this.props.dataset} totalInfo={this.props.totalInfo} />\r\n                        }\r\n                    />\r\n                    <Route\r\n                        path={\"/map\"}\r\n                        element={\r\n                            <Page1 dataset={this.props.dataset} totalInfo={this.props.totalInfo} />\r\n                        }\r\n                    />\r\n                    <Route path={\"/stat\"} element={<Page2 dataset={this.props.dataset} />} />\r\n                    <Route path={\"/charts\"} element={<Page3></Page3>} />\r\n                    <Route path={\"/about\"} element={<About />} />\r\n                </Routes>\r\n            </>\r\n        )\r\n    }\r\n}","import { JsonConvert, ValueCheckingMode } from \"json2typescript\";\r\n\r\nexport const WS_ISO2 = \"EH\";\r\n\r\nexport const jsonConvert = (): JsonConvert => {\r\n    let jsonConvert: JsonConvert = new JsonConvert();\r\n    jsonConvert.ignorePrimitiveChecks = false;\r\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL;\r\n    return jsonConvert;\r\n};","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { CountryDailyInfo } from \"./models/CountryDailyInfo\";\r\nimport { TotalInfo } from \"./models/TotalInfo\";\r\nimport { Footer } from \"./pages/footer/footer\";\r\nimport { Header } from \"./pages/header/header\";\r\nimport { Router } from \"./routes/router\";\r\nimport { getTodayCovidData, getTodayTotalCovidData } from \"./services/covidNinja/NinjaService\";\r\nimport { jsonConvert, WS_ISO2 } from \"./utils/Constants\";\r\n\r\ninterface State {\r\n  allCoutriesDailyinfo: CountryDailyInfo[];\r\n  totalInfo: TotalInfo;\r\n  isDataLoaded: boolean;\r\n}\r\n\r\nexport default class App extends Component<Readonly<{}>,State> {\r\n  \r\n  constructor(props ) {\r\n    super(props);\r\n    this.state = {\r\n      ...this.state,\r\n      isDataLoaded: false\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    getTodayCovidData().then((response) => {\r\n      let allDataExceptWS = response.filter((d : CountryDailyInfo) => {\r\n        return d.countryInfo.iso2 !== WS_ISO2;\r\n      });\r\n      let allCoutriesDailyinfo : CountryDailyInfo[] = jsonConvert().deserializeArray(allDataExceptWS, CountryDailyInfo);\r\n      getTodayTotalCovidData().then((response) => {\r\n        let totalInfo : TotalInfo = jsonConvert().deserializeObject(response, TotalInfo);\r\n        this.setState({\r\n          allCoutriesDailyinfo,\r\n          totalInfo,\r\n          isDataLoaded: true,\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  render(){\r\n    if (!this.state.isDataLoaded) {\r\n      return \"\";\r\n    }\r\n    console.log(\"App render\");\r\n    console.log(\"v104\");\r\n    return (\r\n      <div\r\n        className=\"container-fluid\"\r\n        style={{ overflow: \"auto\", height: \"1500px\" }}\r\n      >\r\n        <div id=\"header\" className=\"row\">\r\n          <Header />\r\n        </div>\r\n        <div style={{padding:'0 16px'}}>\r\n          <Router dataset={this.state.allCoutriesDailyinfo} totalInfo={this.state.totalInfo}/>\r\n        </div>\r\n        <div className=\"footer\">\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\nconst URL_DATA_TODAY : string = \"https://corona.lmao.ninja/v2/countries?today&sort\";\r\nconst URL_DATA_TODAY_TOTAL : string = \"https://corona.lmao.ninja/v2/all?today\";\r\n\r\n\r\n    export const getTodayCovidData = ()=>{\r\n        return fetch(URL_DATA_TODAY).then((data)=>{\r\n            return data.json();\r\n        })\r\n    }\r\n\r\n    export const getTodayTotalCovidData  = ()=>{\r\n        return fetch(URL_DATA_TODAY_TOTAL).then((data)=>{\r\n            return data.json();\r\n        })\r\n    }","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// window.screen.orientation.lock('landscape');\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter >\r\n            <App />\r\n        </HashRouter>\r\n    </React.StrictMode>\r\n, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}