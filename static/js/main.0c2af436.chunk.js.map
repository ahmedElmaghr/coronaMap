{"version":3,"sources":["models/CountryInfo.ts","models/CountryDailyInfo.ts","models/TotalInfo.ts","pages/footer/footer.tsx","components/navBar/navbar.tsx","pages/header/header.tsx","pages/about/About.tsx","utils/dateUtils.ts","utils/StringUtils.js","utils/UIHelper.js","components/card/Card.tsx","components/card/Cards.tsx","assets/images/world-map-covid19.jpg","pages/home/home.tsx","components/coronadash/mapD3/Legend.js","components/coronadash/mapD3/CoronaMapView.js","components/panelchart/Panel.js","utils/DataHelper.js","components/region/Region.js","components/coronadash/data/countries.tsv","components/coronadash/container/Container.js","pages/page1/Page1.tsx","components/table/schema/schema.ts","components/table/DataTable.tsx","pages/page2/Page2.tsx","components/barChart/BarChart.tsx","pages/page3/Page3.tsx","components/coronadash/timeRange/TimeRangePicker.tsx","components/select/Select.tsx","models/historical/Timeline.ts","models/historical/HistoricalCountry.ts","services/covidNinja/NinjaService.ts","utils/Constants.ts","components/loading/loading.tsx","dto/selectOptions.ts","routes/navigation.tsx","utils/countries.ts","App.tsx","serviceWorker.js","index.js"],"names":["CountryInfo","JsonObject","JsonProperty","Number","String","this","_id","iso2","iso3","lat","long","flag","CountryDailyInfo","id","updated","country","countryInfo","cases","todayCases","deaths","todayDeaths","recovered","todayRecovered","active","critical","tests","population","continent","TotalInfo","affectedCountries","Footer","className","href","style","color","React","Navbar","type","to","Header","About","formatEpochDateToDate","epoch","Date","toUTCString","deleteSpecialChar","string","split","join","entity","num","toString","replace","getRadiusCases","rayon","getRadiusDeath","value","separator","end","duration","d","context","checkToggleBTn","StringUtils","stat","checkZoneDesease","Card","uihelper","props","title","Component","Cards","totalInfo","totalConfirmed","activeCases","totalDeaths","contentStyle","icon","titleStyle","Home","getPieData","data","totalCases","handleMapLinkMouseEnter","setState","state","display","handleMapLinkMouseLeave","flex","textAlign","onMouseEnter","onMouseLeave","src","mapImage","alt","opacity","Legend","svg","d3","append","attr","text","svgMap","node","getBoundingClientRect","height","width","top","zIndex","CoronaMapView","viewBox","borderColor","mergeMorrocanSahara","g","jsonData","morocco","objects","countries","geometries","filter","morrocanSahara","toBeMerged","datum","merge","calculatePath","getMoroccoCountryColor","covid19","on","clickOnCountry","morrocanTodayCases","c","getCountryColor","addCountriesName","worldData","selectAll","enter","path","centroid","properties","name","drawMap","i","markDesease","elt","e","trim","dailyNewCase","dailyCase","addZoom","call","scaleExtent","translateExtent","extent","closePanel","zoomed","transform","placeLabel","k","projection","geoMercator","center","scale","translate","precision","length","gGlobal","drawSvgWrapper","wrapper","PureComponent","Panel","handleClick","contains","target","handleClickOutside","tagName","getPanelParagraph","label","field","margin","fontSize","fontWeight","document","addEventListener","removeEventListener","x","y","ref","left","maxHeight","maxWidth","onClick","tabIndex","right","getStatByPays","countryData","world","constructData","pays","statCovid19","result","forEach","coordinate","longitude","latitude","object","push","Region","drawCircles","markers","empty","drawZoneByContext","drawDimondPrincess","DataHelper","dataFiltered","filterCountriesByContext","getMarkerId","clickOnCircle","getCx","getCy","getClassByContext","dataSorted","TotalDeaths","sort","e1","e2","totalDeath1Int","parseInt","ActiveCases","activeCase1Int","getRadius","getNodeColor","media","remove","Container","handleMouseOut","closePanelDetails","mouseOverCountry","position","getPositionPanel","panelOpacity","panelZindex","onMouseMoveOverCountry","panelStatDim","headerDim","pageX","pageY","sendSvgToBackground","sendSvgToFrontPage","initGlobalStat","pieOpacity","countries110","feature","features","then","response","error","zoneDeaths","Page1","countryFiltered","dataset","countryClicked","undefined","window","screen","columnsSchema","headerName","valueGetter","params","row","editable","description","sortable","DataTable","rows","columns","pageSize","rowsPerPageOptions","checkboxSelection","disableSelectionOnClick","Page2","coutriesDailyinfo","JsonConvert","deserializeArray","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","DailyNewsTypes","BarChart","TimeRangePicker","errorHandler","onChangeCallback","selectedInterval","updateTimeRange","formaTick","ms","format","disabledIntervals","start","startTime","endTime","step","timelineInterval","onUpdateCallback","formatTick","animatedComponents","makeAnimated","SelectRange","closeMenuOnSelect","components","options","onChange","Timeline","Map","HistoricalCountry","province","timeline","URL_HIST_DATA","getHistoricalDataByCountryAndPeriod","countryName","period","fetch","json","jsonConvert","ignorePrimitiveChecks","valueCheckingMode","ValueCheckingMode","ALLOW_NULL","Loading","console","log","firstCovidDate","selectedStartInit","selectedEndInit","Page3","getOptions","graphTitle","responsive","plugins","legend","getLabels","startDate","endDate","countryHistoricalData","casesAsMAp","Object","entries","keys","it","itAsDate","getDailyDataByType","_x","countryHistData","countryDailyDataAsMap","countryDataPerDay","map","v","array","Math","abs","labels","datasets","CASES","backgroundColor","getTotalDataByType","countryDeathsAsMap","countryDeathsValues","values","DEATHS","handleChangeSelect","isDataLoaded","deserializeObject","countDaysFromStartDay","timeInMilisec","getTime","ceil","countriesRef","SelectOptions","Navigation","element","App","allCoutriesDailyinfo","allDataExceptWS","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sh0GAGaA,IAAb,EADCC,aAAW,eACZ,EACGC,aAAa,MAAOC,QADvB,EAGGD,aAAa,OAAQE,QAHxB,EAKGF,aAAa,OAAQE,QALxB,EAOGF,aAAa,MAAOC,QAPvB,EASGD,aAAa,OAAQC,QATxB,EAWGD,aAAa,OAAQE,QAXxB,mBAcE,aAAe,yNACbC,KAAKC,IAAM,EACXD,KAAKE,KAAO,GACZF,KAAKG,KAAO,GACZH,KAAKI,IAAM,EACXJ,KAAKK,KAAO,EACZL,KAAKM,KAAO,MApBhB,gmBCCaC,IAAb,EADCX,aAAW,oBACZ,EACGC,aAAa,UAAWE,QAD3B,EAIGF,aAAa,UAAWC,QAJ3B,EAMGD,aAAa,UAAWE,QAN3B,EAQGF,aAAa,eARhB,EAUGA,aAAa,QAASC,QAVzB,EAYGD,aAAa,aAAcC,QAZ9B,EAcGD,aAAa,SAAUC,QAd1B,EAgBGD,aAAa,cAAeC,QAhB/B,EAkBGD,aAAa,YAAaC,QAlB7B,EAoBGD,aAAa,iBAAkBC,QApBlC,EAsBGD,aAAa,SAAUC,QAtB1B,EAwBGD,aAAa,WAAYC,QAxB5B,EA0BGD,aAAa,QAASC,QA1BzB,EA4BGD,aAAa,aAAcC,QA5B9B,EA8BGD,aAAa,YAAaE,QA9B7B,mBAiCE,aAAe,gkBACXC,KAAKQ,GAAK,GACZR,KAAKS,QAAU,EACfT,KAAKU,QAAU,GACfV,KAAKW,YAAc,IAAIhB,GACvBK,KAAKY,MAAQ,EACbZ,KAAKa,WAAa,EAClBb,KAAKc,OAAS,EACdd,KAAKe,YAAc,EACnBf,KAAKgB,UAAY,EACjBhB,KAAKiB,eAAiB,EACtBjB,KAAKkB,OAAS,EACdlB,KAAKmB,SAAW,EAChBnB,KAAKoB,MAAQ,EACbpB,KAAKqB,WAAa,EAClBrB,KAAKsB,UAAY,MAhDrB,kiDCDaC,IAAb,EADC3B,aAAW,aACZ,EACGC,aAAa,UAAWC,QAD3B,EAGGD,aAAa,oBAAqBC,QAHrC,GAKGD,aAAa,QAASC,QALzB,GAOGD,aAAa,aAAcC,QAP9B,GASGD,aAAa,SAAUC,QAT1B,GAWGD,aAAa,cAAeC,QAX/B,GAaGD,aAAa,YAAaC,QAb7B,GAeGD,aAAa,iBAAkBC,QAflC,GAiBGD,aAAa,SAAUC,QAjB1B,GAmBGD,aAAa,WAAYC,QAnB5B,GAqBGD,aAAa,QAASC,QArBzB,GAuBGD,aAAa,aAAcC,QAvB9B,oBA0BE,aAAe,yeACbE,KAAKS,QAAU,EACfT,KAAKwB,kBAAoB,EACzBxB,KAAKY,MAAQ,EACbZ,KAAKa,WAAa,EAClBb,KAAKc,OAAS,EACdd,KAAKe,YAAc,EACnBf,KAAKgB,UAAY,EACjBhB,KAAKiB,eAAiB,EACtBjB,KAAKkB,OAAS,EACdlB,KAAKmB,SAAW,EAChBnB,KAAKoB,MAAQ,EACbpB,KAAKqB,WAAa,KAtCtB,2xC,iBCDaI,GAAb,gKAEI,WAEI,OACI,uCACI,iCACI,oBAAGC,UAAU,sBAAsB,cAAY,SAC/C,qBACIC,KAAK,gDACLD,UAAU,cACVE,MAAO,CAAEC,MAAO,SAHpB,UAKK,IALL,0BASJ,sBAAKH,UAAU,UAAf,4BAjBhB,GAA4BI,cCkFbC,I,OAjFA,WACX,OACI,qCACI,uBAAKL,UAAU,8CAAf,UACI,yBAAQA,UAAU,iBAAiBM,KAAK,SAAS,cAAY,WAAW,cAAY,qBAAqB,gBAAc,oBAAoB,gBAAc,QAAQ,aAAW,oBAA5K,SACI,uBAAMN,UAAU,0BAEpB,sBAAKA,UAAU,2BAA2BlB,GAAG,oBAA7C,SACI,sBAAIkB,UAAU,aAAd,UACI,qBAAIA,UAAU,WAAd,SACI,gBAAC,KAAD,CAASO,GAAG,IAAIP,UAAU,WAA1B,UACI,oBAAGA,UAAU,aAAa,cAAY,SACrC,IAFL,aAKJ,qBAAIA,UAAU,WAAd,SACI,gBAAC,KAAD,CAASO,GAAG,QAAQP,UAAU,WAA9B,UACA,oBAAGA,UAAU,cAAc,cAAY,SACtC,IAFD,kBAKJ,qBAAIA,UAAU,WAAd,SACI,gBAAC,KAAD,CAASO,GAAG,UAAUP,UAAU,WAAhC,UACA,oBAAGA,UAAU,mBAAmB,cAAY,SAC3C,IAFD,eAKJ,qBAAIA,UAAU,YAAd,SACA,gBAAC,KAAD,CAASO,GAAG,OAAOP,UAAU,WAA7B,UACI,oBAAGA,UAAU,YAAY,cAAY,SACpC,IAFL,wBC3BXQ,GAAb,gKAEI,WAEI,OACI,qCACI,uBAAKR,UAAU,SAAf,UAEI,eAAC,GAAD,IAEA,sDAAuB,oBAAGA,UAAU,cAAc,cAAY,qBAVlF,GAA4BI,c,SCFfK,GAAO,WAEhB,OACI,mD,SCLKC,GAAwB,SAACC,GAEpC,OADQ,IAAIC,KAAKD,GACRE,e,qBCMHC,GAAoB,SAACC,GACzB,GAAoB,iBAAVA,EACR,KAAM,wDAIR,OAFeA,EAAOC,MAAP,KAAkBC,KAAK,KAc3B,GAzBM,SAAAC,GAClB,MAAiB,IAAVA,GAA0B,MAAVA,GAwBX,GAAaJ,GAAb,GAJgB,SAACK,GAC5B,OAAOA,EAAIC,WAAWC,QAAQ,wBAAyB,MCIrDC,GAAiB,SAACpC,GACtB,IAAIqC,EAAQ,EACZ,GAAI,GAAKrC,GAASA,EAAQ,IAExBqC,EADSrC,EAAQ,IAAQ,OAEpB,GAAI,KAAQA,GAASA,EAAQ,IAAM,CAExCqC,EADSrC,EAAQ,IAAQ,QAEpB,GAAI,KAAQA,GAASA,EAAQ,IAAO,CAEzCqC,EADSrC,EAAQ,IAAS,QAErB,GAAI,KAASA,GAASA,EAAQ,IAAO,CAE1CqC,EADSrC,EAAQ,IAAS,QAEtB,GAAI,KAASA,GAASA,EAAQ,IAAQ,CAE1CqC,EADSrC,EAAQ,IAAU,GAI7B,OAAOqC,EAAQ,GAAKA,EAAQ,EAAI,EAAIA,GAGhCC,GAAiB,SAACtC,GACtB,IAAIqC,EAAQ,EACZ,GAAI,GAAKrC,GAASA,EAAQ,IAExBqC,EADSrC,EAAQ,IAAQ,OAEpB,GAAI,KAAQA,GAASA,EAAQ,IAAM,CAExCqC,EADSrC,EAAQ,IAAQ,QAEpB,GAAI,KAAQA,GAASA,EAAQ,IAAM,CAExCqC,EADSrC,EAAQ,IAAQ,QAEpB,GAAI,KAAQA,GAASA,EAAQ,KAAO,CAEzCqC,EADSrC,EAAQ,IAAQ,QAGzBqC,EAAQ,GAGV,OAAOA,EAAQ,GAAKA,EAAQ,EAAI,EAAIA,GAGxB,GAhEoB,SAACE,GAC/B,OACE,eAAC,KAAD,CACEC,UAAU,IACVC,IAAKF,EACLG,SAAU,OA2DJ,GAtDY,SAACC,EAAGC,GAC5B,IAAI5C,EACJ,OAAI4C,EAAQC,gBACV7C,EAAQ8C,GAA8BH,EAAEI,KAAK7C,QACtCoC,GAAetC,IACb4C,EAAQI,kBACjBhD,EAAQ8C,GAA8BH,EAAEI,KAAK/C,OACtCoC,GAAepC,SAFjB,GCRYiD,I,uKACjB,WACI,OACI,uBAAKnC,UAAU,OAAf,UACI,sBAAKA,UAAW,cAAhB,SAAgCoC,GAAmC9D,KAAK+D,MAAMZ,SAC9E,uBAAKzB,UAAW,cAAhB,kBAA8F1B,KAAK+D,MAAMC,SACzG,uBAAKtC,UAAU,eAAf,0BAA4C1B,KAAK+D,MAAMtD,kB,GANrCwD,eCJbC,G,gKACnB,WACE,IAAQC,EAAcnE,KAAK+D,MAAnBI,UAGJC,EAAiBD,EAAUvD,MAC3ByD,EAAcF,EAAUtD,WACxBG,EAAYmD,EAAUlD,eACtBqD,EAAcH,EAAUrD,OACxBL,EAAU0D,EAAU1D,QAExB,OACE,uCACE,uBAAKiB,UAAU,wBAAf,UACE,eAAC,GAAD,CACEsC,MAAM,kBACNO,aAAa,cACbC,KAAK,cACLC,WAAW,YACXtB,MAAOiB,EACP3D,QAAS2B,GAAsB3B,KAEjC,eAAC,GAAD,CACEuD,MAAM,cACNO,aAAa,iBACbC,KAAK,kBACLC,WAAW,eACXtB,MAAOkB,EACP5D,QAAS2B,GAAsB3B,QAGnC,uBAAKiB,UAAU,yBAAf,UACE,eAAC,GAAD,CACEsC,MAAM,mBACNO,aAAa,gBACbC,KAAK,kBACLC,WAAW,cACXtB,MAAOmB,EACP7D,QAAS2B,GAAsB3B,KAGjC,eAAC,GAAD,CACEuD,MAAM,kBACNO,aAAa,gBACbC,KAAK,cACLC,WAAW,cACXtB,MAAOnC,EACPP,QAAS2B,GAAsB3B,e,GA/CRwD,cCTpB,I,OAAA,IAA0B,+CCa5BS,GAAb,oDAEE,WAAYX,GAAQ,IAAD,+BACjB,cAAMA,IAMRY,WAAa,SAACC,GACZ,GAAIA,EAAM,CACR,IAAIC,EAAaD,EAAKhE,MAGtB,MAAO,CAFcgE,EAAK5D,UAEF6D,EADND,EAAK9D,QAGvB,MAAO,CAAC,IAdO,EAiBnBgE,wBAA0B,WACxB,EAAKC,SAAL,6BACK,EAAKC,OADV,IAEEC,SAAS,MApBM,EAuBnBC,wBAA0B,WACxB,EAAKH,SAAL,6BACK,EAAKC,OADV,IAEEC,SAAS,MAxBX,EAAKD,MAAQ,CACXC,SAAS,GAHM,EAFrB,2CA+BE,WAAU,IAAD,OAKP,OAFUjF,KAAK2E,WAAW3E,KAAK+D,MAAMI,WAGnC,qCACE,uBAAKzC,UAAU,OAAf,UACE,uBAAKA,UAAU,MAAME,MAAO,CAACqD,QAAQ,QAArC,UACE,sBAAKvD,UAAU,QAAQE,MAAO,CAAEuD,KAAM,EAAGC,UAAW,YACpD,sBAAK1D,UAAU,QAAQE,MAAO,CAAEuD,KAAM,EAAGC,UAAW,UAApD,SACA,eAAC,KAAD,CAAMnD,GAAG,QAAQP,UAAU,OAA3B,uCAGF,sBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,eAAf,SACE,eAAC,GAAD,CACEyC,UAAWnE,KAAK+D,MAAMI,gBAI5B,uBAAKzC,UAAU,MAAME,MAAO,CAAEqD,QAAS,QAAvC,UACE,sBAAKvD,UAAU,QAAQE,MAAO,CAAEuD,KAAM,KAEtC,uBAAKzD,UAAU,QAAQE,MAAO,CAAEuD,KAAM,EAAGC,UAAW,UAApD,UACE,eAAC,KAAD,CAASnD,GAAG,OAAOP,UAAU,OAA7B,0CACA,sBAAKA,UAAU,OAAO2D,aAAc,kBAAM,EAAKP,2BAA2BQ,aAAc,kBAAM,EAAKJ,2BAAnG,SACE,eAAC,KAAD,CAASjD,GAAG,OAAZ,SACE,sBAAKsD,IAAKC,GAAUC,IAAI,GAAG7D,MAAO,CAAE8D,QAAS1F,KAAKgF,MAAMC,QAAU,EAAI,yBA3DxF,GAA0BnD,c,mBCTL6D,I,yLACnB,WACE,IAAIC,EAAMC,KAAU,WAEpBD,EAAIE,OAAO,QAAQC,KAAK,IAAI,GAAGA,KAAK,IAAI,GAAGA,KAAK,QAAS,IAAIA,KAAK,SAAU,IAAInE,MAAM,OAAQ,WAC9FgE,EAAIE,OAAO,QAAQC,KAAK,IAAI,GAAGA,KAAK,IAAI,IAAIA,KAAK,QAAS,IAAIA,KAAK,SAAU,IAAInE,MAAM,OAAQ,WAC/FgE,EAAIE,OAAO,QAAQC,KAAK,IAAI,GAAGA,KAAK,IAAI,IAAIA,KAAK,QAAS,IAAIA,KAAK,SAAU,IAAInE,MAAM,OAAQ,WAC/FgE,EAAIE,OAAO,QAAQC,KAAK,IAAI,GAAGA,KAAK,IAAI,IAAIA,KAAK,QAAS,IAAIA,KAAK,SAAU,IAAInE,MAAM,OAAQ,WAC/FgE,EAAIE,OAAO,QAAQC,KAAK,IAAI,GAAGA,KAAK,IAAI,IAAIA,KAAK,QAAS,IAAIA,KAAK,SAAU,IAAInE,MAAM,OAAQ,WAC/FgE,EAAIE,OAAO,QAAQC,KAAK,IAAI,GAAGA,KAAK,IAAI,KAAKA,KAAK,QAAS,IAAIA,KAAK,SAAU,IAAInE,MAAM,OAAQ,WAChGgE,EAAIE,OAAO,QAAQC,KAAK,IAAI,GAAGA,KAAK,IAAI,KAAKA,KAAK,QAAS,IAAIA,KAAK,SAAU,IAAInE,MAAM,OAAQ,WAEhGgE,EAAIE,OAAO,QAAQC,KAAK,IAAK,IAAIA,KAAK,IAAK,IAAIC,KAAK,KAAKpE,MAAM,YAAa,QAAQmE,KAAK,qBAAqB,UAC9GH,EAAIE,OAAO,QAAQC,KAAK,IAAK,IAAIA,KAAK,IAAK,IAAIC,KAAK,UAAUpE,MAAM,YAAa,QAAQmE,KAAK,qBAAqB,UACnHH,EAAIE,OAAO,QAAQC,KAAK,IAAK,IAAIA,KAAK,IAAK,IAAIC,KAAK,YAAYpE,MAAM,YAAa,QAAQmE,KAAK,qBAAqB,UACrHH,EAAIE,OAAO,QAAQC,KAAK,IAAK,IAAIA,KAAK,IAAK,IAAIC,KAAK,cAAcpE,MAAM,YAAa,QAAQmE,KAAK,qBAAqB,UACvHH,EAAIE,OAAO,QAAQC,KAAK,IAAK,IAAIA,KAAK,IAAK,IAAIC,KAAK,kBAAkBpE,MAAM,YAAa,QAAQmE,KAAK,qBAAqB,UAC3HH,EAAIE,OAAO,QAAQC,KAAK,IAAK,IAAIA,KAAK,IAAK,KAAKC,KAAK,YAAYpE,MAAM,YAAa,QAAQmE,KAAK,qBAAqB,UACtHH,EAAIE,OAAO,QAAQC,KAAK,IAAK,IAAIA,KAAK,IAAK,KAAKC,KAAK,kBAAkBpE,MAAM,YAAa,QAAQmE,KAAK,qBAAqB,Y,oBAK9H,WACE,IAAIE,EAASJ,KAAa,YAAYK,OAAOC,wBAC7C,OACE,sBAAKzE,UAAU,SAASE,MAAS,CAACwE,OAAO,MAAMC,MAAM,MAAMC,IAAoB,GAAdL,EAAOG,OAAUG,OAAO,GAAzF,SACE,sBAAM/F,GAAK,SAASoB,MAAS,CAACwE,OAAO,OAAOC,MAAM,gB,GA3BtBpC,eCGfuC,G,oDAOnB,WAAYzC,GAAQ,IAAD,+BACjB,cAAMA,IALRsC,MAAQ,OAIW,EAHnBD,OAAS,OAGU,EAFnBK,QAEmB,gBADnBC,YAAc,OACK,EAqBnBC,oBAAsB,SAAAC,GAEpB,IAAIC,EAAW,EAAK9C,MAAM8C,SAGtBC,EAAUD,EAASE,QAAQC,UAAUC,WAAWC,QAClD,SAAA3D,GAAC,OAAY,KAARA,EAAE/C,MAEL2G,EAAiBN,EAASE,QAAQC,UAAUC,WAAWC,QACzD,SAAA3D,GAAC,OAAY,KAARA,EAAE/C,MAEL4G,EAAa,CAACN,EAAQ,GAAIK,EAAe,IAE7CP,EAAEd,OAAO,QACNuB,MAAMC,aAAMT,EAAUO,IACtBrB,KAAK,QAAS,WACdA,KAAK,KAAK,SAAAxC,GAAC,OAAI,EAAKgE,cAAchE,MAClCwC,KAAK,OAAQ,EAAKyB,uBAAuB,EAAKzD,MAAM0D,UACpDC,GAAG,SAAS,SAACnE,GACZ,EAAKQ,MAAM4D,oBAEZD,GAAG,YAAY,SAACnE,QA1CF,EA+ClBiE,uBAAyB,SAAC5C,GACzB,IACIgD,EADgBhD,EAAKsC,QAAO,SAAAW,GAAC,MAAiB,WAAbA,EAAEnH,WACF,GAAGG,WACxC,OAAO,EAAKiH,gBAAgBF,IAlDX,EAqDlBG,iBAAmB,SAACnB,EAAGoB,GACtBpB,EAAEqB,UAAU,gBACTrD,KAAKoD,GACLE,QACApC,OAAO,QACPC,KAAK,QAAS,eACdA,KAAK,KAAK,SAACxC,GACV,OAAO,EAAK4E,OAAOC,SAAS7E,GAAG,MAEhCwC,KAAK,KAAK,SAACxC,GACV,OAAO,EAAK4E,OAAOC,SAAS7E,GAAG,MAEhCyC,MAAK,SAACzC,GACL,OAAOA,EAAE8E,WAAWC,SAlEP,EA8FnBC,QAAU,SAACrC,EAAM8B,GACb,IAAIpB,EAAIV,EACLJ,OAAO,KACPC,KAAK,KAAM,YACXA,KAAK,YAAa,aAiBrB,OAhBAa,EAAEqB,UAAU,QACTrD,KAAKoD,GACLE,QACApC,OAAO,QACPC,KAAK,OAAO,SAACxC,EAAGiF,GAAJ,qBAAkBA,MAC9BzC,KAAK,KAAK,SAAAxC,GAAC,OAAI,EAAKgE,cAAchE,MAClCwC,KAAK,QAAS,WACdA,KAAK,QAAQ,SAACxC,GACb,OAAO,EAAKkF,YAAYlF,MAEzBmE,GAAG,SAAS,SAACnE,GACZ,EAAKQ,MAAM4D,eAAepE,MAE3BmE,GAAG,YAAY,SAACnE,OAGZqD,GAnHQ,EAwHnB6B,YAAc,SAAClF,GACb,IAAImF,EAAM,EAAK3E,MAAM0D,QAAQP,QAAO,SAACyB,GAGnC,OAFqBA,EAAEjI,QAAUiI,EAAEjI,QAAQkI,OAAS,KAE3BrF,EAAE8E,WAAWC,QAExC,GAAII,EAAI,GAAI,CACV,IAAIG,EAAeH,EAAI,GAAG7H,WAC1B,OAAO,EAAKiH,gBAAgBe,GAG5B,MAAM,0BAnIS,EAwInBf,gBAAkB,SAACgB,GACjB,OAAgB,GAAbA,EACM,UAEA,GAAKA,GAAaA,GAAa,GAC/B,UAEA,IAAMA,GAAaA,GAAa,IAChC,UAEA,KAAOA,GAAaA,EAAY,IAChC,UAEA,MAAQA,GAAaA,EAAY,IACjC,UAECA,GAAY,IACb,eADH,GAxJW,EAiKnBC,QAAU,SAAAnD,GACR,IACMS,EADMR,KAAU,QACJK,OAAOC,wBAAwBE,MAC3CD,EAASC,EAAQ,EAEvBT,EAAIoD,KAAKnD,OACRoD,YAAY,CAAC,EAAG,KAChBC,gBAAgB,CAAC,CAAC,EAAE,GAAI,CAAC7C,EAAOD,KAChC+C,OAAO,CAAC,CAAC,EAAG,GAAI,CAAC9C,EAAOD,KACxBsB,GAAG,QAAQ,WACV,EAAK3D,MAAMqF,aACX,EAAKC,OAAOzD,QA5KG,EAgLnByD,OAAS,SAAAzD,GACP,IAAI0D,EAAYzD,KAASyD,UACzB1D,EAAIqC,UAAU,qBAAqBlC,KAAK,YAAauD,GACrD,IAAIC,EAAa1D,KAAa,gBAG5B2D,EAAIF,EAAUE,EAEfA,GAAG,GAAKA,EAAE,GACXD,EACC3H,MAAM,YAAa,OACnBA,MAAM,eAAgB,UAEtBA,MAAM,aAAa,WACb4H,GAAG,GACVD,EACC3H,MAAM,YAAa,OACnBA,MAAM,eAAgB,WAEtBA,MAAM,aAAa,WAGpB2H,EACC3H,MAAM,aAAa,WAvMH,EA6MnB6H,WAAa,WACX,IAAIC,EAAc7D,OAEf8D,OAAO,CAAC,GAAG,KACXC,MAAM,IACNC,UAAU,CAAC,IAAS,MAELhE,OAEf8D,OAAO,CAAC,GAAG,KACXC,MAAM,KACNE,UAAU,IACKjE,OAEf+D,MAAM,KACND,OAAO,CAAC,EAAG,MAEXG,UAAU,IACb,OAAOJ,GA/NU,EAkOnBnC,cAAgB,SAAAhE,GACd,OAAOsC,OAAa4D,WAAW,EAAKA,aAA7B5D,CAA2CtC,IAnOjC,EAsOnB4E,KAAO,WACL,OAAOtC,OAAa4D,WAAW,EAAKA,eAvOnB,E,uDAInB,WACE,GAAkC,GAA9BzJ,KAAK+D,MAAM8C,SAASkD,OAAa,CAEnC,IACIC,EADMhK,KAAKiK,iBACGnE,OAAO,KAAKC,KAAK,KAAM,YAErCa,EAAI5G,KAAKuI,QAAQyB,EAAShK,KAAK+D,MAAMiE,WAEzChI,KAAK2G,oBAAoBC,GAEzB5G,KAAK+H,iBAAiBnB,EAAE5G,KAAK+D,MAAMiE,WAEnC,IAAIkC,EAAUrE,KAAU,YACxB7F,KAAK+I,QAAQmB,M,oBAqDjB,WACE,OACE,eAAC,GAAD,M,4BAMJ,WAYE,OAVWrE,KAAU,UAGlBC,OAAO,OACPC,KAAK,QAAS,OACdA,KAAK,KAAM,WACXA,KAAK,QAAS/F,KAAKqG,OAEnBN,KAAK,UAAW/F,KAAKyG,a,GA/Fe0D,kBCHtBC,I,sNAUnBC,YAAY,SAAC1B,GACR,EAAKzC,KAAKoE,SAAS3B,EAAE4B,SAGxB,EAAKC,mBAAmB7B,I,EAG1B6B,mBAAmB,SAAC7B,GACI,SAAnBA,EAAE4B,OAAOE,SAAuC,WAAnB9B,EAAE4B,OAAOE,SACvC,EAAK1G,MAAMqF,c,EAmHfsB,kBAAoB,SAAC/G,EAAK9B,EAAM8I,EAAMC,GACpC,OAAO,qBACPhJ,MAAO,CACLC,QAEAgJ,OAAQ,kBAERC,SAAU,OACVC,WAAY,QAPP,UAWNJ,EAAQ,KACPhH,GAAQD,GAAuBC,EAAKiH,IAAWlH,GAAiCC,EAAKiH,IAAU,Q,yDAjJnG,WACEI,SAASC,iBAAiB,QAAQjL,KAAKqK,aAAY,K,kCAGrD,WACEW,SAASE,oBAAoB,QAAQlL,KAAKqK,aAAY,K,oBAgBxD,WAAU,IAAD,OACP,EAAqCrK,KAAK+D,MAApCJ,EAAN,EAAMA,KAAM+B,EAAZ,EAAYA,QAAQa,EAApB,EAAoBA,OAAQ4E,EAA5B,EAA4BA,EAAGC,EAA/B,EAA+BA,EAC/B,OACE,sBAAKC,IAAK,SAACnF,GAAD,OAAW,EAAKA,KAAOA,GAAjC,SACE,uBACE1F,GAAG,YACHkB,UAAU,8CACVE,MAAO,CACL0E,IAAK8E,EAAI,KACTE,KAAMH,EAAI,KACVzF,QAASA,EACTa,OAAQA,GAPZ,UAUE,sBAAK7E,UAAU,uBACf,sBAAKA,UAAU,yBAAf,SACE,uBACEA,UAAU,0CACVE,MAAO,CAAE2J,UAAW,QAAYC,SAAU,SAF5C,UAIE,uBACE9J,UAAU,aACV+J,QAAS,WACP,EAAK1H,MAAMqF,cAHf,eAQA,uBAAK1H,UAAU,WAAf,UACE,+BACE,uBAAKA,UAAU,6BAAf,UACE,sBAAKA,UAAY,UAAS6D,IAAK5B,GAAMA,EAAKhD,YAAagD,EAAKhD,YAAYL,KAAa,KACpF,IACD,gCAAOqD,EAAOA,EAAKjD,QAAU,UAIjC,iCACE,oBAAGgB,UAAU,cAAb,wBACC1B,KAAK0K,kBACJ/G,EACA,QACA,gBACA,kBAED3D,KAAK0K,kBACJ/G,EACA,aACA,YACA,cAED3D,KAAK0K,kBACJ/G,EACA,UACA,aACA,eAEF,oBAAGjC,UAAU,cAAb,mBACC1B,KAAK0K,kBACJ/G,EACA,QACA,kBACA,aAED3D,KAAK0K,kBACJ/G,EACA,QACA,eACA,UAED3D,KAAK0K,kBACJ/G,EACA,aACA,cACA,SAED3D,KAAK0K,kBACJ/G,EACA,QACA,cACA,eAIN,sBACEjC,UAAU,aACVE,MAAO,CAAE0J,KAAM,MAAUhF,IAAK,OAFhC,SAIE,sBACE5E,UAAU,cACVgK,SAAS,IACT9J,MAAO,CAAE0J,KAAM,MAAUjF,MAAO,WAGpC,sBACE3E,UAAU,aACVE,MAAO,CAAE0E,IAAK,MAAUqF,MAAO,OAFjC,SAIE,sBACEjK,UAAU,cACVgK,SAAS,IACT9J,MAAO,CAAE0E,IAAK,MAAUF,OAAQ,yB,GA5HftE,KAAMmC,YCmBnC2H,GAAgB,SAACrI,EAAGkE,GACtB,IAIIoE,EAJWpE,EAAQP,QAAO,SAAA4E,GAE1B,OADqBA,EAAMpL,QAAUoL,EAAMpL,QAAQkI,OAAS,MAClCrF,EAAE+E,QAEL,GAC3B,OAAIuD,GAGO,CACHnL,QAAS6C,EAAE+E,OAIR,IAAEyD,cApCK,SAACC,EAAMC,GACzB,IAAIC,EAAS,GACT1D,EAAI,EAiBR,OAhBAwD,EAAKG,SAAQ,SAAC5I,GACV,IAAI6I,EAAa,CACbC,UAAW9I,EAAE8I,UACbC,SAAU/I,EAAE+I,UAGZC,EAAS,CACT/L,GAAIgI,EACJ4D,aACAxH,KAAMrB,EACNI,KAAMiI,GAAcrI,EAAG0I,IAE3BC,EAAOM,KAAKD,GACZ/D,OAGG0D,GAiBqBN,kBC/B1Ba,I,sNAiBJC,YAAc,SAAC1F,EAAWS,EAASjE,GACjC,IAAImJ,EASJ,GARGnJ,EAAQI,mBACT+I,EAAU9G,KAAa,mBACvBA,KAAa,kBAAkBE,KAAK,aAAc,WAEjDvC,EAAQC,iBACTkJ,EAAU9G,KAAa,kBACvBA,KAAa,mBAAmBE,KAAK,aAAc,WAEjD4G,EAAQC,QAAS,CACnB,IAAI5C,EAAUnE,KAAU,aAExB,EAAKgH,kBAAkB7C,EAAShD,EAAWS,EAASjE,GACpD,EAAKsJ,mBAAmB9C,EAAShD,EAAWS,K,EAOhDqF,mBAAqB,SAAC5G,EAAMc,EAAWS,GAChBT,EAAUE,QAAO,SAAAyB,GACpC,MAAoB,MAAbA,EAAEjI,WAEEqM,GAAWnB,cACtB,CAAEtD,KAAM,oBACRb,I,EAKJoF,kBAAoB,SAAC3G,EAAMc,EAAWS,EAASjE,GAC7C,IACImJ,EADA/H,EAAOmI,GAAWhB,cAAc/E,EAAWS,GAE3CuF,EAAe,EAAKC,yBAAyBrI,EAAMpB,GA6BvD,OA5BIwJ,IACFL,EAAUzG,EACPJ,OAAO,KACPC,KAAK,KAAM,EAAKmH,YAAY1J,KAE5ByE,UAAU,UACVrD,KAAKoI,GACL9E,QACApC,OAAO,UACP4B,GAAG,SAAS,SAACnE,EAAGiF,GACf,EAAKzE,MAAMoJ,cAAc5J,MAE1BwC,KAAK,OAAO,SAAAxC,GAAC,uBAAcA,EAAE/C,OAC7BuF,KAAK,MAAM,SAAAxC,GACV,OAAO,EAAK6J,MAAM7J,MAEnBwC,KAAK,MAAM,SAAAxC,GACV,OAAO,EAAK8J,MAAM9J,MAEnBwC,KAAK,KAAK,SAAAxC,GACT,OAAOO,GAAyBP,EAAGC,GAAS,EAAK,QAElDuC,KAAK,QAAS,EAAKuH,kBAAkB9J,IACrCsC,OAAO,SACPE,MAAK,SAAAzC,GACJ,MAAM,aAAN,OAAoBA,EAAEqB,KAAKlE,QAA3B,oBAA8C6C,EAAEI,KAAK/C,UAGpD+L,G,EAGTW,kBAAoB,SAAC9J,GACnB,OAAGA,EAAQC,eACF,eACAD,EAAQI,iBACR,kBADH,G,EAMRsJ,YAAc,SAAC1J,GACb,OAAGA,EAAQC,eACF,gBACAD,EAAQI,iBACR,sBADH,G,EAMRqJ,yBAA2B,SAACrI,EAAMpB,GAChC,IACI+J,EAyCJ,OAxCI/J,EAAQC,eAQV8J,EAPe3I,EAAKsC,QAClB,SAAA3D,GAAC,OACW,MAAVA,EAAEI,MACoB,GAAtBJ,EAAEI,KAAK6J,aACe,MAAtBjK,EAAEI,KAAK6J,aACW,MAAlBjK,EAAEqB,KAAKlE,WAEe+M,MAAK,SAACC,EAAIC,GAClC,IAAIC,EAAiBC,SACnBnK,GAA8BgK,EAAG/J,KAAK7C,QACtC,IAMF,OAJqB+M,SACnBnK,GAA8BiK,EAAGhK,KAAK7C,QACtC,IAEsB8M,KAEjBpK,EAAQI,mBAQjB2J,EAPe3I,EAAKsC,QAClB,SAAA3D,GAAC,OACW,MAAVA,EAAEI,MACoB,GAAtBJ,EAAEI,KAAKmK,aACe,MAAtBvK,EAAEI,KAAKmK,aACW,MAAlBvK,EAAEqB,KAAKlE,WAEe+M,MAAK,SAACC,EAAIC,GAClC,IAAII,EAAiBF,SACnBnK,GAA8BgK,EAAG/J,KAAK/C,OACtC,IAMF,OAJqBiN,SACnBnK,GAA8BiK,EAAGhK,KAAK/C,OACtC,IAEsBmN,MAIrBR,G,EAGTS,UAAY,SAACzK,EAAGC,GAEd,IAAI5C,EACJ,OAAI4C,EAAQC,gBACV7C,EAAQ8C,GAA8BH,EAAEI,KAAK7C,QACtC,EAAKoC,eAAetC,IAClB4C,EAAQI,kBACjBhD,EAAQ8C,GAA8BH,EAAEI,KAAK/C,OACtC,EAAKoC,eAAepC,SAFtB,G,EAKToC,eAAiB,SAACpC,GAChB,IAAIqC,EAAQ,EACZ,GAAI,GAAKrC,GAASA,EAAQ,IAExBqC,EADSrC,EAAQ,IAAQ,OAEpB,GAAI,KAAQA,GAASA,EAAQ,IAAM,CAExCqC,EADSrC,EAAQ,IAAQ,QAEpB,GAAI,KAAQA,GAASA,EAAQ,IAAO,CAEzCqC,EADSrC,EAAQ,IAAS,QAErB,GAAI,KAASA,GAASA,EAAQ,IAAO,CAE1CqC,EADSrC,EAAQ,IAAS,QAEtB,GAAI,KAASA,GAASA,EAAQ,IAAQ,CAE1CqC,EADSrC,EAAQ,IAAU,GAI7B,OAAOqC,EAAQ,GAAKA,EAAQ,EAAI,EAAIA,G,EAGtCC,eAAiB,SAACtC,GAChB,IAAIqC,EAAQ,EACZ,GAAI,GAAKrC,GAASA,EAAQ,IAExBqC,EADSrC,EAAQ,IAAQ,QAEpB,GAAI,KAAQA,GAASA,EAAQ,IAAM,CAExCqC,EADSrC,EAAQ,IAAQ,QAEpB,GAAI,KAAQA,GAASA,EAAQ,IAAM,CAExCqC,EADSrC,EAAQ,IAAQ,QAEpB,GAAI,KAAQA,GAASA,EAAQ,KAAO,CAEzCqC,EADSrC,EAAQ,IAAQ,GAI3B,OAAOqC,EAAQ,GAAKA,EAAQ,EAAI,EAAIA,G,EAEtCmK,MAAQ,SAAA7J,GACN,GAAIG,GAAuBH,GAAI,CAC7B,IAGI6I,EAAa,CAHT7I,EAAE6I,WAAWE,SACb/I,EAAE6I,WAAWC,WAGrB,OAAO,EAAK5C,YAAL,CAAkB2C,GAAY,K,EAIzCiB,MAAQ,SAAA9J,GACN,GAAIG,GAAuBH,GAAI,CAC7B,IAEI6I,EAAa,CAFT7I,EAAE6I,WAAWE,SACb/I,EAAE6I,WAAWC,WAErB,OAAO,EAAK5C,YAAL,CAAkB2C,GAAY,K,EAKzC6B,aAAe,SAACzN,EAAI0N,GAElB,OAAmB,GADDA,EAAMhH,QAAO,SAAA3D,GAAC,OAAIA,EAAE/C,KAAOA,KAAIuJ,OAExC,wBAEA,wB,2DA9NX,WACElE,KAAa,kCAAkCsI,W,oBAIjD,WAEE,MAAwCnO,KAAK+D,MAArCiD,EAAR,EAAQA,UAAWS,EAAnB,EAAmBA,QAASjE,EAA5B,EAA4BA,QAG5B,OAFAxD,KAAK0M,YAAY1F,EAAWS,EAASjE,GAE9B,K,wBAyNT,WACE,IAAIkG,EAAc7D,OAEjB8D,OAAO,CAAC,GAAG,KACXC,MAAM,IACNC,UAAU,CAAC,IAAS,MAEHhE,OAEf+D,MAAM,KACNE,UAAU,IACKjE,OAEf+D,MAAM,KACND,OAAO,CAAC,EAAG,KAEXG,UAAU,IACb,OAAOJ,M,GAtPUzF,eA2PNwI,M,UCjQA,OAA0B,sCCsJ1B2B,G,oDA3Ib,WAAYrK,GAAQ,IAAD,+BACjB,cAAMA,IA6BRsK,eAAiB,WACf,EAAKC,qBA/BY,EA2FnBC,iBAAmB,SAAAhL,GAGjB,IAAII,EAAO,GACP8D,EAAU,EAAK1D,MAAM0D,QAEvB9D,EADEJ,EACKwJ,GAAWnB,cAAc,CAAEtD,KAAM/E,EAAE8E,WAAWC,MAAQb,GAEtDsF,GAAWnB,cAAc,CAAEtD,KAAM,WAAab,GAEvD,IAAI+G,EAAW,EAAKC,mBACpB,EAAK1J,SAAS,CACZ2J,aAAc,GACdC,YAAa,EACbhL,KAAMA,EACNwH,EAAGqD,EAASrD,EACZC,EAAGoD,EAASpD,IAGd,EAAKrH,MAAM6K,uBAAuBrL,IA9GjB,EAiHnBkL,iBAAmB,WACjB,IAAII,EAAehJ,KAAa,cAAcK,OAAOC,wBACjD2I,EAAYjJ,KAAa,WAAWK,OAAOC,wBAG/C,MAAO,CAACgF,EAFAtF,KAASkJ,MAASF,EAAaxI,MAAQ,EAErC+E,EADFvF,KAASmJ,MAAQH,EAAazI,OAAQ0I,EAAU1I,SArHvC,EAyHnB6I,oBAAsB,WACpBpJ,KAAa,aAAajE,MAAM,UAAW,KA1H1B,EA6HnBsN,mBAAqB,WACnBrJ,KAAa,aAAajE,MAAM,UAAW,IA9H1B,EAiInB0M,kBAAoB,WAClB,EAAKvJ,SAAS,CACZ2J,aAAc,EACdC,aAAc,IAEhB,EAAKO,qBACL,EAAKnL,MAAMoL,kBArIX,EAAKnK,MAAQ,CACXgD,UAAW,GACXnB,SAAU,GACVG,UAAW,GACXoI,WAAY,EACZV,aAAc,EAEdlL,QAAS,CACPC,gBAAgB,EAChBG,kBAAkB,IAXL,E,sDAgBnB,WAAqB,IAAD,OACdoE,EAAYqH,GAEhBrP,KAAK+E,SAAS,CACZiD,UAAWsH,aAAQtH,EAAWA,EAAUjB,QAAQC,WAAWuI,SAC3D1I,SAAUmB,IAGZnC,KAAOmB,IAAWwI,MAAK,SAACC,EAAUC,GAChC,EAAK3K,SAAS,CACZiC,UAAWyI,S,oBAOjB,WAAU,IAAD,OACP,EAMIzP,KAAKgF,MALPgD,EADF,EACEA,UACAnB,EAFF,EAEEA,SACAG,EAHF,EAGEA,UACA0H,EAJF,EAIEA,aACAlL,EALF,EAKEA,QAEMiE,EAAYzH,KAAK+D,MAAjB0D,QACJkI,EAAa,GAejB,OAbInM,IAAYA,EAAQC,gBAAkBD,EAAQI,oBAChD+L,EACE,eAAC,GAAD,CACEnM,QAAWA,EACXwE,UAAWA,EACXhB,UAAWA,EACXS,QAASA,EACT0F,cAAe,SAAA5J,GACb,EAAK4J,cAAc5J,OAKJ,GAAnBsD,EAASkD,QAAetC,EAExB,iCACE,eAAC,GAAD,CACEO,UAAWA,EACXnB,SAAUA,EACVuC,WAAY,WACV,EAAKkF,qBAEPtH,UAAWA,EACXS,QAASA,EACTE,eAAgB,SAAApE,GACd,EAAKgL,iBAAiBhL,IAExB8K,eAAkB,kBAAI,EAAKA,oBAE5BsB,EACD,eAAC,GAAD,CACEjK,QAASgJ,EACTnI,OAAQvG,KAAKgF,MAAM2J,YACnBhL,KAAM3D,KAAKgF,MAAMrB,KACjByF,WAAY,WACV,EAAKkF,qBAEPnD,EAAGnL,KAAKgF,MAAMmG,EACdC,EAAGpL,KAAKgF,MAAMoG,OAKb,6B,GAxFWnH,cCIX2L,I,OAAb,oDAEE,WAAY7L,GAAQ,IAAD,+BACjB,cAAMA,IAuBR6K,uBAAyB,SAACrL,GACxB,IACIsM,EADAC,EAAU,EAAK/L,MAAM+L,QAOvBD,EALGtM,EAKeuM,EAAQ5I,QAAO,SAACwB,GAChC,OAAOA,EAAIhI,SAAW6C,EAAE8E,WAAWC,QALnBwH,EAAQ5I,QAAO,SAACwB,GAChC,MAAsB,WAAfA,EAAIhI,WAOf,EAAKqE,SAAS,CACZgL,eAAgBF,EAAgB,MArCjB,EA0CnBV,eAAiB,WACf,EAAKpK,SAAS,CACZgL,oBAAgBC,KA1ClB,EAAKhL,MAAQ,CACX+K,oBAAgBC,GAHD,EAFrB,2CASE,WAAU,IAAD,OAEP,OACE,sBAAKtO,UAAU,MAAf,SACE,sBAAKlB,GAAG,QAAQkB,UAAU,MAAME,MAAO,CAAEwE,OAAQ6J,OAAOC,OAAO9J,OAAS,MAAxE,SACE,eAAC,GAAD,CACEqB,QAASzH,KAAK+D,MAAM+L,QACpBlB,uBAAwB,SAACrL,GAAD,OAAO,EAAKqL,uBAAuBrL,IAC3D4L,eAAgB,WACd,EAAKA,4BAlBnB,GAA2BrN,e,UCddqO,I,OAAgB,CACzB,CACEvF,MAAO,cACPwF,WAAY,KACZ/J,MAAO,GACPgK,YAAa,SAACC,GAAD,gBAAeA,EAAOC,IAAI5P,YAAYR,QAErD,CAAEyK,MAAO,UAAWwF,WAAY,eAAgB/J,MAAO,KACvD,CAAEuE,MAAO,YAAawF,WAAY,YAAa/J,MAAO,KACtD,CACEuE,MAAO,QACPwF,WAAY,cACZ/J,MAAO,IACPmK,UAAU,GAEZ,CACE5F,MAAO,aACPwF,WAAY,cACZ/J,MAAO,IACPmK,UAAU,GAEZ,CACE5F,MAAO,cACPwF,WAAY,eACZK,YAAa,GACbpK,MAAO,KAET,CACEuE,MAAO,SACPwF,WAAY,eACZpO,KAAM,SACNqE,MAAO,KAET,CACEuE,MAAO,iBACPwF,WAAY,kBACZM,UAAU,EACVrK,MAAO,KAET,CACEuE,MAAO,YACPwF,WAAY,kBACZM,UAAU,EACVrK,MAAO,OC/BAsK,GAAb,gKAEE,WACE,OACE,sBAAKjP,UAAU,aAAf,SACE,eAAC,KAAD,CACEkP,KAAM5Q,KAAK+D,MAAMa,KACjBiM,QAASV,GACTW,SAAU,GACVC,mBAAoB,CAAC,GACrBC,mBAAiB,EACjBC,yBAAuB,UAXjC,GAA+BnP,cCJlBoP,GAAb,oDAEI,WAAYnN,GAAQ,wCACVA,GAHd,2CAMI,WACM,IACIoN,GAD2B,IAAIC,MACsBC,iBAAiBrR,KAAK+D,MAAM+L,QAASvP,IAChG,OACI,+BACI,eAAC,GAAD,CAAWqE,KAAMuM,UAXjC,GAA2BrP,c,qCCC3BwP,KAAQC,SACJC,KACAC,KACAC,KACAC,KACAC,KACAjM,MAOG,I,sDCUFkM,GDVQC,GAAb,oDAEI,WAAY/N,GAAe,wCACjBA,GAHd,2CAMI,WACI,OACI,qCACI,sBAAKrC,UAAU,QAAf,SACI,eAAC,KAAD,gBACQ1B,KAAK+D,gBAXjC,GAA8BjC,c,+BEHjBiQ,I,OAAb,oDACI,WAAYhO,GAAQ,IAAD,+BACf,cAAMA,IASViO,aAAe,YAAgB,IAAbtC,EAAY,EAAZA,MACd,EAAK3K,SAAS,CAAE2K,WAXD,EAcnBuC,iBAAmB,SAACC,GAChB,EAAKnN,SAAS,CAAEmN,qBAChB,EAAKnO,MAAMoO,gBAAgBD,IAhBZ,EAmBnBE,UAAY,SAACC,GACT,OAAOC,aAAO,IAAIhQ,KAAK+P,GAAK,aAlB5B,EAAKrN,MAAL,6BACO,EAAKA,OADZ,IAEIkN,iBAAiB,EAAKnO,MAAMmO,iBAC5BxC,OAAO,IALI,EADvB,2CAwBI,WAAU,IAAD,OACD6C,EAAoB,CACpB,CAAEC,MAAOxS,KAAK+D,MAAM0O,UAAWpP,IAAKrD,KAAK+D,MAAMmO,iBAAiB,IAChE,CAAEM,MAAOxS,KAAK+D,MAAMmO,iBAAiB,GAAI7O,IAAKrD,KAAK+D,MAAM2O,UAE7D,OAAQ,uCACJ,+BACI,eAAC,KAAD,CAEIC,KA/CP,MAiDOT,iBAAkBlS,KAAK+D,MAAMmO,iBAC7BU,iBAAkB,CAAC5S,KAAK+D,MAAM0O,UAAWzS,KAAK+D,MAAM2O,SACpDG,iBAAkB7S,KAAKgS,aACvBC,iBAAkBjS,KAAKiS,iBACvBa,WAAY,SAACT,GAAM,OAAO,EAAKD,UAAUC,IACzCE,kBAAmBA,MAG3B,uBAAK7Q,UAAU,oBAAf,UACI,wDACA,gCAAe4Q,aAAOtS,KAAKgF,MAAMkN,iBAAiB,GAAI,gBAA3C,GACV,MACD,gCAAeI,aAAOtS,KAAKgF,MAAMkN,iBAAiB,GAAI,gBAA3C,aA/C3B,GAAqCpQ,e,oBCR/BiR,GAAqBC,eAEdC,GAAb,oDAEI,WAAYlP,GAAe,wCACjBA,GAHd,2CAMI,WAAU,IAAD,OACL,OACI,eAAC,KAAD,CACAmP,mBAAmB,EACnBC,WAAYJ,GAGZK,QAASpT,KAAK+D,MAAMqP,QACpBC,SAAU,SAAC1K,GAAD,OAAO,EAAK5E,MAAMsP,SAAS1K,UAdjD,GAAiC7G,cCVpBwR,IAAb,GADC1T,aAAW,YACZ,GACGC,aAAa,SADhB,GAGGA,aAAa,UAHhB,GAKGA,aAAa,aALhB,qBAQE,aAAe,mIACbG,KAAKY,MAAQ,IAAI2S,IACjBvT,KAAKc,OAAS,IAAIyS,IAClBvT,KAAKgB,UAAY,IAAIuS,OAXzB,0UCCaC,IAAb,GADC5T,aAAW,qBACZ,GAEKC,aAAa,WAFlB,GAIKA,aAAa,YAJlB,GAMKA,aAAa,YANlB,qBAUC,aAAe,sIACRG,KAAKU,QAAU,GACfV,KAAKyT,SAAU,GACfzT,KAAK0T,SAAU,IAAIJ,MAb3B,6UCDMK,GAAyB,mDAedC,GAAuC,SAACC,EAAqBC,GAEtE,OAAOC,MADYJ,GAAc,IAAIE,GAAeC,EAAQ,aAAaA,EAAS,KAChEtE,MAAK,SAAC5K,GACpB,OAAOA,EAAKoP,WCjBXC,GAAc,WACvB,IAAIA,EAA2B,IAAI7C,KAGnC,OAFA6C,EAAYC,uBAAwB,EACpCD,EAAYE,kBAAoBC,KAAkBC,WAC3CJ,G,mBCSIK,I,OAdC,SAACvQ,GAEb,OADAwQ,QAAQC,IAAI,gBACTzQ,EAAM7C,OAED,sBAAKQ,UAAU,UAAf,SACI,eAAC,KAAD,CAAWA,UAAU,cAItB,OPCT+S,GAAiB,IAAInS,KAAK,KAAM,GAAI,EAAG,EAAG,EAAG,EAAG,GAKhDoS,IAJM,IAAIpS,KAIU,IAAIA,KAAK,KAAM,EAAG,GAAI,EAAG,EAAG,EAAG,IACnDqS,GAAkB,IAAIrS,KAEtBmQ,GAAYgC,GACZ/B,GAAU,IAAIpQ,M,SAUfuP,K,gBAAAA,E,cAAAA,E,uBAAAA,Q,KAKE,IAAM+C,GAAb,oDAEI,WAAY7Q,GAAQ,IAAD,+BACf,cAAMA,IAsBV8Q,WAAa,SAACC,GACV,MAAO,CACHC,YAAY,EACZC,QAAS,CACLC,OAAQ,CACJzG,SAAU,OAEdxK,MAAO,CACHiB,SAAS,EACTe,KAAM8O,MAhCH,EAuCnBI,UAAY,WAER,IAAIC,EAAY,EAAKnQ,MAAMkN,iBAAiB,GACxCkD,EAAU,EAAKpQ,MAAMkN,iBAAiB,GAEtCtN,EAA0B,EAAKI,MAAMqQ,sBACrCC,EAAa,IAAI/B,IAAIgC,OAAOC,QAAQ5Q,EAAK8O,SAAS9S,QAMtD,OAJa,aAAI0U,EAAWG,QAAQvO,QAAO,SAAAwO,GACvC,IAAIC,EAAW,IAAIrT,KAAKoT,GACxB,OAAQC,GAAYR,GAAaQ,GAAYP,MAjDlC,EAsDnBQ,mBAAqB,SAACC,GAElB,IAAIV,EAAY,EAAKnQ,MAAMkN,iBAAiB,GACxCkD,EAAU,EAAKpQ,MAAMkN,iBAAiB,GAEtC4D,EAAqC,EAAK9Q,MAAMqQ,sBAChDU,EAAwB,IAAIxC,IAAIgC,OAAOC,QAAQM,EAAgBpC,SAASmC,KAOxEG,EAN2B,aAAID,GAAuB7O,QAAO,SAAAwO,GAC7D,IAAIC,EAAW,IAAIrT,KAAKoT,EAAG,IAC3B,OAAQC,GAAYR,GAAaQ,GAAYP,KAEDa,KAAI,SAACP,GAAD,OAAQA,EAAG,MAEtBO,KAAI,SAACC,EAAG1N,EAAG2N,GAChD,OAAO3N,EAAI,EAAI4N,KAAKC,IAAIH,EAAIC,EAAM3N,EAAI,IAAM,KAehD,MAXW,CACP8N,OAAQ,EAAKpB,YACbqB,SAAU,CACN,CACI5L,MAAQkL,GAAMhE,GAAe2E,MAAQ,QAAU,SAC/C5R,KAAMoR,EACNtP,YAAcmP,GAAMhE,GAAe2E,MAAQ,oBAAsB,oBACjEC,gBAAkBZ,GAAMhE,GAAe2E,MAAQ,0BAA4B,8BA/ExE,EAsFnBE,mBAAqB,SAACb,GAClB,IAAIC,EAAqC,EAAK9Q,MAAMqQ,sBAChDsB,EAAqB,IAAIpD,IAAIgC,OAAOC,QAAQM,EAAgBpC,SAASmC,KACrEe,EAAmB,aAAOD,EAAmBE,UAajD,MAXW,CACPP,OAAQ,EAAKpB,YACbqB,SAAU,CACN,CACI5L,MAAO,kBAAoBkL,GAAMhE,GAAeiF,OAAS,SAAW,SAAW,WAC/ElS,KAAMgS,EACNlQ,YAAcmP,GAAMhE,GAAeiF,OAAS,oBAAsB,oBAClEL,gBAAkBZ,GAAMhE,GAAeiF,OAAS,0BAA4B,8BAlGzE,EAwGnBC,mBAAqB,SAACpO,GAElB,EAAK5D,SAAS,CAAEiS,cAAc,IAAS,WACnCpD,GAAoCjL,EAAExF,MAF3B,MAE4CqM,MAAK,SAACC,GACzD,IAAI4F,EAA2CpB,KAAcgD,kBAAkBxH,EAAU+D,IACzF,EAAKzO,SAAL,6BACO,EAAKC,OADZ,IAEIqQ,wBACA2B,cAAc,YAhHX,EAsHnBE,sBAAwB,SAAC/B,GACrB,IACIgC,GADc,IAAI7U,MACY8U,UAAYjC,EAAUiC,UAExD,OAD+BhB,KAAKiB,KAAKF,EAAa,QAzHvC,EA6HnBhF,gBAAkB,SAACD,GACf,EAAKnN,SAAL,6BACO,EAAKC,OADZ,IAEIkN,uBA9HJ,EAAKlN,MAAQ,CACTqQ,sBAAuB,IAAI7B,GAC3BwD,cAAc,EACd9E,iBAAkB,CAACwC,GAAmBC,KAL3B,EAFvB,sDAWI,WAAqB,IAAD,OAEhB3U,KAAK+E,SAAS,CAAEiS,cAAc,IAAS,WACnCpD,GAAoC,KAFzB,MAEyCpE,MAAK,SAACC,GACtD,IAAI4F,EAA2CpB,KAAcgD,kBAAkBxH,EAAU+D,IACzF,EAAKzO,SAAL,6BACO,EAAKC,OADZ,IAEIqQ,sBAAuBA,EACvB2B,cAAc,aAnBlC,oBAsII,WAAU,IAAD,OAGL,OAFAzC,QAAQC,IAAI,eAAexU,KAAKgF,MAAMgS,cAIlC,uBAAKtV,UAAU,YAAf,UACI,eAAC,GAAD,CAASR,QAASlB,KAAKgF,MAAMgS,eAC7B,sBAAKtV,UAAU,MAAf,SACI,sBAAKA,UAAU,SAAf,SACI,eAAC,GAAD,CACI0R,QAASpT,KAAK+D,MAAMuT,aACpBjE,SAAU,SAAC1K,GAAD,OAAO,EAAKoO,mBAAmBpO,UAIrD,uBAAKjH,UAAU,MAAf,UACI,sBAAKA,UAAU,QAAf,SACI,eAAC,GAAD,CAAU0R,QAASpT,KAAK6U,WAAW,2BAA4BjQ,KAAM5E,KAAK4V,mBAAmB/D,GAAe2E,WAEhH,sBAAK9U,UAAU,QAAf,SACI,eAAC,GAAD,CAAU0R,QAASpT,KAAK6U,WAAW,4BAA6BjQ,KAAM5E,KAAK4V,mBAAmB/D,GAAeiF,eAGrH,+BACI,eAAC,GAAD,CACIrE,UAAWA,GACXC,QAASA,GACTR,iBAAkBlS,KAAKgF,MAAMkN,iBAC7BC,gBAAiB,SAACxJ,GAAD,OAAO,EAAKwJ,gBAAgBxJ,eAlKrE,GAA2B7G,cQrCdyV,GAAb,cAIE,WAAYpU,EAAawH,GAAe,0BAHxCxH,WAGuC,OAFvCwH,WAEuC,EACrC3K,KAAKmD,MAAQA,EACbnD,KAAK2K,MAAOA,KCYH6M,GAAb,gKAEI,WACI,OACI,qCACI,gBAAC,KAAD,WACI,eAAC,KAAD,CACIrP,KAAM,IACNsP,QACI,eAAC,GAAD,CAAMtT,UAAWnE,KAAK+D,MAAMI,cAGpC,eAAC,KAAD,CACIgE,KAAM,OACNsP,QACI,eAAC,GAAD,CAAO3H,QAAS9P,KAAK+D,MAAM+L,QAAS3L,UAAWnE,KAAK+D,MAAMI,cAGlE,eAAC,KAAD,CAAOgE,KAAM,QAASsP,QAAS,eAAC,GAAD,CAAO3H,QAAS9P,KAAK+D,MAAM+L,YAC1D,eAAC,KAAD,CAAO3H,KAAM,UAAWsP,QAAS,eAAC,GAAD,CAAOH,cClCtBxH,EDkC0D9P,KAAK+D,MAAM+L,QCjC5FA,EAAQmG,KAAI,SAACvN,GAA0B,IAAD,EACrCiC,EAAQjC,EAAIhI,QACZyC,EAAK,UAAGuF,EAAI/H,mBAAP,aAAG,EAAiBT,KAC7B,OAAO,IAAIqX,GAAcpU,EAAMwH,WD+BvB,eAAC,KAAD,CAAOxC,KAAM,SAAUsP,QAAS,eAAC,GAAD,WCnCf,IAAC3H,MDetC,GAAgChO,cEFX4V,G,oDAEnB,WAAY3T,GAAQ,IAAD,+BACjB,cAAMA,IACDiB,MAAQ,CACX2S,qBAAsB,GACtBxT,UAAW,IAAI5C,GACfyV,cAAc,GALC,E,sDAUnB,WAAqB,IAAD,OAClBhX,KAAK+E,SAAS,CAAEiS,cAAc,IAAS,WNtB5BjD,MANiB,qDAMKvE,MAAK,SAAC5K,GAC/B,OAAOA,EAAKoP,UMsBExE,MAAK,SAACC,GACxB,IAAImI,EAAkBnI,EAASvI,QAAO,SAAC3D,GACrC,ML9Ba,OK8BNA,EAAE5C,YAAYT,QAEnByX,EAA2C1D,KAAc5C,iBAAiBuG,EAAiBrX,INrBxFwT,MAXuB,0CAWKvE,MAAK,SAAC5K,GACrC,OAAOA,EAAKoP,UMqBSxE,MAAK,SAACC,GAC7B,IAAItL,EAAuB8P,KAAcgD,kBAAkBxH,EAAUlO,IACrE,EAAKwD,SAAS,CACZ4S,uBACAxT,YACA6S,cAAc,e,oBAOxB,WAEE,OACE,uBACEtV,UAAU,kBADZ,UAGE,sBAAKlB,GAAG,SAASkB,UAAU,MAA3B,SACE,eAAC,GAAD,MAEF,uBAAKA,UAAU,OAAf,UACE,eAAC,GAAD,CAASR,QAASlB,KAAKgF,MAAMgS,eAC7B,eAAC,GAAD,CAAYlH,QAAS9P,KAAKgF,MAAM2S,qBAAsBxT,UAAWnE,KAAKgF,MAAMb,eAE9E,yBAAQzC,UAAU,SAAlB,SACE,eAAC,GAAD,a,GA7CuBuC,c,OCJb4T,QACW,cAA7B5H,OAAO6H,SAASC,UAEe,UAA7B9H,OAAO6H,SAASC,UAEhB9H,OAAO6H,SAASC,SAASC,MACvB,2DCNNC,KAASC,OACL,eAAC,KAAMC,WAAP,UACI,eAAC,KAAD,UACI,eAAC,GAAD,QAGVnN,SAASoN,eAAe,SD+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/I,MAAK,SAAAgJ,GACjCA,EAAaC,kB","file":"static/js/main.0c2af436.chunk.js","sourcesContent":["import { JsonObject, JsonProperty } from \"json2typescript\";\r\n\r\n@JsonObject(\"CountryInfo\")\r\nexport class CountryInfo {\r\n  @JsonProperty(\"_id\", Number)\r\n  _id: number;\r\n  @JsonProperty(\"iso2\", String)\r\n  iso2: string;\r\n  @JsonProperty(\"iso3\", String)\r\n  iso3: string;\r\n  @JsonProperty(\"lat\", Number)\r\n  lat: number;\r\n  @JsonProperty(\"long\", Number)\r\n  long: number;\r\n  @JsonProperty(\"flag\", String)\r\n  flag: string;\r\n\r\n  constructor() {\r\n    this._id = 0;\r\n    this.iso2 = \"\";\r\n    this.iso3 = \"\";\r\n    this.lat = 0;\r\n    this.long = 0;\r\n    this.flag = \"\";\r\n  }\r\n\r\n}\r\n","import { JsonObject, JsonProperty } from \"json2typescript\";\r\nimport { CountryInfo } from \"./CountryInfo\";\r\n\r\n@JsonObject(\"CountryDailyInfo\")\r\nexport class CountryDailyInfo {\r\n  @JsonProperty(\"country\", String)\r\n  id: string;\r\n  \r\n  @JsonProperty(\"updated\", Number)\r\n  updated: number;\r\n  @JsonProperty(\"country\", String)\r\n  country: string;\r\n  @JsonProperty(\"countryInfo\")\r\n  countryInfo : CountryInfo;\r\n  @JsonProperty(\"cases\", Number)\r\n  cases: number;\r\n  @JsonProperty(\"todayCases\", Number)\r\n  todayCases: number;\r\n  @JsonProperty(\"deaths\", Number)\r\n  deaths: number;\r\n  @JsonProperty(\"todayDeaths\", Number)\r\n  todayDeaths: number;\r\n  @JsonProperty(\"recovered\", Number)\r\n  recovered: number;\r\n  @JsonProperty(\"todayRecovered\", Number)\r\n  todayRecovered: number;\r\n  @JsonProperty(\"active\", Number)\r\n  active: number;\r\n  @JsonProperty(\"critical\", Number)\r\n  critical: number;\r\n  @JsonProperty(\"tests\", Number)\r\n  tests: number;\r\n  @JsonProperty(\"population\", Number)\r\n  population: number;\r\n  @JsonProperty(\"continent\", String)\r\n  continent: string;\r\n\r\n  constructor() {\r\n      this.id = \"\";\r\n    this.updated = 0;\r\n    this.country = \"\";\r\n    this.countryInfo = new CountryInfo();\r\n    this.cases = 0;\r\n    this.todayCases = 0;\r\n    this.deaths = 0;\r\n    this.todayDeaths = 0;\r\n    this.recovered = 0;\r\n    this.todayRecovered = 0;\r\n    this.active = 0;\r\n    this.critical = 0;\r\n    this.tests = 0;\r\n    this.population = 0;\r\n    this.continent = \"\";\r\n  }\r\n}\r\n","import { JsonObject, JsonProperty } from \"json2typescript\";\r\n\r\n@JsonObject(\"TotalInfo\")\r\nexport class TotalInfo {\r\n  @JsonProperty(\"updated\", Number)\r\n  updated: number;\r\n  @JsonProperty(\"affectedCountries\", Number)\r\n  affectedCountries: number;\r\n  @JsonProperty(\"cases\", Number)\r\n  cases: number;\r\n  @JsonProperty(\"todayCases\", Number)\r\n  todayCases: number;\r\n  @JsonProperty(\"deaths\", Number)\r\n  deaths: number;\r\n  @JsonProperty(\"todayDeaths\", Number)\r\n  todayDeaths: number;\r\n  @JsonProperty(\"recovered\", Number)\r\n  recovered: number;\r\n  @JsonProperty(\"todayRecovered\", Number)\r\n  todayRecovered: number;\r\n  @JsonProperty(\"active\", Number)\r\n  active: number;\r\n  @JsonProperty(\"critical\", Number)\r\n  critical: number;\r\n  @JsonProperty(\"tests\", Number)\r\n  tests: number;\r\n  @JsonProperty(\"population\", Number)\r\n  population: number;\r\n\r\n  constructor() {\r\n    this.updated = 0;\r\n    this.affectedCountries = 0;\r\n    this.cases = 0;\r\n    this.todayCases = 0;\r\n    this.deaths = 0;\r\n    this.todayDeaths = 0;\r\n    this.recovered = 0;\r\n    this.todayRecovered = 0;\r\n    this.active = 0;\r\n    this.critical = 0;\r\n    this.tests = 0;\r\n    this.population = 0;\r\n  }\r\n}\r\n","import * as React from \"react\"\r\nimport \"./footer.css\";\r\nexport class Footer extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <div>\r\n                    <i className=\"fa fa-github-square\" aria-hidden=\"true\"></i>\r\n                    <a\r\n                        href=\"https://github.com/ahmedElmaghr/coronaMap.git\"\r\n                        className=\"github-link\"\r\n                        style={{ color: \"white\" }}\r\n                    >\r\n                        {\" \"}\r\n                        github repository\r\n                    </a>\r\n                </div>\r\n                <div className=\"version\">\r\n                    v_1.0.0\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport './navbar.css'\r\nconst Navbar = () => {\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/\" className=\"nav-link\">\r\n                                <i className=\"fa fa-home\" aria-hidden=\"true\"></i>\r\n                                {\" \"} Home\r\n                            </NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/stat\" className=\"nav-link\">\r\n                            <i className=\"fa fa-table\" aria-hidden=\"true\"></i>\r\n                            {\" \"} Countries\r\n                        </NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <NavLink to=\"/charts\" className=\"nav-link\">\r\n                            <i className=\"fa fa-line-chart\" aria-hidden=\"true\"></i>\r\n                            {\" \"} Charts\r\n                        </NavLink>\r\n                        </li>\r\n                        <li className=\"nav-item \">\r\n                        <NavLink to=\"/map\" className=\"nav-link\">\r\n                            <i className=\"fa fa-map\" aria-hidden=\"true\"></i>\r\n                            {\" \"} Map\r\n                        </NavLink>\r\n                        </li>\r\n                        {/* <li className=\"nav-item \">\r\n                        <NavLink to=\"/about\" className=\"nav-link\" style={{position:'absolute',right:'0%'}}>\r\n                            <i className=\"fa fa-info\" aria-hidden=\"true\"></i>\r\n                            {\" \"} About\r\n                        </NavLink>\r\n                        </li> */}\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n\r\n            {/* <div>\r\n                <ul className=\"topnav\">\r\n                    <li>\r\n                        <NavLink to=\"/\">\r\n                            <i className=\"fa fa-home\" aria-hidden=\"true\"></i>\r\n                            {\" \"} Home\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/stat\">\r\n                            <i className=\"fa fa-table\" aria-hidden=\"true\"></i>\r\n                            {\" \"} Countries\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/charts\">\r\n                            <i className=\"fa fa-line-chart\" aria-hidden=\"true\"></i>\r\n                            {\" \"} Charts\r\n                        </NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/map\">\r\n                            <i className=\"fa fa-map\" aria-hidden=\"true\"></i>\r\n                            {\" \"} Map\r\n                        </NavLink>\r\n                    </li>\r\n                    <li className='about'>\r\n                        <NavLink to=\"/about\">\r\n                            <i className=\"fa fa-info\" aria-hidden=\"true\"></i>\r\n                            {\" \"} About\r\n                        </NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div> */}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import * as React from \"react\"\r\nimport Navbar from \"../../components/navBar/navbar\"\r\nimport { NextPrevious } from \"../../components/nextPrevious/nextPrevious\"\r\n\r\nexport class Header extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <div className=\"header\">\r\n                    {/*to improve navbar https://mui.com/components/app-bar/ */}\r\n                    <Navbar/>\r\n                    {/* <NextPrevious clickPrevious={()=>{console.log(\"click previous\")}} clickNext={()=>{console.log(\"click next\")}} /> */}\r\n                    <div>covid19 worldwide <i className=\"fa fa-globe\" aria-hidden=\"true\"></i></div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","\r\n\r\nexport const About =()=>{\r\n\r\n    return (\r\n        <div>\r\n            About section.\r\n        </div>\r\n        )\r\n}","export const formatEpochDateToDate = (epoch: number) => {\r\n  var d = new Date(epoch);\r\n  return d.toUTCString();\r\n};\r\n","  //verify string not empty\r\n  const isNotEmpty = entity => {\r\n   return entity != \"\" && entity != null;\r\n   //    return entity != null && entity.trim() != \"\";\r\n\r\n  };\r\n\r\n  //\r\n  const deleteSpecialChar = (string)=>{\r\n    if(typeof string != \"string\"){\r\n      throw \"formatStringToNumber is applied only on string format\"\r\n    }\r\n    var splitted = string.split(`,`).join('');\r\n\r\n    return splitted;\r\n  }\r\n\r\n  const stringVirSepToNumber = (string)=>{\r\n    var stringWithoutSpecChar = deleteSpecialChar(string);\r\n    return parseInt(stringWithoutSpecChar,10);\r\n  }\r\n\r\n  const formatNumberToString = (num) =>{\r\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n  }\r\n\r\nexport default { isNotEmpty,deleteSpecialChar,stringVirSepToNumber,formatNumberToString};","\r\nimport React from 'react';\r\nimport CountUp from 'react-countup';\r\nimport StringUtils from './StringUtils';\r\n\r\n/** example \"16.25\" -> 16,25 + counter  */\r\nconst buildCountUpByStringValue = (value)=>{\r\n    return (\r\n      <CountUp\r\n        separator=\" \"\r\n        end={value}\r\n        duration={1.5}\r\n      ></CountUp>\r\n    );\r\n  }\r\n\r\nconst   calculateRadius = (d, context) => {\r\n  let cases;\r\n  if (context.checkToggleBTn) {\r\n    cases = StringUtils.deleteSpecialChar(d.stat.deaths);\r\n    return getRadiusDeath(cases)\r\n  } else if (context.checkZoneDesease) {\r\n    cases = StringUtils.deleteSpecialChar(d.stat.cases);\r\n    return getRadiusCases(cases)\r\n  }\r\n};\r\n\r\nconst getRadiusCases = (cases)=>{\r\n  let rayon = 0;\r\n  if (0 <= cases && cases < 1000) {\r\n    let r = (cases / 1000) * 5;\r\n    rayon = r;\r\n  } else if (1000 <= cases && cases < 5000) {\r\n    let r = (cases / 5000) * 10;\r\n    rayon = r;\r\n  } else if (5000 <= cases && cases < 10000) {\r\n    let r = (cases / 10000) * 20;\r\n    rayon = r;\r\n  } else if (10000 <= cases && cases < 60000) {\r\n    let r = (cases / 50000) * 50;\r\n    rayon = r;\r\n  }else if (60000 <= cases && cases < 100000) {\r\n    let r = (cases / 100000) * 60;\r\n    rayon = r;\r\n  }\r\n  \r\n  return rayon < 1 && rayon > 0 ? 2 : rayon;\r\n}\r\n\r\nconst getRadiusDeath = (cases)=>{\r\n  let rayon = 0;\r\n  if (0 <= cases && cases < 1000) {\r\n    let r = (cases / 1000) * 5;\r\n    rayon = r;\r\n  } else if (1000 <= cases && cases < 2000) {\r\n    let r = (cases / 2000) * 20;\r\n    rayon = r;\r\n  } else if (2000 <= cases && cases < 5000) {\r\n    let r = (cases / 5000) * 22;\r\n    rayon = r;\r\n  } else if (5000 <= cases && cases < 15000) {\r\n    let r = (cases / 5000) * 25;\r\n    rayon = r;\r\n  }else{\r\n    rayon = 30;\r\n  }\r\n  \r\n  return rayon < 1 && rayon > 0 ? 2 : rayon;\r\n}\r\n\r\nexport default{buildCountUpByStringValue,calculateRadius}","\r\nimport React, { Component } from \"react\";\r\nimport uihelper from \"../../utils/UIHelper\";\r\nimport \"./Cards.css\";\r\n\r\ninterface Props {\r\n    title: string;\r\n    titleStyle: string;\r\n    contentStyle: string;\r\n    icon: string;\r\n    value: number;\r\n    updated : string\r\n}\r\nexport default class Card extends Component<Props, Readonly<{}>> {\r\n    render() {\r\n        return (\r\n            <div className=\"card\">\r\n                <div className={\"red-content\"}>{uihelper.buildCountUpByStringValue(this.props.value)}</div>\r\n                <div className={\"black-title\"}> {/*<i className={this.props.icon} aria-hidden=\"true\"></i>*/} {this.props.title}</div>\r\n                <div className=\"card-updated\">Last update: {this.props.updated}</div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { TotalInfo } from \"../../models/TotalInfo\";\r\nimport { formatEpochDateToDate } from \"../../utils/dateUtils\";\r\nimport Card from \"./Card\";\r\nimport \"./Cards.css\";\r\n\r\ninterface Props {\r\n  totalInfo: TotalInfo;\r\n}\r\nexport default class Cards extends Component<Props, Readonly<{}>> {\r\n  render() {\r\n    const { totalInfo } = this.props;\r\n\r\n\r\n    let totalConfirmed = totalInfo.cases;\r\n    let activeCases = totalInfo.todayCases;\r\n    let recovered = totalInfo.todayRecovered;\r\n    let totalDeaths = totalInfo.deaths;\r\n    let updated = totalInfo.updated;\r\n    //\r\n    return (\r\n      <>\r\n        <div className=\"col-8 group-card-left\">\r\n          <Card\r\n            title=\"Confirmed cases\"\r\n            contentStyle=\"red-content\"\r\n            icon=\"fa fa-globe\"\r\n            titleStyle=\"red-title\"\r\n            value={totalConfirmed}\r\n            updated={formatEpochDateToDate(updated)}\r\n          />\r\n          <Card\r\n            title=\"Daily cases\"\r\n            contentStyle=\"orange-content\"\r\n            icon=\"fa fa-ambulance\"\r\n            titleStyle=\"orange-title\"\r\n            value={activeCases}\r\n            updated={formatEpochDateToDate(updated)}\r\n          />\r\n        </div>\r\n        <div className=\"col-8 group-card-right\">\r\n          <Card\r\n            title=\"Confirmed deaths\"\r\n            contentStyle=\"black-content\"\r\n            icon=\"fa fa-heartbeat\"\r\n            titleStyle=\"black-title\"\r\n            value={totalDeaths}\r\n            updated={formatEpochDateToDate(updated)}\r\n          />\r\n\r\n          <Card\r\n            title=\"Daily recovered\"\r\n            contentStyle=\"green-content\"\r\n            icon=\"fa fa-heart\"\r\n            titleStyle=\"green-title\"\r\n            value={recovered}\r\n            updated={formatEpochDateToDate(updated)}\r\n          />\r\n\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n\r\n}\r\n","export default __webpack_public_path__ + \"static/media/world-map-covid19.017f78b5.jpg\";","import * as React from \"react\";\r\nimport Cards from \"../../components/card/Cards\";\r\nimport { TotalInfo } from \"../../models/TotalInfo\";\r\nimport './home.css';\r\nimport mapImage from '../../assets/images/world-map-covid19.jpg';\r\nimport { Link, NavLink } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  totalInfo: TotalInfo;\r\n}\r\ninterface State {\r\n  display: boolean;\r\n}\r\nexport class Home extends React.Component<Props, State>{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      display: false\r\n    }\r\n  }\r\n\r\n  getPieData = (data: TotalInfo) => {\r\n    if (data) {\r\n      let totalCases = data.cases;\r\n      let totalRecovered = data.recovered;\r\n      let totalDeaths = data.deaths;\r\n      return [totalRecovered, totalCases, totalDeaths];\r\n    } else {\r\n      return [0];\r\n    }\r\n  };\r\n  handleMapLinkMouseEnter = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      display: true\r\n    })\r\n  }\r\n  handleMapLinkMouseLeave = () => {\r\n    this.setState({\r\n      ...this.state,\r\n      display: false\r\n    })\r\n  }\r\n  render() {\r\n\r\n    let pieData;\r\n    pieData = this.getPieData(this.props.totalInfo);\r\n\r\n    return (\r\n      <>\r\n        <div className=\"home\">\r\n          <div className=\"row\" style={{display:\"flex\"}}>\r\n            <div className=\"col-8\" style={{ flex: 1, textAlign: \"center\" }}></div>\r\n            <div className=\"col-8\" style={{ flex: 1, textAlign: \"center\" }}>\r\n            <Link to=\"/stat\" className=\"link\">Dasboard view →</Link>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-6 panels\">\r\n              <Cards\r\n                totalInfo={this.props.totalInfo}\r\n              ></Cards>\r\n            </div>\r\n          </div>\r\n          <div className=\"row\" style={{ display: \"flex\" }}>\r\n            <div className=\"col-8\" style={{ flex: 1 }}>\r\n            </div>\r\n            <div className=\"col-8\" style={{ flex: 1, textAlign: \"center\" }}>\r\n              <NavLink to=\"/map\" className=\"link\">Interactive maps view →</NavLink>\r\n              <div className=\"fill\" onMouseEnter={() => this.handleMapLinkMouseEnter()} onMouseLeave={() => this.handleMapLinkMouseLeave()} >\r\n                <NavLink to=\"/map\">\r\n                  <img src={mapImage} alt=\"\" style={{ opacity: this.state.display ? 1 : 0.6 }} />\r\n                </NavLink>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n{/* <div\r\n            className=\"row pie-container\">\r\n            <div className=\"pie\">\r\n              <PieChartFullOption\r\n                data={[\r\n                  { title: \"Recovered\", value: parseInt(pieData[0]), color: \"rgb(44, 100, 6)\" },\r\n                  { title: \"Cases\", value: parseInt(pieData[1]), color: \"rgb(201, 93, 22)\" },\r\n                  { title: \"Deaths\", value: parseInt(pieData[2]), color: \"rgb(0, 0, 0)\" },\r\n                ]}\r\n              />\r\n            </div>\r\n          </div> */}","import * as d3 from \"d3\";\r\nimport React, { Component } from \"react\";\r\nimport \"./Legend.css\";\r\n\r\nexport default class Legend extends Component {\r\n  componentDidMount() {\r\n    var svg = d3.select(\"#legend\")\r\n    // Handmade legend\r\n    svg.append(\"rect\").attr(\"x\",4).attr(\"y\",0).attr('width', 12).attr('height', 20).style(\"fill\", \"#ffedc1\")\r\n    svg.append(\"rect\").attr(\"x\",4).attr(\"y\",20).attr('width', 12).attr('height', 20).style(\"fill\", \"#95DCF4\")\r\n    svg.append(\"rect\").attr(\"x\",4).attr(\"y\",40).attr('width', 12).attr('height', 20).style(\"fill\", \"#54CBF2\")\r\n    svg.append(\"rect\").attr(\"x\",4).attr(\"y\",60).attr('width', 12).attr('height', 20).style(\"fill\", \"#00ACE3\")\r\n    svg.append(\"rect\").attr(\"x\",4).attr(\"y\",80).attr('width', 12).attr('height', 20).style(\"fill\", \"#008EBC\")\r\n    svg.append(\"rect\").attr(\"x\",4).attr(\"y\",100).attr('width', 12).attr('height', 20).style(\"fill\", \"#007092\")\r\n    svg.append(\"rect\").attr(\"x\",4).attr(\"y\",120).attr('width', 12).attr('height', 15).style(\"fill\", \"#B6B6B6\")\r\n\r\n    svg.append(\"text\").attr(\"x\", 30).attr(\"y\", 10).text(\"0\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\r\n    svg.append(\"text\").attr(\"x\", 30).attr(\"y\", 30).text(\"1 - 10\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\r\n    svg.append(\"text\").attr(\"x\", 30).attr(\"y\", 50).text(\"11 - 100\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\r\n    svg.append(\"text\").attr(\"x\", 30).attr(\"y\", 70).text(\"101 - 1000\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\r\n    svg.append(\"text\").attr(\"x\", 30).attr(\"y\", 90).text(\"1 001 - 10 000\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\r\n    svg.append(\"text\").attr(\"x\", 30).attr(\"y\", 110).text(\"> 10 000\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\r\n    svg.append(\"text\").attr(\"x\", 30).attr(\"y\", 130).text(\"Not Applicable\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\r\n\r\n    \r\n  }\r\n\r\n  render() {\r\n    let svgMap = d3.selectAll('#content').node().getBoundingClientRect();\r\n    return (\r\n      <div className=\"legend\" style = {{height:'30%',width:'15%',top : svgMap.height*.6,zIndex:1}}>\r\n        <svg  id = \"legend\" style = {{height:'100%',width:'100%'}}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as d3 from \"d3\";\r\nimport React, { PureComponent } from \"react\";\r\nimport { merge } from \"topojson-client\";\r\nimport UIHelper from \"../../../utils/UIHelper\";\r\nimport \"./CoronaMapViewCss.css\";\r\nimport Legend from \"./Legend.js\";\r\n\r\nexport default class CoronaMapView extends PureComponent {\r\n  //Constantes\r\n\r\n  width = \"100%\";\r\n  height = \"100%\";\r\n  viewBox = `0 0 800 400`;\r\n  borderColor = \"blue\";\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (this.props.jsonData.length != 0) {\r\n      //Draw svg Wrapper\r\n      var svg = this.drawSvgWrapper();\r\n      var gGlobal = svg.append(\"g\").attr(\"id\", \"gWrapper\");\r\n      //Draw Path from worldData\r\n      var g = this.drawMap(gGlobal, this.props.worldData);\r\n      //Merge morrocan sahara\r\n      this.mergeMorrocanSahara(g);\r\n      //country names\r\n      this.addCountriesName(g,this.props.worldData);\r\n      //add zoom\r\n      var wrapper = d3.select(\"#content\");\r\n      this.addZoom(wrapper);\r\n    }\r\n  }\r\n\r\n  mergeMorrocanSahara = g => {\r\n    //merge Morocco\r\n    var jsonData = this.props.jsonData;\r\n    //Moroccan Sahara id = 732\r\n    //Morocco id = 504\r\n    var morocco = jsonData.objects.countries.geometries.filter(\r\n      d => d.id == 504\r\n    );\r\n    var morrocanSahara = jsonData.objects.countries.geometries.filter(\r\n      d => d.id == 732\r\n    );\r\n    var toBeMerged = [morocco[0], morrocanSahara[0]];\r\n    //\r\n    g.append(\"path\")\r\n      .datum(merge(jsonData, toBeMerged))\r\n      .attr(\"class\", \"country\")\r\n      .attr(\"d\", d => this.calculatePath(d))\r\n      .attr(\"fill\", this.getMoroccoCountryColor(this.props.covid19))\r\n      .on(\"click\", (d) => {\r\n        this.props.clickOnCountry()\r\n      })\r\n      .on(\"mouseout\", (d) => {\r\n        // this.props.handleMouseOut()\r\n      })\r\n  };\r\n\r\n   getMoroccoCountryColor = (data) => {\r\n    const moroccoData = data.filter(c => c.country == \"Morocco\");\r\n    let morrocanTodayCases = moroccoData[0].todayCases;\r\n    return this.getCountryColor(morrocanTodayCases); \r\n   }\r\n\r\n   addCountriesName = (g, worldData) => {\r\n    g.selectAll(\".place-label\")\r\n      .data(worldData)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"class\", \"place-label\")\r\n      .attr(\"x\", (d) => {\r\n        return this.path().centroid(d)[0];\r\n      })\r\n      .attr(\"y\", (d) => {\r\n        return this.path().centroid(d)[1];\r\n      })\r\n      .text((d) => {\r\n        return d.properties.name;\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Legend></Legend>\r\n    );\r\n  }\r\n\r\n\r\n  //Draw svg wrapper for map\r\n  drawSvgWrapper() {\r\n    //Construct Body\r\n    var body = d3.select(\"#mapWW\")\r\n    //Construct SVG\r\n    var svg = body\r\n      .append(\"svg\")\r\n      .attr(\"class\", \"svg\")\r\n      .attr(\"id\", \"content\")\r\n      .attr(\"width\", this.width)\r\n      // .attr(\"height\", window.screen.height +'px')\r\n      .attr(\"viewBox\", this.viewBox)\r\n      ;\r\n    return svg;\r\n  }\r\n\r\n  //Draw the world Map\r\n  drawMap = (node, worldData) => {\r\n      var g = node\r\n        .append(\"g\")\r\n        .attr(\"id\", \"worldMap\")\r\n        .attr(\"className\", \"countries\");\r\n      g.selectAll(\"path\")\r\n        .data(worldData)\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"key\", (d, i) => `path-${i}`)\r\n        .attr(\"d\", d => this.calculatePath(d))\r\n        .attr(\"class\", \"country\")\r\n        .attr(\"fill\", (d) => {\r\n          return this.markDesease(d)\r\n        })\r\n        .on(\"click\", (d) => {\r\n          this.props.clickOnCountry(d);\r\n        })\r\n        .on(\"mouseout\", (d) => {\r\n          // this.props.handleMouseOut()\r\n        })\r\n      return g;\r\n\r\n  };\r\n\r\n  //Color land \r\n  markDesease = (d) => {\r\n    let elt = this.props.covid19.filter((e) => {\r\n      let countryTrimmed = e.country ? e.country.trim() : \"\";\r\n\r\n      return countryTrimmed == d.properties.name\r\n    })\r\n    if (elt[0]) {\r\n      let dailyNewCase = elt[0].todayCases;\r\n      return this.getCountryColor(dailyNewCase);\r\n\r\n    } else {\r\n      return `rgba(218, 223, 225, 1)`\r\n    }\r\n  }\r\n\r\n  //Get country color range rgba(255,255,255)\r\n  getCountryColor = (dailyCase) => {\r\n    if(dailyCase == 0){\r\n      return '#ffedc1'\r\n    } \r\n    else if (1 <= dailyCase && dailyCase <= 10) {\r\n      return '#95DCF4'\r\n    }\r\n    else if (11 <= dailyCase && dailyCase <= 100) {\r\n      return '#54CBF2'\r\n    }\r\n    else if (101 <= dailyCase && dailyCase < 1000) {\r\n      return '#00ACE3'\r\n    }\r\n    else if (1001 <= dailyCase && dailyCase < 10000) {\r\n      return '#008EBC'\r\n    }\r\n     else if (dailyCase >=10000 ) {\r\n      return '#007092'\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  //Add zoom\r\n  addZoom = svg => {\r\n    const map = d3.select(\".svg\");\r\n    const width = map.node().getBoundingClientRect().width;\r\n    const height = width / 3;\r\n\r\n    svg.call(d3.zoom()\r\n    .scaleExtent([1, 50])\r\n    .translateExtent([[0,0], [width, height]])\r\n    .extent([[0, 0], [width, height]])\r\n    .on(\"zoom\", () => {\r\n      this.props.closePanel();\r\n      this.zoomed(svg)\r\n    }));\r\n  };\r\n\r\n  zoomed = svg => {\r\n    var transform = d3.event.transform;\r\n    svg.selectAll(\"path,.place-label\").attr(\"transform\", transform);\r\n    var placeLabel = d3.selectAll(\".place-label\");\r\n\r\n  //Countries label Transformation\r\n  let k = transform.k;\r\n\r\n  if(k>=7 && k<10){\r\n    placeLabel\r\n    .style(\"font-size\", \"2px\")\r\n    .style(\"stroke-width\", \"0.05px\")\r\n    // .style(\"letter-spacing\", \"0px\")\r\n    .style(\"visibility\",\"visible\");\r\n  }else if(k>=10){\r\n    placeLabel\r\n    .style(\"font-size\", \"1px\")\r\n    .style(\"stroke-width\", \"0.005px\")\r\n    // .style(\"letter-spacing\", \"0px\")\r\n    .style(\"visibility\",\"visible\");\r\n  }\r\n  else{\r\n    placeLabel\r\n    .style(\"visibility\",\"hidden\");\r\n  }\r\n\r\n};\r\n\r\n  //Projection and path calculator\r\n  projection = () =>{\r\n    var geoMercator = d3\r\n      .geoMercator()\r\n      .center([0,-60])\r\n      .scale(80)\r\n      .translate([800 / 2, 650 / 2]);\r\n\r\n    var projection2 = d3\r\n      .geoOrthographic()\r\n      .center([0,-15])\r\n      .scale(190)\r\n      .precision(0.1);\r\n    var projection3 = d3\r\n      .geoConicEqualArea()\r\n      .scale(100)\r\n      .center([0, 150])\r\n      //.translate([width / 2, height / 2])\r\n      .precision(0.3);\r\n    return geoMercator;\r\n  }\r\n\r\n  calculatePath = d => {\r\n    return d3.geoPath().projection(this.projection())(d);\r\n  };\r\n\r\n  path = () => {\r\n    return d3.geoPath().projection(this.projection());\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport StringUtils from \"../../utils/StringUtils\";\r\nimport \"./Panel.css\";\r\n\r\nexport default class Panel extends React.Component {\r\n  \r\n  componentWillMount(){\r\n    document.addEventListener(\"click\",this.handleClick,false)\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    document.removeEventListener(\"click\",this.handleClick,false)\r\n  }\r\n\r\n  handleClick=(e)=>{\r\n    if(this.node.contains(e.target)){\r\n      return;\r\n    }\r\n    this.handleClickOutside(e)\r\n  }\r\n\r\n  handleClickOutside=(e)=>{\r\n    if(e.target.tagName!==\"path\" && e.target.tagName!==\"circle\"){\r\n      this.props.closePanel();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { stat, opacity,zIndex, x, y } = this.props;\r\n    return (\r\n      <div ref={(node) => (this.node = node)}>\r\n        <div\r\n          id=\"panelStat\"\r\n          className=\"mapboxgl-popup mapboxgl-popup-anchor-bottom\"\r\n          style={{\r\n            top: y + \"px\",\r\n            left: x + \"px\",\r\n            opacity: opacity,\r\n            zIndex: zIndex,\r\n          }}\r\n        >\r\n          <div className=\"mapboxgl-popup-tip\"></div>\r\n          <div className=\"mapboxgl-popup-content\">\r\n            <div\r\n              className=\"maphub-popup-inner maphub-popup-text ps\"\r\n              style={{ maxHeight: 411 + \"px\", maxWidth: 840 + \"px\" }}\r\n            >\r\n              <span\r\n                className=\"closePanel\"\r\n                onClick={() => {\r\n                  this.props.closePanel();\r\n                }}\r\n              >\r\n                X\r\n              </span>\r\n              <div className=\"nicetext\">\r\n                <div>\r\n                  <div className=\"nicetext-title panelTitle1\">\r\n                    <img className = \"impFlag\"src={stat?(stat.countryInfo? stat.countryInfo.flag : \"\") : \"\"}/>\r\n                    {\" \"}\r\n                    <span>{stat ? stat.country : \"\"}</span>\r\n                    \r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <p className=\"panelTitle2\">Daily news</p>\r\n                  {this.getPanelParagraph(\r\n                    stat,\r\n                    \"green\",\r\n                    \"New recovered\",\r\n                    \"todayRecovered\"\r\n                  )}\r\n                  {this.getPanelParagraph(\r\n                    stat,\r\n                    \"darkorange\",\r\n                    \"New cases\",\r\n                    \"todayCases\"\r\n                  )}\r\n                  {this.getPanelParagraph(\r\n                    stat,\r\n                    \"darkred\",\r\n                    \"New deaths\",\r\n                    \"todayDeaths\"\r\n                  )}\r\n                  <p className=\"panelTitle2\">Total</p>\r\n                  {this.getPanelParagraph(\r\n                    stat,\r\n                    \"green\",\r\n                    \"Total recovered\",\r\n                    \"recovered\"\r\n                  )}\r\n                  {this.getPanelParagraph(\r\n                    stat,\r\n                    \"black\",\r\n                    \"Total deaths\",\r\n                    \"deaths\"\r\n                  )}\r\n                  {this.getPanelParagraph(\r\n                    stat,\r\n                    \"darkorange\",\r\n                    \"Total cases\",\r\n                    \"cases\"\r\n                  )}\r\n                  {this.getPanelParagraph(\r\n                    stat,\r\n                    \"black\",\r\n                    \"Total tests\",\r\n                    \"tests\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"ps__rail-x\"\r\n                style={{ left: 0 + \"px\", top: 0 + \"px\" }}\r\n              >\r\n                <div\r\n                  className=\"ps__thumb-x\"\r\n                  tabIndex=\"0\"\r\n                  style={{ left: 0 + \"px\", width: 0 + \"px\" }}\r\n                ></div>\r\n              </div>\r\n              <div\r\n                className=\"ps__rail-y\"\r\n                style={{ top: 0 + \"px\", right: 0 + \"px\" }}\r\n              >\r\n                <div\r\n                  className=\"ps__thumb-y\"\r\n                  tabIndex=\"0\"\r\n                  style={{ top: 0 + \"px\", height: 0 + \"px\" }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getPanelParagraph = (stat,color,label,field)=>{\r\n    return <p\r\n    style={{\r\n      color,\r\n       //borderTop: \"solid 1px\",\r\n      margin: \"2px 2px 2px 2px\",\r\n       //borderRadius: 6 + \"px\",\r\n      fontSize: 12+'px',\r\n      fontWeight: 'bold'\r\n    }}\r\n  >\r\n    \r\n    {label + \": \"}\r\n    {(stat && StringUtils.isNotEmpty(stat[field])) ? StringUtils.formatNumberToString(stat[field]) : \"0\"}\r\n\r\n  </p>\r\n  }\r\n}\r\n","\r\nconst constructData = (pays, statCovid19) => {\r\n    var result = [];\r\n    var i = 0;\r\n    pays.forEach((d) => {\r\n        var coordinate = {\r\n            longitude: d.longitude,\r\n            latitude: d.latitude\r\n        };\r\n\r\n        var object = {\r\n            id: i,\r\n            coordinate,\r\n            data: d,\r\n            stat: getStatByPays(d, statCovid19)\r\n        }\r\n        result.push(object);\r\n        i++;\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nconst getStatByPays = (d, covid19) => {\r\n    let variable = covid19.filter(world => {\r\n        let countryTrimmed = world.country ? world.country.trim() : \"\";\r\n        return countryTrimmed === d.name\r\n    })\r\n    let countryData = variable[0];\r\n    if (countryData) {\r\n        return countryData\r\n    } else {\r\n        return {\r\n            country: d.name\r\n        };\r\n    }\r\n}\r\nexport default { constructData, getStatByPays };","import * as d3 from \"d3\";\r\nimport { Component } from \"react\";\r\nimport DataHelper from \"../../utils/DataHelper.js\";\r\nimport StringUtils from \"../../utils/StringUtils.js\";\r\nimport uihelper from '../../utils/UIHelper';\r\nimport \"./Region.css\";\r\nclass Region extends Component {\r\n\r\n  componentWillUnmount() {\r\n    d3.selectAll(\"#markersDeaths,#markersDesease\").remove();\r\n    //.attr(\"visibility\", \"hidden\").style(\"opacity\",0);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { countries, covid19, context } = this.props;\r\n    this.drawCircles(countries, covid19, context);\r\n    //add zoom\r\n    return \"\";\r\n  }\r\n\r\n\r\n  //Create the world map\r\n  drawCircles = (countries, covid19, context) => {\r\n    let markers ;\r\n    if(context.checkZoneDesease){\r\n      markers = d3.selectAll(\"#markersDesease\");\r\n      d3.selectAll(\"#markersDeaths\").attr(\"visibility\", \"hidden\");\r\n    }\r\n    if(context.checkToggleBTn){\r\n      markers = d3.selectAll(\"#markersDeaths\");\r\n      d3.selectAll(\"#markersDesease\").attr(\"visibility\", \"hidden\");\r\n    }\r\n    if (markers.empty()) {\r\n      var gGlobal = d3.select(\"#gWrapper\");\r\n      //Draw Medias\r\n      this.drawZoneByContext(gGlobal, countries, covid19, context);\r\n      this.drawDimondPrincess(gGlobal, countries, covid19);\r\n    } \r\n    // else {\r\n    //   markers.attr(\"visibility\", \"visible\").style(\"opacity\",1);\r\n    // }\r\n  };\r\n\r\n  drawDimondPrincess = (node, countries, covid19) => {\r\n    let dimondPrincess = countries.filter(e => {\r\n      return e.country == \"DP\";\r\n    });\r\n    let statDP = DataHelper.getStatByPays(\r\n      { name: \"Diamond Princess\" },\r\n      covid19\r\n    );\r\n  };\r\n\r\n  //Add Markers Function\r\n  drawZoneByContext = (node, countries, covid19, context) => {\r\n    let data = DataHelper.constructData(countries, covid19);\r\n    var markers;\r\n    let dataFiltered = this.filterCountriesByContext(data, context);\r\n    if (dataFiltered) {\r\n      markers = node\r\n        .append(\"g\")\r\n        .attr(\"id\", this.getMarkerId(context))\r\n      markers\r\n        .selectAll(\"circle\")\r\n        .data(dataFiltered)\r\n        .enter()\r\n        .append(\"circle\")\r\n        .on(\"click\", (d, i) => {\r\n          this.props.clickOnCircle(d);\r\n        })\r\n        .attr(\"key\", d => `marker-${d.id}`)\r\n        .attr(\"cx\", d => {\r\n          return this.getCx(d);\r\n        })\r\n        .attr(\"cy\", d => {\r\n          return this.getCy(d);\r\n        })\r\n        .attr(\"r\", d => {\r\n          return uihelper.calculateRadius(d, context)/2  + \"px\";\r\n        })\r\n        .attr(\"class\", this.getClassByContext(context))\r\n        .append(\"title\")\r\n        .text(d => {\r\n          return `country : ${d.data.country} cases : ${d.stat.cases}`;\r\n        });\r\n    }\r\n    return markers;\r\n  };\r\n\r\n  getClassByContext = (context)=>{\r\n    if(context.checkToggleBTn){\r\n      return \"marker-black\"\r\n    }else if(context.checkZoneDesease){\r\n      return \"marker-red\"\r\n    }\r\n    \r\n  }\r\n\r\n  getMarkerId = (context)=>{\r\n    if(context.checkToggleBTn){\r\n      return \"markersDeaths\"\r\n    }else if(context.checkZoneDesease){\r\n      return \"markersDesease\"\r\n    }\r\n    \r\n  }\r\n\r\n  filterCountriesByContext = (data, context) => {\r\n    let dataFiltered;\r\n    let dataSorted;\r\n    if (context.checkToggleBTn) {\r\n      dataFiltered = data.filter(\r\n        d =>\r\n          d.stat != null &&\r\n          d.stat.TotalDeaths != 0 &&\r\n          d.stat.TotalDeaths != null &&\r\n          d.data.country != \"DP\"\r\n      );\r\n      dataSorted = dataFiltered.sort((e1, e2) => {\r\n        var totalDeath1Int = parseInt(\r\n          StringUtils.deleteSpecialChar(e1.stat.deaths),\r\n          10\r\n        );\r\n        var totalDeath2Int = parseInt(\r\n          StringUtils.deleteSpecialChar(e2.stat.deaths),\r\n          10\r\n        );\r\n        return totalDeath2Int - totalDeath1Int;\r\n      });\r\n    } else if (context.checkZoneDesease) {\r\n      dataFiltered = data.filter(\r\n        d =>\r\n          d.stat != null &&\r\n          d.stat.ActiveCases != 0 &&\r\n          d.stat.ActiveCases != null &&\r\n          d.data.country != \"DP\"\r\n      );\r\n      dataSorted = dataFiltered.sort((e1, e2) => {\r\n        var activeCase1Int = parseInt(\r\n          StringUtils.deleteSpecialChar(e1.stat.cases),\r\n          10\r\n        );\r\n        var activeCase2Int = parseInt(\r\n          StringUtils.deleteSpecialChar(e2.stat.cases),\r\n          10\r\n        );\r\n        return activeCase2Int - activeCase1Int;\r\n      });\r\n    }\r\n\r\n    return dataSorted;\r\n  };\r\n\r\n  getRadius = (d, context) => {\r\n\r\n    let cases;\r\n    if (context.checkToggleBTn) {\r\n      cases = StringUtils.deleteSpecialChar(d.stat.deaths);\r\n      return this.getRadiusDeath(cases)\r\n    } else if (context.checkZoneDesease) {\r\n      cases = StringUtils.deleteSpecialChar(d.stat.cases);\r\n      return this.getRadiusCases(cases)\r\n    }\r\n  };\r\n  getRadiusCases = (cases)=>{\r\n    let rayon = 0;\r\n    if (0 <= cases && cases < 1000) {\r\n      let r = (cases / 1000) * 5;\r\n      rayon = r;\r\n    } else if (1000 <= cases && cases < 5000) {\r\n      let r = (cases / 5000) * 10;\r\n      rayon = r;\r\n    } else if (5000 <= cases && cases < 10000) {\r\n      let r = (cases / 10000) * 20;\r\n      rayon = r;\r\n    } else if (10000 <= cases && cases < 60000) {\r\n      let r = (cases / 50000) * 50;\r\n      rayon = r;\r\n    }else if (60000 <= cases && cases < 100000) {\r\n      let r = (cases / 100000) * 60;\r\n      rayon = r;\r\n    }\r\n    \r\n    return rayon < 1 && rayon > 0 ? 2 : rayon;\r\n  }\r\n  \r\n  getRadiusDeath = (cases)=>{\r\n    let rayon = 0;\r\n    if (0 <= cases && cases < 1000) {\r\n      let r = (cases / 1000) * 10;\r\n      rayon = r;\r\n    } else if (1000 <= cases && cases < 2000) {\r\n      let r = (cases / 2000) * 30;\r\n      rayon = r;\r\n    } else if (2000 <= cases && cases < 5000) {\r\n      let r = (cases / 5000) * 40;\r\n      rayon = r;\r\n    } else if (5000 <= cases && cases < 15000) {\r\n      let r = (cases / 5000) * 45;\r\n      rayon = r;\r\n    }\r\n    \r\n    return rayon < 1 && rayon > 0 ? 2 : rayon;\r\n  }\r\n  getCx = d => {\r\n    if (StringUtils.isNotEmpty(d)) {\r\n      var x = d.coordinate.latitude;\r\n      var y = d.coordinate.longitude;\r\n\r\n      var coordinate = [x, y];\r\n      return this.projection()(coordinate)[0];\r\n    }\r\n  };\r\n\r\n  getCy = d => {\r\n    if (StringUtils.isNotEmpty(d)) {\r\n      var x = d.coordinate.latitude;\r\n      var y = d.coordinate.longitude;\r\n      var coordinate = [x, y];\r\n      return this.projection()(coordinate)[1];\r\n    }\r\n  };\r\n\r\n  //get node color\r\n  getNodeColor = (id, media) => {\r\n    var childsCount = media.filter(d => d.id === id).length;\r\n    if (childsCount == 0) {\r\n      return \"rgba(65, 131, 215, 1)\";\r\n    } else {\r\n      return \"rgba(214, 69, 65, 1)\";\r\n    }\r\n  };\r\n\r\n  //Projection and path calculator\r\n  projection() {\r\n    var geoMercator = d3\r\n    .geoMercator()\r\n    .center([0,-60])\r\n    .scale(80)\r\n    .translate([800 / 2, 650 / 2]);\r\n\r\n    var projection2 = d3\r\n      .geoOrthographic()\r\n      .scale(300)\r\n      .precision(0.1);\r\n    var projection3 = d3\r\n      .geoConicEqualArea()\r\n      .scale(150)\r\n      .center([0, 33])\r\n      //.translate([width / 2, height / 2])\r\n      .precision(0.3);\r\n    return geoMercator;\r\n  }\r\n  \r\n}\r\n\r\nexport default Region;\r\n","export default __webpack_public_path__ + \"static/media/countries.9e8d431d.tsv\";","import * as d3 from \"d3\";\r\nimport React, { Component } from \"react\";\r\nimport { feature } from \"topojson-client\";\r\nimport CoronaMapView from \"../mapD3/CoronaMapView\";\r\nimport Panel from \"../../panelchart/Panel\";\r\nimport Region from \"../../region/Region\";\r\nimport DataHelper from \"../../../utils/DataHelper.js\";\r\nimport countries110 from \"../../../countries-110m.json\";\r\nimport countries from \"../data/countries.tsv\";\r\n\r\nclass Container extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      worldData: [],\r\n      jsonData: [],\r\n      countries: [],\r\n      pieOpacity: 0,\r\n      panelOpacity: 0,\r\n\r\n      context: {\r\n        checkToggleBTn: false,\r\n        checkZoneDesease: false\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let worldData = countries110;\r\n\r\n    this.setState({\r\n      worldData: feature(worldData, worldData.objects.countries).features,\r\n      jsonData: worldData\r\n    });\r\n\r\n    d3.tsv(countries).then((response, error) => {\r\n      this.setState({\r\n        countries: response\r\n      });\r\n    });\r\n  }\r\n  handleMouseOut = ()=>{\r\n    this.closePanelDetails();\r\n  }\r\n  render() {\r\n    const {\r\n      worldData,\r\n      jsonData,\r\n      countries,\r\n      panelOpacity,\r\n      context\r\n    } = this.state;\r\n    const { covid19 } = this.props;\r\n    let zoneDeaths = \"\";\r\n\r\n    if (context && (context.checkToggleBTn || context.checkZoneDesease)) {\r\n      zoneDeaths = (\r\n        <Region\r\n          context = {context}\r\n          worldData={worldData}\r\n          countries={countries}\r\n          covid19={covid19}\r\n          clickOnCircle={d => {\r\n            this.clickOnCircle(d);\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    if (jsonData.length != 0 && covid19) {\r\n      return (\r\n        <div>\r\n          <CoronaMapView\r\n            worldData={worldData}\r\n            jsonData={jsonData}\r\n            closePanel={() => {\r\n              this.closePanelDetails();\r\n            }}\r\n            countries={countries}\r\n            covid19={covid19}\r\n            clickOnCountry={d => {\r\n              this.mouseOverCountry(d);\r\n            }}\r\n            handleMouseOut = {()=>this.handleMouseOut()}\r\n          />\r\n          {zoneDeaths}\r\n          <Panel\r\n            opacity={panelOpacity}\r\n            zIndex={this.state.panelZindex}\r\n            stat={this.state.stat}\r\n            closePanel={() => {\r\n              this.closePanelDetails();\r\n            }}\r\n            x={this.state.x}\r\n            y={this.state.y}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div></div>;\r\n    }\r\n  }\r\n\r\n  mouseOverCountry = d => {\r\n    \r\n\r\n    let stat = {};\r\n    let covid19 = this.props.covid19;\r\n    if (d) {\r\n      stat = DataHelper.getStatByPays({ name: d.properties.name }, covid19);\r\n    } else {\r\n      stat = DataHelper.getStatByPays({ name: \"Morocco\" }, covid19);\r\n    }\r\n    let position = this.getPositionPanel();\r\n    this.setState({\r\n      panelOpacity: 0.9,\r\n      panelZindex: 1,\r\n      stat: stat,\r\n      x: position.x,\r\n      y: position.y \r\n    });\r\n    // this.sendSvgToBackground();\r\n    this.props.onMouseMoveOverCountry(d)\r\n  };\r\n\r\n  getPositionPanel = ()=>{\r\n    let panelStatDim = d3.selectAll(\"#panelStat\").node().getBoundingClientRect();\r\n    let headerDim = d3.selectAll(\"#header\").node().getBoundingClientRect();\r\n    let x = d3.event.pageX - (panelStatDim.width / 2);\r\n    let y = d3.event.pageY - panelStatDim.height -headerDim.height;\r\n    return {x,y}\r\n  }\r\n\r\n  sendSvgToBackground = () => {\r\n    d3.selectAll(\"#worldMap\").style(\"opacity\", 0.7);\r\n  };\r\n\r\n  sendSvgToFrontPage = () => {\r\n    d3.selectAll(\"#worldMap\").style(\"opacity\", 1);\r\n  };\r\n\r\n  closePanelDetails = () => {\r\n    this.setState({\r\n      panelOpacity: 0,\r\n      panelZindex: -1\r\n    });\r\n    this.sendSvgToFrontPage();\r\n    this.props.initGlobalStat();\r\n  };\r\n}\r\n\r\nexport default Container;\r\n","import * as React from \"react\";\r\nimport Container from \"../../components/coronadash/container/Container\";\r\nimport { CountryDailyInfo } from \"../../models/CountryDailyInfo\";\r\nimport { TotalInfo } from \"../../models/TotalInfo\";\r\nimport './page1.css';\r\n\r\n\r\ninterface Props {\r\n  dataset: CountryDailyInfo[];\r\n  totalInfo: TotalInfo;\r\n}\r\ninterface State {\r\n  countryClicked: any;\r\n}\r\nexport class Page1 extends React.Component<Props, State>{\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      countryClicked: undefined,\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div id=\"mapWW\" className=\"col\" style={{ height: window.screen.height + \"px\" }}>\r\n          <Container\r\n            covid19={this.props.dataset}\r\n            onMouseMoveOverCountry={(d) => this.onMouseMoveOverCountry(d)}\r\n            initGlobalStat={() => {\r\n              this.initGlobalStat();\r\n            }}\r\n          ></Container>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  onMouseMoveOverCountry = (d) => {\r\n    var dataset = this.props.dataset;\r\n    var countryFiltered;\r\n    if (!d) {\r\n      countryFiltered = dataset.filter((elt) => {\r\n        return elt.country == \"Morocco\";\r\n      })\r\n    } else {\r\n      countryFiltered = dataset.filter((elt) => {\r\n        return elt.country == d.properties.name;\r\n      })\r\n    }\r\n    this.setState({\r\n      countryClicked: countryFiltered[0]\r\n    })\r\n  }\r\n\r\n\r\n  initGlobalStat = () => {\r\n    this.setState({\r\n      countryClicked: undefined\r\n    })\r\n  }\r\n}","export const columnsSchema = [\r\n    {\r\n      field: \"countryInfo\",\r\n      headerName: \"ID\",\r\n      width: 50,\r\n      valueGetter: (params) => `${params.row.countryInfo.iso3}`,\r\n    },\r\n    { field: \"country\", headerName: \"Country name\", width: 150 },\r\n    { field: \"continent\", headerName: \"Continent\", width: 130 },\r\n    {\r\n      field: \"cases\",\r\n      headerName: \"Total cases\",\r\n      width: 150,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: \"todayCases\",\r\n      headerName: \"Today cases\",\r\n      width: 120,\r\n      editable: false,\r\n    },\r\n    {\r\n      field: \"todayDeaths\",\r\n      headerName: \"Today deaths\",\r\n      description: \"\",\r\n      width: 120,\r\n    },\r\n    {\r\n      field: \"deaths\",\r\n      headerName: \"Total deaths\",\r\n      type: \"number\",\r\n      width: 120,\r\n    },\r\n    {\r\n      field: \"todayRecovered\",\r\n      headerName: \"Today recovered\",\r\n      sortable: true,\r\n      width: 120,\r\n    },\r\n    {\r\n      field: \"recovered\",\r\n      headerName: \"Total recovered\",\r\n      sortable: true,\r\n      width: 120,\r\n    },\r\n  ];","import { DataGrid } from '@mui/x-data-grid';\r\nimport * as React from 'react';\r\nimport { CountryDailyInfo } from '../../models/CountryDailyInfo';\r\nimport './DataTable.css';\r\nimport { columnsSchema } from './schema/schema';\r\n\r\ninterface Props{\r\n  data: CountryDailyInfo[];\r\n}\r\ninterface State{\r\n  \r\n}\r\nexport class DataTable extends React.Component<Props,State>{\r\n\r\n  render(){\r\n    return (\r\n      <div className='data-table'>\r\n        <DataGrid\r\n          rows={this.props.data}\r\n          columns={columnsSchema}\r\n          pageSize={20}\r\n          rowsPerPageOptions={[5]}\r\n          checkboxSelection\r\n          disableSelectionOnClick\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { JsonConvert } from \"json2typescript\";\r\nimport * as React from \"react\";\r\nimport { CountryDailyInfo } from \"../../models/CountryDailyInfo\";\r\nimport { DataTable } from \"../../components/table/DataTable\";\r\n\r\ninterface Props {\r\n    dataset : CountryDailyInfo[];\r\n}\r\nexport class Page2 extends React.Component<Props, Readonly<{}>>{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    render() {\r\n          let jsonConvert: JsonConvert = new JsonConvert();\r\n          let coutriesDailyinfo : CountryDailyInfo[] = jsonConvert.deserializeArray(this.props.dataset, CountryDailyInfo);\r\n        return (\r\n            <div>\r\n                <DataTable data={coutriesDailyinfo}></DataTable>\r\n            </div>\r\n        )\r\n    }\r\n}","import {\r\n    BarElement,\r\n    CategoryScale, Chart as ChartJS, Legend, LinearScale, Title,\r\n    Tooltip\r\n} from 'chart.js';\r\nimport * as React from \"react\";\r\nimport { Bar } from 'react-chartjs-2';\r\n\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    BarElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\ninterface Props {\r\n    options: any;\r\n    data: any;\r\n}\r\nexport class BarChart extends React.Component<Props, Readonly<{}>>{\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className='graph'>\r\n                    <Bar\r\n                        {...this.props}\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","import * as React from \"react\";\r\nimport { format, endOfToday, set } from \"date-fns\";\r\nimport { BarChart } from \"../../components/barChart/BarChart\";\r\nimport { TimeRangePicker } from \"../../components/coronadash/timeRange/TimeRangePicker\";\r\nimport { SelectRange } from \"../../components/select/Select\";\r\nimport { SelectOptions } from \"../../dto/selectOptions\";\r\nimport { HistoricalCountry } from '../../models/historical/HistoricalCountry';\r\nimport { getHistoricalDataByCountryAndPeriod } from '../../services/covidNinja/NinjaService';\r\nimport { jsonConvert } from '../../utils/Constants';\r\nimport './Page3.css';\r\nimport Loading from \"../../components/loading/loading\";\r\n\r\n//TODO to be exported in an external ts util file\r\nconst firstCovidDate = new Date(2019, 10, 1, 0, 0, 0, 0);\r\nconst now = new Date()\r\nconst getTodayAtSpecificHour = (hour = 12) =>\r\n    set(now, { hours: hour, minutes: 0, seconds: 0, milliseconds: 0 });\r\n\r\nconst selectedStartInit = new Date(2021, 0, 25, 0, 0, 0, 0);\r\nconst selectedEndInit = new Date();\r\n\r\nconst startTime = firstCovidDate;\r\nconst endTime = new Date();\r\n//\r\ninterface State {\r\n    countryHistoricalData: HistoricalCountry;\r\n    selectedInterval: [Date, Date];\r\n    isDataLoaded: boolean;\r\n}\r\ninterface Props {\r\n    countriesRef: SelectOptions[];\r\n}\r\nenum DailyNewsTypes {\r\n    DEATHS = \"deaths\",\r\n    CASES = \"cases\",\r\n    RECOVERED = \"recovered\"\r\n}\r\nexport class Page3 extends React.Component<Props, State>{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            countryHistoricalData: new HistoricalCountry(),\r\n            isDataLoaded: false,\r\n            selectedInterval: [selectedStartInit, selectedEndInit]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let interval = 365 * 3;\r\n        this.setState({ isDataLoaded: false }, () => {\r\n            getHistoricalDataByCountryAndPeriod('ma', interval).then((response) => {\r\n                let countryHistoricalData: HistoricalCountry = jsonConvert().deserializeObject(response, HistoricalCountry);\r\n                this.setState({\r\n                    ...this.state,\r\n                    countryHistoricalData: countryHistoricalData,\r\n                    isDataLoaded: true\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    getOptions = (graphTitle: string) => {\r\n        return {\r\n            responsive: true,\r\n            plugins: {\r\n                legend: {\r\n                    position: 'top' as const,\r\n                },\r\n                title: {\r\n                    display: true,\r\n                    text: graphTitle,\r\n                },\r\n            },\r\n        };\r\n    };\r\n\r\n\r\n    getLabels = () => {\r\n        //period\r\n        let startDate = this.state.selectedInterval[0];\r\n        let endDate = this.state.selectedInterval[1];\r\n        //data\r\n        let data: HistoricalCountry = this.state.countryHistoricalData;\r\n        let casesAsMAp = new Map(Object.entries(data.timeline.cases));\r\n\r\n        let labels = [...casesAsMAp.keys()].filter(it => {\r\n            let itAsDate = new Date(it);\r\n            return (itAsDate >= startDate && itAsDate <= endDate)\r\n        });\r\n        return labels;\r\n    }\r\n\r\n    getDailyDataByType = (_x: DailyNewsTypes) => {\r\n        //period \r\n        let startDate = this.state.selectedInterval[0];\r\n        let endDate = this.state.selectedInterval[1];\r\n        //country hist data\r\n        let countryHistData: HistoricalCountry = this.state.countryHistoricalData;\r\n        let countryDailyDataAsMap = new Map(Object.entries(countryHistData.timeline[_x]));\r\n        let countryDailyDataByPeriod = [...countryDailyDataAsMap].filter(it => {\r\n            let itAsDate = new Date(it[0]);\r\n            return (itAsDate >= startDate && itAsDate <= endDate)\r\n        })\r\n        let countryDailyData = countryDailyDataByPeriod.map((it) => it[1]);\r\n        //TODO\r\n        let countryDataPerDay = countryDailyData.map((v, i, array) => {\r\n            return i > 0 ? Math.abs(v - array[i - 1]) : 0;\r\n        })\r\n\r\n\r\n        let data = {\r\n            labels: this.getLabels(),\r\n            datasets: [\r\n                {\r\n                    label: (_x == DailyNewsTypes.CASES ? 'cases' : 'deaths'),\r\n                    data: countryDataPerDay,//valuePerDay\r\n                    borderColor: (_x == DailyNewsTypes.CASES ? 'rgb(255, 99, 132)' : 'rgb(53, 162, 235)'),\r\n                    backgroundColor: (_x == DailyNewsTypes.CASES ? 'rgba(255, 99, 132, 0.5)' : 'rgba(53, 162, 235, 0.5)'),\r\n                }\r\n            ],\r\n        };\r\n        return data;\r\n    }\r\n\r\n    getTotalDataByType = (_x: DailyNewsTypes) => {\r\n        let countryHistData: HistoricalCountry = this.state.countryHistoricalData;\r\n        let countryDeathsAsMap = new Map(Object.entries(countryHistData.timeline[_x]));\r\n        let countryDeathsValues = [...countryDeathsAsMap.values()];\r\n\r\n        let data = {\r\n            labels: this.getLabels(),\r\n            datasets: [\r\n                {\r\n                    label: 'country total ' + (_x == DailyNewsTypes.DEATHS ? 'deaths' : 'cases') + ' per day',\r\n                    data: countryDeathsValues,//maValuePerDay\r\n                    borderColor: (_x == DailyNewsTypes.DEATHS ? 'rgb(53, 162, 235)' : 'rgb(255, 99, 132)'),\r\n                    backgroundColor: (_x == DailyNewsTypes.DEATHS ? 'rgba(53, 162, 235, 0.5)' : 'rgba(255, 99, 132, 0.5)'),\r\n                },\r\n            ],\r\n        };\r\n        return data;\r\n    }\r\n    handleChangeSelect = (e: SelectOptions) => {\r\n        let interval = 365 * 3;\r\n        this.setState({ isDataLoaded: false }, () => {\r\n            getHistoricalDataByCountryAndPeriod(e.value, interval).then((response) => {\r\n                let countryHistoricalData: HistoricalCountry = jsonConvert().deserializeObject(response, HistoricalCountry);\r\n                this.setState({\r\n                    ...this.state,\r\n                    countryHistoricalData,\r\n                    isDataLoaded: true\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    countDaysFromStartDay = (startDate: Date) => {\r\n        let date1: Date = new Date();\r\n        let timeInMilisec: number = date1.getTime() - startDate.getTime();\r\n        let daysBetweenDates: number = Math.ceil(timeInMilisec / (1000 * 60 * 60 * 24));\r\n        return daysBetweenDates;\r\n    }\r\n\r\n    updateTimeRange = (selectedInterval) => {\r\n        this.setState({\r\n            ...this.state,\r\n            selectedInterval\r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(\"call render \",this.state.isDataLoaded)\r\n        \r\n        return (\r\n            \r\n            <div className='container'>\r\n                <Loading active={!this.state.isDataLoaded}/>\r\n                <div className='row'>\r\n                    <div className=\"select\" >\r\n                        <SelectRange\r\n                            options={this.props.countriesRef}\r\n                            onChange={(e) => this.handleChangeSelect(e as SelectOptions)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='col-6'>\r\n                        <BarChart options={this.getOptions(\"country cases evolution\")} data={this.getDailyDataByType(DailyNewsTypes.CASES)} />\r\n                    </div>\r\n                    <div className='col-6'>\r\n                        <BarChart options={this.getOptions(\"country deaths evolution\")} data={this.getDailyDataByType(DailyNewsTypes.DEATHS)} />\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <TimeRangePicker\r\n                        startTime={startTime}\r\n                        endTime={endTime}\r\n                        selectedInterval={this.state.selectedInterval}\r\n                        updateTimeRange={(e) => this.updateTimeRange(e)}\r\n                    />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import { format, endOfToday, set } from \"date-fns\";\r\nimport * as React from \"react\";\r\nimport TimeRange from \"react-timeline-range-slider\";\r\nimport './time-range-picker.css';\r\n\r\nconst step = 86400000;//1 day in milliseconds\r\ninterface Props {\r\n    updateTimeRange: any;\r\n    startTime:Date;\r\n    endTime:Date;\r\n    selectedInterval:[Date,Date];\r\n}\r\n\r\ninterface State {\r\n    selectedInterval: [Date, Date];\r\n    error: boolean;\r\n}\r\n\r\n\r\nexport class TimeRangePicker extends React.Component<Props, State>{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            ...this.state,\r\n            selectedInterval:this.props.selectedInterval,\r\n            error: false,\r\n        }\r\n    }\r\n\r\n\r\n    errorHandler = ({ error }) => {\r\n        this.setState({ error })\r\n    };\r\n\r\n    onChangeCallback = (selectedInterval) => {\r\n        this.setState({ selectedInterval });\r\n        this.props.updateTimeRange(selectedInterval);\r\n    }\r\n    \r\n    formaTick = (ms: any) =>{\r\n        return format(new Date(ms), 'yy-MM-dd');\r\n    }\r\n\r\n    render() {\r\n        let disabledIntervals = [\r\n            { start: this.props.startTime, end: this.props.selectedInterval[0] },\r\n            { start: this.props.selectedInterval[1], end: this.props.endTime },\r\n        ]\r\n        return (<>\r\n            <div>\r\n                <TimeRange\r\n                    //containerClassName=\"toto2\"\r\n                    step={step}\r\n                    // ticksNumber={36}\r\n                    selectedInterval={this.props.selectedInterval}\r\n                    timelineInterval={[this.props.startTime, this.props.endTime]}\r\n                    onUpdateCallback={this.errorHandler}\r\n                    onChangeCallback={this.onChangeCallback}\r\n                    formatTick={(ms)=>{return this.formaTick(ms)}}\r\n                    disabledIntervals={disabledIntervals}\r\n                />\r\n            </div>\r\n            <div className=\"selected-interval\">\r\n                <span>Selected Interval: </span>\r\n                <span key={0}>{format(this.state.selectedInterval[0], \"dd MMM yyyy\")}</span>\r\n                {\" - \"}\r\n                <span key={1}>{format(this.state.selectedInterval[1], \"dd MMM yyyy\")}</span> \r\n            </div>\r\n        </>\r\n        )\r\n    }\r\n}","\r\nimport * as React from \"react\";\r\nimport Select from \"react-select\";\r\nimport makeAnimated from 'react-select/animated';\r\nimport { SelectOptions } from \"../../dto/selectOptions\";\r\n\r\n\r\ninterface Props {\r\n    options: SelectOptions[];\r\n    onChange: any;\r\n}\r\nconst animatedComponents = makeAnimated();\r\n\r\nexport class SelectRange extends React.Component<Props, Readonly<{}>>{\r\n\r\n    constructor(props: Props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Select\r\n            closeMenuOnSelect={true}\r\n            components={animatedComponents}\r\n            //defaultValue={[colourOptions[4], colourOptions[5]]}\r\n            // isMulti\r\n            options={this.props.options}\r\n            onChange={(e) => this.props.onChange(e)} />\r\n        )\r\n    }\r\n}","import { JsonObject, JsonProperty } from \"json2typescript\";\r\n\r\n@JsonObject(\"timeline\")\r\nexport class Timeline {\r\n  @JsonProperty(\"cases\")\r\n  cases: Map<string, string>;\r\n  @JsonProperty(\"deaths\")\r\n  deaths: Map<string, string>;\r\n  @JsonProperty(\"recovered\")\r\n  recovered: Map<string, string>;\r\n\r\n  constructor() {\r\n    this.cases = new Map();\r\n    this.deaths = new Map();\r\n    this.recovered = new Map();\r\n  }\r\n}\r\n","import { JsonObject, JsonProperty } from \"json2typescript\";\r\nimport { Timeline } from \"./Timeline\";\r\n\r\n@JsonObject(\"HistoricalCountry\")\r\nexport class HistoricalCountry {\r\n\r\n    @JsonProperty(\"country\")\r\n    country : string;\r\n    @JsonProperty(\"province\")\r\n    province : Array<string>;\r\n    @JsonProperty(\"timeline\")\r\n    timeline : Timeline;\r\n\r\n\r\n\tconstructor() {\r\n        this.country = '';\r\n        this.province= [];\r\n        this.timeline= new Timeline();\r\n\t}\r\n\r\n}","\r\nconst URL_DATA_TODAY : string = \"https://corona.lmao.ninja/v2/countries?today&sort\";\r\nconst URL_DATA_TODAY_TOTAL : string = \"https://corona.lmao.ninja/v2/all?today\";\r\nconst URL_HIST_DATA : string = 'https://corona.lmao.ninja/v3/covid-19/historical';//ma?lastdays=1\r\n\r\n\r\n    export const getTodayCovidData = ()=>{\r\n        return fetch(URL_DATA_TODAY).then((data)=>{\r\n            return data.json();\r\n        })\r\n    }\r\n\r\n    export const getTodayTotalCovidData  = ()=>{\r\n        return fetch(URL_DATA_TODAY_TOTAL).then((data)=>{\r\n            return data.json();\r\n        })\r\n    }\r\n\r\n    export const getHistoricalDataByCountryAndPeriod  = (countryName : string,period?: number)=>{\r\n        let url : string = URL_HIST_DATA+'/'+countryName + (period? '?lastdays='+period : '');\r\n        return fetch(url).then((data)=>{\r\n            return data.json();\r\n        })\r\n    }\r\n\r\n    export const getGlobalHistoricalDataByPeriod  = (period: number)=>{\r\n        let url : string = URL_HIST_DATA+'/all' + (period? '?lastdays='+period : '');\r\n        return fetch(url).then((data)=>{\r\n            return data.json();\r\n        })\r\n    }","import { JsonConvert, ValueCheckingMode } from \"json2typescript\";\r\n\r\nexport const WS_ISO2 = \"EH\";\r\n\r\nexport const jsonConvert = (): JsonConvert => {\r\n    let jsonConvert: JsonConvert = new JsonConvert();\r\n    jsonConvert.ignorePrimitiveChecks = false;\r\n    jsonConvert.valueCheckingMode = ValueCheckingMode.ALLOW_NULL;\r\n    return jsonConvert;\r\n};","import React from 'react';\r\nimport { FaSpinner } from 'react-icons/fa';\r\nimport './loading.css'\r\nconst Loading = (props : {active:boolean}) => {\r\n    console.log(\"call spinner\")\r\n    if(props.active){\r\n        return (\r\n            <div className='loading'>\r\n                <FaSpinner className='spinner' />\r\n            </div>\r\n        )\r\n    }else{\r\n        return null;\r\n    }\r\n    \r\n}\r\n\r\nexport default Loading;","export class SelectOptions {\r\n  value: string;\r\n  label: string;\r\n\r\n  constructor(value:string,label:string) {\r\n    this.value = value;\r\n    this.label =label;\r\n  }\r\n}\r\n","import * as React from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport { CountryDailyInfo } from \"../models/CountryDailyInfo\";\r\nimport { TotalInfo } from \"../models/TotalInfo\";\r\nimport { About } from \"../pages/about/About\";\r\nimport { Home } from \"../pages/home/home\";\r\nimport { Page1 } from \"../pages/page1/Page1\";\r\nimport { Page2 } from \"../pages/page2/Page2\";\r\nimport { Page3 } from \"../pages/page3/Page3\";\r\nimport { getCountryFromDataset } from \"../utils/countries\";\r\n\r\ninterface Props {\r\n    dataset: CountryDailyInfo[];\r\n    totalInfo: TotalInfo;\r\n}\r\ninterface State {\r\n\r\n}\r\nexport class Navigation extends React.Component<Props, State> {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Routes>\r\n                    <Route\r\n                        path={\"/\"}\r\n                        element={\r\n                            <Home totalInfo={this.props.totalInfo}/>\r\n                        }\r\n                    />\r\n                    <Route\r\n                        path={\"/map\"}\r\n                        element={\r\n                            <Page1 dataset={this.props.dataset} totalInfo={this.props.totalInfo} />\r\n                        }\r\n                    />\r\n                    <Route path={\"/stat\"} element={<Page2 dataset={this.props.dataset} />} />\r\n                    <Route path={\"/charts\"} element={<Page3 countriesRef={getCountryFromDataset(this.props.dataset)} />} />\r\n                    <Route path={\"/about\"} element={<About />} />\r\n                </Routes>\r\n            </>\r\n        )\r\n    }\r\n}","import { CountryDailyInfo } from \"../models/CountryDailyInfo\"\r\nimport { SelectOptions } from \"../dto/selectOptions\"\r\n\r\nexport const getCountryFromDataset = (dataset : CountryDailyInfo[])=>{\r\n        return dataset.map((elt : CountryDailyInfo)=>{\r\n            let label = elt.country;\r\n            let value = elt.countryInfo?.iso2;\r\n            return new SelectOptions(value,label);\r\n        })\r\n}","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { CountryDailyInfo } from \"./models/CountryDailyInfo\";\r\nimport { TotalInfo } from \"./models/TotalInfo\";\r\nimport { Footer } from \"./pages/footer/footer\";\r\nimport { Header } from \"./pages/header/header\";\r\nimport { Navigation } from \"./routes/navigation\";\r\nimport { getTodayCovidData, getTodayTotalCovidData } from \"./services/covidNinja/NinjaService\";\r\nimport { jsonConvert, WS_ISO2 } from \"./utils/Constants\";\r\nimport Loading from './../src/components/loading/loading';\r\ninterface State {\r\n  allCoutriesDailyinfo: CountryDailyInfo[];\r\n  totalInfo: TotalInfo;\r\n  isDataLoaded: boolean;\r\n}\r\n\r\nexport default class App extends Component<Readonly<{}>, State> {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      allCoutriesDailyinfo: [],\r\n      totalInfo: new TotalInfo(),\r\n      isDataLoaded: false\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.setState({ isDataLoaded: false }, () => {\r\n      getTodayCovidData().then((response) => {\r\n        let allDataExceptWS = response.filter((d: CountryDailyInfo) => {\r\n          return d.countryInfo.iso2 !== WS_ISO2;\r\n        });\r\n        let allCoutriesDailyinfo: CountryDailyInfo[] = jsonConvert().deserializeArray(allDataExceptWS, CountryDailyInfo);\r\n        getTodayTotalCovidData().then((response) => {\r\n          let totalInfo: TotalInfo = jsonConvert().deserializeObject(response, TotalInfo);\r\n          this.setState({\r\n            allCoutriesDailyinfo,\r\n            totalInfo,\r\n            isDataLoaded: true,\r\n          });\r\n        });\r\n      })\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div\r\n        className=\"container-fluid\"\r\n      >\r\n        <div id=\"header\" className=\"row\">\r\n          <Header />\r\n        </div>\r\n        <div className=\"main\">\r\n          <Loading active={!this.state.isDataLoaded} />\r\n          <Navigation dataset={this.state.allCoutriesDailyinfo} totalInfo={this.state.totalInfo} />\r\n        </div>\r\n        <footer className=\"footer\">\r\n          <Footer />\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// window.screen.orientation.lock('landscape');\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter >\r\n            <App />\r\n        </HashRouter>\r\n    </React.StrictMode>\r\n, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}