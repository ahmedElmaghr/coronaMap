{"version":3,"sources":["pages/footer/footer.tsx","components/nextPrevious/nextPrevious.tsx","pages/header/header.tsx","utils/StringUtils.js","utils/UIHelper.js","components/coronadash/mapD3/Legend.js","components/coronadash/mapD3/CoronaMapView.js","components/panelchart/Panel.js","utils/DataHelper.js","components/region/Region.js","components/coronadash/data/countries.tsv","components/coronadash/container/Container.js","components/card/Card.js","components/pieChart/PieChartFullOption.tsx","pages/home/Home.tsx","components/models/CountryDailyInfo.ts","components/table/DataTable.js","pages/statistics/Statistics.tsx","routes/router.tsx","App.js","services/covidNinja/NinjaService.ts","serviceWorker.js","index.js"],"names":["Footer","className","href","style","color","React","NextPrevious","props","onClick","this","clickPrevious","clickNext","Header","console","log","deleteSpecialChar","string","split","join","entity","num","toString","replace","getRadiusCases","cases","rayon","getRadiusDeath","value","separator","end","duration","d","context","checkToggleBTn","StringUtils","stat","deaths","checkZoneDesease","Legend","svg","d3","append","attr","text","svgMap","node","getBoundingClientRect","height","width","top","zIndex","id","Component","CoronaMapView","viewBox","borderColor","mergeMorrocanSahara","g","jsonData","morocco","objects","countries","geometries","filter","morrocanSahara","toBeMerged","datum","merge","calculatePath","getMoroccoCountryColor","covid19","on","clickOnCountry","data","morrocanTodayCases","c","country","todayCases","getCountryColor","addCountriesName","worldData","selectAll","includes","properties","name","enter","path","centroid","drawMap","i","markDesease","elt","e","trim","dailyNewCase","dailyCase","addZoom","call","scaleExtent","translateExtent","extent","closePanel","zoomed","transform","markerRed","markersBlack","placeLabel","contextDesease","scaledRadius","scaleRadius","k","contextDeaths","calculatedRadius","UIHelper","projection","geoMercator","center","scale","translate","precision","length","gGlobal","drawSvgWrapper","wrapper","PureComponent","Panel","handleClick","contains","target","handleClickOutside","tagName","getPanelParagraph","label","field","margin","fontSize","fontWeight","document","addEventListener","removeEventListener","opacity","x","y","ref","left","maxHeight","maxWidth","src","countryInfo","flag","tabIndex","right","getStatByPays","countryData","world","constructData","pays","statCovid19","result","forEach","coordinate","longitude","latitude","object","push","Region","drawCircles","markers","empty","drawZoneByContext","drawDimondPrincess","DataHelper","dataFiltered","filterCountriesByContext","getMarkerId","clickOnCircle","getCx","getCy","uihelper","getClassByContext","dataSorted","TotalDeaths","sort","e1","e2","totalDeath1Int","parseInt","ActiveCases","activeCase1Int","getRadius","getNodeColor","media","remove","Container","getData","TotalRecovered","position","getPositionPanel","setState","panelOpacity","panelZindex","sendSvgToBackground","onclick","panelStatDim","leftsideDim","headerDim","pageX","pageY","sendSvgToFrontPage","closePanelDetails","initGlobalStat","state","pieOpacity","countries110","feature","features","then","response","error","zoneDeaths","Card","totalConfirmed","activeCases","recovered","totalDeaths","totalInfo","countryClicked","Array","isArray","Country","active","todayRecovered","todayDeaths","marginLeft","PieChartFullOption","useState","selected","setSelected","undefined","hovered","setHovered","map","entry","fontFamily","radius","PieChart","defaultProps","lineWidth","segmentsStyle","transition","cursor","segmentsShift","index","animate","dataEntry","Math","round","percentage","labelPosition","labelStyle","fill","pointerEvents","_","onMouseOver","onMouseOut","Home","getPieData","totalCases","getGlobalStat","totalStatistics","onclickCountry","countryFiltered","dataset","pieData","paddingRight","window","screen","overflow","title","CountryDailyInfo","JsonObject","JsonProperty","String","Number","Object","updated","critical","tests","population","continent","columnsSchema","headerName","valueGetter","params","row","iso3","editable","type","description","sortable","DataTable","rows","columns","pageSize","rowsPerPageOptions","checkboxSelection","disableSelectionOnClick","Statistics","coutriesDailyinfo","JsonConvert","deserializeArray","Router","element","App","isDataLoaded","fetch","json","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.159d498e.chunk.js","sourcesContent":["import * as React from \"react\"\r\n\r\nexport class Footer extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                    <i className=\"fa fa-github-square\" aria-hidden=\"true\"></i>\r\n                    <a\r\n                        href=\"https://github.com/ahmedElmaghr/coronaMap.git\"\r\n                        className=\"github-link\"\r\n                        style={{ color: \"white\" }}\r\n                    >\r\n                        {\" \"}\r\n                        github repository\r\n                    </a>\r\n            </>\r\n        )\r\n    }\r\n}","import * as React from \"react\";\r\ninterface Props{\r\n    clickPrevious : any;\r\n    clickNext : any;\r\n}\r\ninterface State{\r\n\r\n}\r\nexport class NextPrevious extends React.Component<Props,State>{\r\n\r\n    constructor(props : Props){\r\n        super(props);\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <button className=\"btn\" style={{color:\"white\"}} onClick={this.props.clickPrevious}><i className=\"fa fa-caret-left\"/></button>\r\n                 Today \r\n                <button className=\"btn\" style={{color:\"white\"}} onClick={this.props.clickNext}> <i className=\"fa fa-caret-right\" aria-hidden=\"true\"/></button>\r\n            </div>\r\n        )\r\n        \r\n        \r\n    }\r\n}","import * as React from \"react\"\r\nimport { NextPrevious } from \"../../components/nextPrevious/nextPrevious\"\r\n\r\nexport class Header extends React.Component {\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <div className=\"header\">\r\n                    <NextPrevious clickPrevious={()=>{console.log(\"click previous\")}} clickNext={()=>{console.log(\"click next\")}} />\r\n                    <div>covid19 worldwide <i className=\"fa fa-globe\" aria-hidden=\"true\"></i></div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}","  //verify string not empty\r\n  const isNotEmpty = entity => {\r\n   return entity != \"\" && entity != null;\r\n   //    return entity != null && entity.trim() != \"\";\r\n\r\n  };\r\n\r\n  //\r\n  const deleteSpecialChar = (string)=>{\r\n    if(typeof string != \"string\"){\r\n      throw \"formatStringToNumber is applied only on string format\"\r\n    }\r\n    var splitted = string.split(`,`).join('');\r\n\r\n    return splitted;\r\n  }\r\n\r\n  const stringVirSepToNumber = (string)=>{\r\n    var stringWithoutSpecChar = deleteSpecialChar(string);\r\n    return parseInt(stringWithoutSpecChar,10);\r\n  }\r\n\r\n  const formatNumberToString = (num) =>{\r\n    return num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n  }\r\n\r\nexport default { isNotEmpty,deleteSpecialChar,stringVirSepToNumber,formatNumberToString};","\r\nimport React from 'react';\r\nimport CountUp from 'react-countup';\r\nimport StringUtils from './StringUtils';\r\n\r\n/** example \"16.25\" -> 16,25 + counter  */\r\nconst buildCountUpByStringValue = (value)=>{\r\n    return (\r\n      <CountUp\r\n        separator=\",\"\r\n        end={value}\r\n        duration={0.5}\r\n      ></CountUp>\r\n    );\r\n  }\r\n\r\nconst   calculateRadius = (d, context) => {\r\n  let cases;\r\n  if (context.checkToggleBTn) {\r\n    cases = StringUtils.deleteSpecialChar(d.stat.deaths);\r\n    return getRadiusDeath(cases)\r\n  } else if (context.checkZoneDesease) {\r\n    cases = StringUtils.deleteSpecialChar(d.stat.cases);\r\n    return getRadiusCases(cases)\r\n  }\r\n};\r\n\r\nconst getRadiusCases = (cases)=>{\r\n  let rayon = 0;\r\n  if (0 <= cases && cases < 1000) {\r\n    let r = (cases / 1000) * 5;\r\n    rayon = r;\r\n  } else if (1000 <= cases && cases < 5000) {\r\n    let r = (cases / 5000) * 10;\r\n    rayon = r;\r\n  } else if (5000 <= cases && cases < 10000) {\r\n    let r = (cases / 10000) * 20;\r\n    rayon = r;\r\n  } else if (10000 <= cases && cases < 60000) {\r\n    let r = (cases / 50000) * 50;\r\n    rayon = r;\r\n  }else if (60000 <= cases && cases < 100000) {\r\n    let r = (cases / 100000) * 60;\r\n    rayon = r;\r\n  }\r\n  \r\n  return rayon < 1 && rayon > 0 ? 2 : rayon;\r\n}\r\n\r\nconst getRadiusDeath = (cases)=>{\r\n  let rayon = 0;\r\n  if (0 <= cases && cases < 1000) {\r\n    let r = (cases / 1000) * 5;\r\n    rayon = r;\r\n  } else if (1000 <= cases && cases < 2000) {\r\n    let r = (cases / 2000) * 20;\r\n    rayon = r;\r\n  } else if (2000 <= cases && cases < 5000) {\r\n    let r = (cases / 5000) * 22;\r\n    rayon = r;\r\n  } else if (5000 <= cases && cases < 15000) {\r\n    let r = (cases / 5000) * 25;\r\n    rayon = r;\r\n  }else{\r\n    rayon = 30;\r\n  }\r\n  \r\n  return rayon < 1 && rayon > 0 ? 2 : rayon;\r\n}\r\n\r\nexport default{buildCountUpByStringValue,calculateRadius}","import * as d3 from \"d3\";\r\nimport React, { Component } from \"react\";\r\nimport \"./Legend.css\";\r\n\r\nexport default class Legend extends Component {\r\n  componentDidMount() {\r\n    var svg = d3.select(\"#legend\")\r\n    // Handmade legend\r\n    svg.append(\"circle\").attr(\"cx\",10).attr(\"cy\",10).attr(\"r\", 6).style(\"fill\", \"#6f8d43\")\r\n    svg.append(\"circle\").attr(\"cx\",10).attr(\"cy\",30).attr(\"r\", 6).style(\"fill\", \"#71c7ec\")\r\n    svg.append(\"circle\").attr(\"cx\",10).attr(\"cy\",50).attr(\"r\", 6).style(\"fill\", \"#65b3d4\")\r\n    svg.append(\"circle\").attr(\"cx\",10).attr(\"cy\",70).attr(\"r\", 6).style(\"fill\", \"#386376\")\r\n    svg.append(\"circle\").attr(\"cx\",10).attr(\"cy\",90).attr(\"r\", 6).style(\"fill\", \"#16272f\")\r\n    // svg.append(\"circle\").attr(\"cx\",10).attr(\"cy\",110).attr(\"r\", 6).style(\"fill\", \"#386376\")\r\n    svg.append(\"circle\").attr(\"cx\",10).attr(\"cy\",110).attr(\"r\", 6).style(\"fill\", \"rgba(218, 223, 225, 1)\")\r\n\r\n    svg.append(\"text\").attr(\"x\", 30).attr(\"y\", 10).text(\"no new cases\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\r\n    svg.append(\"text\").attr(\"x\", 30).attr(\"y\", 30).text(\"< 2k\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\r\n    svg.append(\"text\").attr(\"x\", 30).attr(\"y\", 50).text(\"2k - 5K\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\r\n    svg.append(\"text\").attr(\"x\", 30).attr(\"y\", 70).text(\"5K - 15K\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\r\n    svg.append(\"text\").attr(\"x\", 30).attr(\"y\", 90).text(\">15k\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\r\n    // svg.append(\"text\").attr(\"x\", 30).attr(\"y\", 110).text(\"30K - 100K\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\r\n    svg.append(\"text\").attr(\"x\", 30).attr(\"y\", 110).text(\"infos not available\").style(\"font-size\", \"15px\").attr(\"alignment-baseline\",\"middle\")\r\n\r\n    \r\n  }\r\n\r\n  render() {\r\n    let svgMap = d3.selectAll('#content').node().getBoundingClientRect();\r\n    return (\r\n      <div className=\"legend\" style = {{height:'30%',width:'15%',top : svgMap.height*.6,zIndex:1}}>\r\n        <svg  id = \"legend\" style = {{height:'100%',width:'100%'}}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import * as d3 from \"d3\";\r\nimport React, { PureComponent } from \"react\";\r\nimport { merge } from \"topojson-client\";\r\nimport UIHelper from \"../../../utils/UIHelper\";\r\nimport \"./CoronaMapViewCss.css\";\r\nimport Legend from \"./Legend.js\";\r\n\r\nexport default class CoronaMapView extends PureComponent {\r\n  //Constantes\r\n\r\n  width = \"100%\";\r\n  height = \"100%\";\r\n  viewBox = `0 0 800 400`;\r\n  borderColor = \"blue\";\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (this.props.jsonData.length != 0) {\r\n      //Draw svg Wrapper\r\n      var svg = this.drawSvgWrapper();\r\n      var gGlobal = svg.append(\"g\").attr(\"id\", \"gWrapper\");\r\n      //Draw Path from worldData\r\n      var g = this.drawMap(gGlobal, this.props.worldData);\r\n      //Merge morrocan sahara\r\n      this.mergeMorrocanSahara(g);\r\n      //country names\r\n      this.addCountriesName(g,this.props.worldData);\r\n      //add zoom\r\n      var wrapper = d3.select(\"#content\");\r\n      this.addZoom(wrapper);\r\n    }\r\n  }\r\n\r\n  mergeMorrocanSahara = g => {\r\n    //merge Morocco\r\n    var jsonData = this.props.jsonData;\r\n    //Moroccan Sahara id = 732\r\n    //Morocco id = 504\r\n    var morocco = jsonData.objects.countries.geometries.filter(\r\n      d => d.id == 504\r\n    );\r\n    var morrocanSahara = jsonData.objects.countries.geometries.filter(\r\n      d => d.id == 732\r\n    );\r\n    var toBeMerged = [morocco[0], morrocanSahara[0]];\r\n    //\r\n    g.append(\"path\")\r\n      .datum(merge(jsonData, toBeMerged))\r\n      .attr(\"class\", \"country\")\r\n      .attr(\"d\", d => this.calculatePath(d))\r\n      .attr(\"fill\", this.getMoroccoCountryColor(this.props.covid19))\r\n      .on(\"click\", (d) => {\r\n        this.props.clickOnCountry()\r\n      })\r\n  };\r\n\r\n   getMoroccoCountryColor = (data) => {\r\n    const moroccoData = data.filter(c => c.country == \"Morocco\");\r\n    let morrocanTodayCases = moroccoData[0].todayCases;\r\n    return this.getCountryColor(morrocanTodayCases); \r\n   }\r\n\r\n   addCountriesName = (g, worldData) => {\r\n    g.selectAll(\".place-label\")\r\n      .data(\r\n        worldData.filter((d) => {\r\n          return [\r\n            \"Morocco\",\r\n            \"USA\",\r\n            \"China\",\r\n            \"Brazil\",\r\n            \"Australia\",\r\n            \"Russia\",\r\n            \"South Africa\",\r\n            \"Chile\",\r\n            \"Mexico\",\r\n            \"Iran\",\r\n            \"Germany\",\r\n            \"Nigeria\",\r\n            \"Egypt\",\r\n            \"India\",  \r\n            \"Greenland\",\r\n            \"France\"\r\n          ].includes(d.properties.name);\r\n        })\r\n      )\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"class\", \"place-label\")\r\n      .attr(\"x\", (d) => {\r\n        return this.path().centroid(d)[0];\r\n      })\r\n      .attr(\"y\", (d) => {\r\n        return this.path().centroid(d)[1];\r\n      })\r\n      .text((d) => {\r\n        return d.properties.name;\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Legend></Legend>\r\n    );\r\n  }\r\n\r\n\r\n  //Draw svg wrapper for map\r\n  drawSvgWrapper() {\r\n    //Construct Body\r\n    var body = d3.select(\"#mapWW\")\r\n    //Construct SVG\r\n    var svg = body\r\n      .append(\"svg\")\r\n      .attr(\"class\", \"svg\")\r\n      .attr(\"id\", \"content\")\r\n      .attr(\"width\", this.width)\r\n      // .attr(\"height\", window.screen.height +'px')\r\n      .attr(\"viewBox\", this.viewBox)\r\n      ;\r\n    return svg;\r\n  }\r\n\r\n  //Draw the world Map\r\n  drawMap = (node, worldData) => {\r\n      var g = node\r\n        .append(\"g\")\r\n        .attr(\"id\", \"worldMap\")\r\n        .attr(\"className\", \"countries\");\r\n      g.selectAll(\"path\")\r\n        .data(worldData)\r\n        .enter()\r\n        .append(\"path\")\r\n        .attr(\"key\", (d, i) => `path-${i}`)\r\n        .attr(\"d\", d => this.calculatePath(d))\r\n        .attr(\"class\", \"country\")\r\n        .attr(\"fill\", (d) => {\r\n          return this.markDesease(d)\r\n        })\r\n        .on(\"click\", (d) => {\r\n          this.props.clickOnCountry(d);\r\n        })\r\n      return g;\r\n\r\n  };\r\n\r\n  //Color land \r\n  markDesease = (d) => {\r\n    let elt = this.props.covid19.filter((e) => {\r\n      let countryTrimmed = e.country ? e.country.trim() : \"\";\r\n\r\n      return countryTrimmed == d.properties.name\r\n    })\r\n    if (elt[0]) {\r\n      let dailyNewCase = elt[0].todayCases;\r\n      return this.getCountryColor(dailyNewCase);\r\n\r\n    } else {\r\n      return `rgba(218, 223, 225, 1)`\r\n    }\r\n  }\r\n\r\n  //Get country color range rgba(255,255,255)\r\n  getCountryColor = (dailyCase) => {\r\n    if(dailyCase == 0){\r\n      return '#6f8d43'\r\n    } \r\n    \r\n    /*else if (0 < dailyCase && dailyCase <= 100) {\r\n      return '#71c7ec'\r\n    } else if (100 <= dailyCase && dailyCase < 200) {\r\n      return '#65b3d4'\r\n    } else if (200 <= dailyCase && dailyCase < 500) {\r\n      return '#5a9fbc'\r\n    } else if (500 <= dailyCase && dailyCase < 1000) {\r\n      return '#4f8ba5'\r\n    } else if (1000 <= dailyCase && dailyCase < 5000) {\r\n      return '#43778d'\r\n    } */\r\n    else if (0 < dailyCase && dailyCase <= 2000) {\r\n      return '#71c7ec'\r\n    }\r\n    else if (2000 < dailyCase && dailyCase <= 5000) {\r\n      return '#65b3d4'\r\n    }\r\n    else if (5000 <= dailyCase && dailyCase < 15000) {\r\n      return '#386376'\r\n    } else if (15000 <= dailyCase) {\r\n      return '#16272f'\r\n    }\r\n\r\n  }\r\n\r\n\r\n\r\n  //Add zoom\r\n  addZoom = svg => {\r\n    const map = d3.select(\".svg\");\r\n    const width = map.node().getBoundingClientRect().width;\r\n    const height = width / 3;\r\n\r\n    svg.call(d3.zoom()\r\n    .scaleExtent([1, 50])\r\n    .translateExtent([[0,0], [width, height]])\r\n    .extent([[0, 0], [width, height]])\r\n    .on(\"zoom\", () => {\r\n      this.props.closePanel();\r\n      this.zoomed(svg)\r\n    }));\r\n  };\r\n\r\n  zoomed = svg => {\r\n    var transform = d3.event.transform;\r\n    svg.selectAll(\"path,circle,.place-label\").attr(\"transform\", transform);\r\n    var markerRed = d3.selectAll(\".marker-red\");\r\n    var markersBlack = d3.selectAll(\".marker-black\");\r\n    var placeLabel = d3.selectAll(\".place-label\");\r\n\r\n    let contextDesease = { checkToggleBTn: false , checkZoneDesease:true}\r\n    markerRed.attr(\"r\", (d)=>{\r\n      let scaledRadius =this.scaleRadius(d,contextDesease,transform.k)\r\n      return scaledRadius<5 ? 5 : scaledRadius;\r\n    } )\r\n    let contextDeaths = { checkToggleBTn: true , checkZoneDesease:false}\r\n    markersBlack.attr(\"r\", (d)=>{\r\n      let scaledRadius =this.scaleRadius(d,contextDeaths,transform.k)\r\n      return scaledRadius<5 ? 5 : scaledRadius;\r\n    } );\r\n  //Countries label Transformation\r\n  let k = transform.k;\r\n\r\n  if (k >= 1 && k < 2) {\r\n    placeLabel.style(\"font-size\", \"10px\");\r\n  } else if (k >= 2 && k < 3) {\r\n    placeLabel.style(\"font-size\", \"5px\");\r\n  } else if (k >= 3 && k < 8) {\r\n    placeLabel.style(\"font-size\", \"3px\").style(\"stroke-width\", \"0.1px\");\r\n  } else {\r\n    placeLabel\r\n      .style(\"font-size\", \"1px\")\r\n      .style(\"stroke-width\", \"0px\")\r\n      .style(\"letter-spacing\", \"0px\");\r\n  }\r\n\r\n};\r\n  /**\r\n   * d: element data\r\n   * context : the contxt\r\n   * k : scale projection [0,1]\r\n   */\r\n  scaleRadius = (d,context,k)=>{\r\n    let calculatedRadius = UIHelper.calculateRadius(d, context)/2;\r\n    let scaledRadius = k> .5 ? calculatedRadius/k : calculatedRadius\r\n    return scaledRadius + \"px\";\r\n  }\r\n\r\n  //Projection and path calculator\r\n  projection = () =>{\r\n    var geoMercator = d3\r\n      .geoMercator()\r\n      .center([0,-60])\r\n      .scale(80)\r\n      .translate([800 / 2, 650 / 2]);\r\n\r\n    var projection2 = d3\r\n      .geoOrthographic()\r\n      .center([0,-15])\r\n      .scale(190)\r\n      .precision(0.1);\r\n    var projection3 = d3\r\n      .geoConicEqualArea()\r\n      .scale(100)\r\n      .center([0, 150])\r\n      //.translate([width / 2, height / 2])\r\n      .precision(0.3);\r\n    return geoMercator;\r\n  }\r\n\r\n  calculatePath = d => {\r\n    return d3.geoPath().projection(this.projection())(d);\r\n  };\r\n\r\n  path = () => {\r\n    return d3.geoPath().projection(this.projection());\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport StringUtils from \"../../utils/StringUtils\";\r\nimport \"./Panel.css\";\r\n\r\nexport default class Panel extends React.Component {\r\n  \r\n  componentWillMount(){\r\n    document.addEventListener(\"click\",this.handleClick,false)\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    document.removeEventListener(\"click\",this.handleClick,false)\r\n  }\r\n\r\n  handleClick=(e)=>{\r\n    if(this.node.contains(e.target)){\r\n      return;\r\n    }\r\n    this.handleClickOutside(e)\r\n  }\r\n\r\n  handleClickOutside=(e)=>{\r\n    if(e.target.tagName!==\"path\" && e.target.tagName!==\"circle\"){\r\n      this.props.closePanel();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { stat, opacity,zIndex, x, y } = this.props;\r\n    return (\r\n      <div ref={(node) => (this.node = node)}>\r\n        <div\r\n          id=\"panelStat\"\r\n          className=\"mapboxgl-popup mapboxgl-popup-anchor-bottom\"\r\n          style={{\r\n            top: y + \"px\",\r\n            left: x + \"px\",\r\n            opacity: opacity,\r\n            zIndex: zIndex,\r\n          }}\r\n        >\r\n          <div className=\"mapboxgl-popup-tip\"></div>\r\n          <div className=\"mapboxgl-popup-content\">\r\n            <div\r\n              className=\"maphub-popup-inner maphub-popup-text ps\"\r\n              style={{ maxHeight: 411 + \"px\", maxWidth: 840 + \"px\" }}\r\n            >\r\n              <span\r\n                className=\"closePanel\"\r\n                onClick={() => {\r\n                  this.props.closePanel();\r\n                }}\r\n              >\r\n                X\r\n              </span>\r\n              <div className=\"nicetext\">\r\n                <div>\r\n                  <div className=\"nicetext-title panelTitle1\">\r\n                    <img className = \"impFlag\"src={stat?(stat.countryInfo? stat.countryInfo.flag : \"\") : \"\"}/>\r\n                    {\" \"}\r\n                    <span>{stat ? stat.country : \"\"}</span>\r\n                    \r\n                  </div>\r\n                </div>\r\n                <div>\r\n                  <p className=\"panelTitle2\">Daily news</p>\r\n                  {this.getPanelParagraph(\r\n                    stat,\r\n                    \"green\",\r\n                    \"New recovered\",\r\n                    \"todayRecovered\"\r\n                  )}\r\n                  {this.getPanelParagraph(\r\n                    stat,\r\n                    \"darkorange\",\r\n                    \"New cases\",\r\n                    \"todayCases\"\r\n                  )}\r\n                  {this.getPanelParagraph(\r\n                    stat,\r\n                    \"darkred\",\r\n                    \"New deaths\",\r\n                    \"todayDeaths\"\r\n                  )}\r\n                  <p className=\"panelTitle2\">Total</p>\r\n                  {this.getPanelParagraph(\r\n                    stat,\r\n                    \"green\",\r\n                    \"Total recovered\",\r\n                    \"recovered\"\r\n                  )}\r\n                  {this.getPanelParagraph(\r\n                    stat,\r\n                    \"black\",\r\n                    \"Total deaths\",\r\n                    \"deaths\"\r\n                  )}\r\n                  {this.getPanelParagraph(\r\n                    stat,\r\n                    \"darkorange\",\r\n                    \"Total cases\",\r\n                    \"cases\"\r\n                  )}\r\n                  {this.getPanelParagraph(\r\n                    stat,\r\n                    \"black\",\r\n                    \"Total tests\",\r\n                    \"tests\"\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div\r\n                className=\"ps__rail-x\"\r\n                style={{ left: 0 + \"px\", top: 0 + \"px\" }}\r\n              >\r\n                <div\r\n                  className=\"ps__thumb-x\"\r\n                  tabIndex=\"0\"\r\n                  style={{ left: 0 + \"px\", width: 0 + \"px\" }}\r\n                ></div>\r\n              </div>\r\n              <div\r\n                className=\"ps__rail-y\"\r\n                style={{ top: 0 + \"px\", right: 0 + \"px\" }}\r\n              >\r\n                <div\r\n                  className=\"ps__thumb-y\"\r\n                  tabIndex=\"0\"\r\n                  style={{ top: 0 + \"px\", height: 0 + \"px\" }}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  getPanelParagraph = (stat,color,label,field)=>{\r\n    return <p\r\n    style={{\r\n      color,\r\n       //borderTop: \"solid 1px\",\r\n      margin: \"2px 2px 2px 2px\",\r\n       //borderRadius: 6 + \"px\",\r\n      fontSize: 12+'px',\r\n      fontWeight: 'bold'\r\n    }}\r\n  >\r\n    \r\n    {label + \": \"}\r\n    {(stat && StringUtils.isNotEmpty(stat[field])) ? StringUtils.formatNumberToString(stat[field]) : \"0\"}\r\n\r\n  </p>\r\n  }\r\n}\r\n","\r\nconst constructData = (pays, statCovid19) => {\r\n    var result = [];\r\n    var i = 0;\r\n    pays.forEach((d) => {\r\n        var coordinate = {\r\n            longitude: d.longitude,\r\n            latitude: d.latitude\r\n        };\r\n\r\n        var object = {\r\n            id: i,\r\n            coordinate,\r\n            data: d,\r\n            stat: getStatByPays(d, statCovid19)\r\n        }\r\n        result.push(object);\r\n        i++;\r\n    })\r\n\r\n    return result;\r\n}\r\n\r\nconst getStatByPays = (d, covid19) => {\r\n    let variable = covid19.filter(world => {\r\n        let countryTrimmed = world.country ? world.country.trim() : \"\";\r\n        return countryTrimmed === d.name\r\n    })\r\n    let countryData = variable[0];\r\n    if (countryData) {\r\n        return countryData\r\n    } else {\r\n        return {\r\n            country: d.name\r\n        };\r\n    }\r\n}\r\nexport default { constructData, getStatByPays };","import * as d3 from \"d3\";\r\nimport { Component } from \"react\";\r\nimport DataHelper from \"../../utils/DataHelper.js\";\r\nimport StringUtils from \"../../utils/StringUtils.js\";\r\nimport uihelper from '../../utils/UIHelper';\r\nimport \"./Region.css\";\r\nclass Region extends Component {\r\n\r\n  componentWillUnmount() {\r\n    d3.selectAll(\"#markersDeaths,#markersDesease\").remove();\r\n    //.attr(\"visibility\", \"hidden\").style(\"opacity\",0);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { countries, covid19, context } = this.props;\r\n    this.drawCircles(countries, covid19, context);\r\n    //add zoom\r\n    return \"\";\r\n  }\r\n\r\n\r\n  //Create the world map\r\n  drawCircles = (countries, covid19, context) => {\r\n    let markers ;\r\n    if(context.checkZoneDesease){\r\n      markers = d3.selectAll(\"#markersDesease\");\r\n      d3.selectAll(\"#markersDeaths\").attr(\"visibility\", \"hidden\");\r\n    }\r\n    if(context.checkToggleBTn){\r\n      markers = d3.selectAll(\"#markersDeaths\");\r\n      d3.selectAll(\"#markersDesease\").attr(\"visibility\", \"hidden\");\r\n    }\r\n    if (markers.empty()) {\r\n      var gGlobal = d3.select(\"#gWrapper\");\r\n      //Draw Medias\r\n      this.drawZoneByContext(gGlobal, countries, covid19, context);\r\n      this.drawDimondPrincess(gGlobal, countries, covid19);\r\n    } \r\n    // else {\r\n    //   markers.attr(\"visibility\", \"visible\").style(\"opacity\",1);\r\n    // }\r\n  };\r\n\r\n  drawDimondPrincess = (node, countries, covid19) => {\r\n    let dimondPrincess = countries.filter(e => {\r\n      return e.country == \"DP\";\r\n    });\r\n    let statDP = DataHelper.getStatByPays(\r\n      { name: \"Diamond Princess\" },\r\n      covid19\r\n    );\r\n  };\r\n\r\n  //Add Markers Function\r\n  drawZoneByContext = (node, countries, covid19, context) => {\r\n    let data = DataHelper.constructData(countries, covid19);\r\n    var markers;\r\n    let dataFiltered = this.filterCountriesByContext(data, context);\r\n    if (dataFiltered) {\r\n      markers = node\r\n        .append(\"g\")\r\n        .attr(\"id\", this.getMarkerId(context))\r\n      markers\r\n        .selectAll(\"circle\")\r\n        .data(dataFiltered)\r\n        .enter()\r\n        .append(\"circle\")\r\n        .on(\"click\", (d, i) => {\r\n          this.props.clickOnCircle(d);\r\n        })\r\n        .attr(\"key\", d => `marker-${d.id}`)\r\n        .attr(\"cx\", d => {\r\n          return this.getCx(d);\r\n        })\r\n        .attr(\"cy\", d => {\r\n          return this.getCy(d);\r\n        })\r\n        .attr(\"r\", d => {\r\n          return uihelper.calculateRadius(d, context)/2  + \"px\";\r\n        })\r\n        .attr(\"class\", this.getClassByContext(context))\r\n        .append(\"title\")\r\n        .text(d => {\r\n          return `country : ${d.data.country} cases : ${d.stat.cases}`;\r\n        });\r\n    }\r\n    return markers;\r\n  };\r\n\r\n  getClassByContext = (context)=>{\r\n    if(context.checkToggleBTn){\r\n      return \"marker-black\"\r\n    }else if(context.checkZoneDesease){\r\n      return \"marker-red\"\r\n    }\r\n    \r\n  }\r\n\r\n  getMarkerId = (context)=>{\r\n    if(context.checkToggleBTn){\r\n      return \"markersDeaths\"\r\n    }else if(context.checkZoneDesease){\r\n      return \"markersDesease\"\r\n    }\r\n    \r\n  }\r\n\r\n  filterCountriesByContext = (data, context) => {\r\n    let dataFiltered;\r\n    let dataSorted;\r\n    if (context.checkToggleBTn) {\r\n      dataFiltered = data.filter(\r\n        d =>\r\n          d.stat != null &&\r\n          d.stat.TotalDeaths != 0 &&\r\n          d.stat.TotalDeaths != null &&\r\n          d.data.country != \"DP\"\r\n      );\r\n      dataSorted = dataFiltered.sort((e1, e2) => {\r\n        var totalDeath1Int = parseInt(\r\n          StringUtils.deleteSpecialChar(e1.stat.deaths),\r\n          10\r\n        );\r\n        var totalDeath2Int = parseInt(\r\n          StringUtils.deleteSpecialChar(e2.stat.deaths),\r\n          10\r\n        );\r\n        return totalDeath2Int - totalDeath1Int;\r\n      });\r\n    } else if (context.checkZoneDesease) {\r\n      dataFiltered = data.filter(\r\n        d =>\r\n          d.stat != null &&\r\n          d.stat.ActiveCases != 0 &&\r\n          d.stat.ActiveCases != null &&\r\n          d.data.country != \"DP\"\r\n      );\r\n      dataSorted = dataFiltered.sort((e1, e2) => {\r\n        var activeCase1Int = parseInt(\r\n          StringUtils.deleteSpecialChar(e1.stat.cases),\r\n          10\r\n        );\r\n        var activeCase2Int = parseInt(\r\n          StringUtils.deleteSpecialChar(e2.stat.cases),\r\n          10\r\n        );\r\n        return activeCase2Int - activeCase1Int;\r\n      });\r\n    }\r\n\r\n    return dataSorted;\r\n  };\r\n\r\n  getRadius = (d, context) => {\r\n\r\n    let cases;\r\n    if (context.checkToggleBTn) {\r\n      cases = StringUtils.deleteSpecialChar(d.stat.deaths);\r\n      return this.getRadiusDeath(cases)\r\n    } else if (context.checkZoneDesease) {\r\n      cases = StringUtils.deleteSpecialChar(d.stat.cases);\r\n      return this.getRadiusCases(cases)\r\n    }\r\n  };\r\n  getRadiusCases = (cases)=>{\r\n    let rayon = 0;\r\n    if (0 <= cases && cases < 1000) {\r\n      let r = (cases / 1000) * 5;\r\n      rayon = r;\r\n    } else if (1000 <= cases && cases < 5000) {\r\n      let r = (cases / 5000) * 10;\r\n      rayon = r;\r\n    } else if (5000 <= cases && cases < 10000) {\r\n      let r = (cases / 10000) * 20;\r\n      rayon = r;\r\n    } else if (10000 <= cases && cases < 60000) {\r\n      let r = (cases / 50000) * 50;\r\n      rayon = r;\r\n    }else if (60000 <= cases && cases < 100000) {\r\n      let r = (cases / 100000) * 60;\r\n      rayon = r;\r\n    }\r\n    \r\n    return rayon < 1 && rayon > 0 ? 2 : rayon;\r\n  }\r\n  \r\n  getRadiusDeath = (cases)=>{\r\n    let rayon = 0;\r\n    if (0 <= cases && cases < 1000) {\r\n      let r = (cases / 1000) * 10;\r\n      rayon = r;\r\n    } else if (1000 <= cases && cases < 2000) {\r\n      let r = (cases / 2000) * 30;\r\n      rayon = r;\r\n    } else if (2000 <= cases && cases < 5000) {\r\n      let r = (cases / 5000) * 40;\r\n      rayon = r;\r\n    } else if (5000 <= cases && cases < 15000) {\r\n      let r = (cases / 5000) * 45;\r\n      rayon = r;\r\n    }\r\n    \r\n    return rayon < 1 && rayon > 0 ? 2 : rayon;\r\n  }\r\n  getCx = d => {\r\n    if (StringUtils.isNotEmpty(d)) {\r\n      var x = d.coordinate.latitude;\r\n      var y = d.coordinate.longitude;\r\n\r\n      var coordinate = [x, y];\r\n      return this.projection()(coordinate)[0];\r\n    }\r\n  };\r\n\r\n  getCy = d => {\r\n    if (StringUtils.isNotEmpty(d)) {\r\n      var x = d.coordinate.latitude;\r\n      var y = d.coordinate.longitude;\r\n      var coordinate = [x, y];\r\n      return this.projection()(coordinate)[1];\r\n    }\r\n  };\r\n\r\n  //get node color\r\n  getNodeColor = (id, media) => {\r\n    var childsCount = media.filter(d => d.id === id).length;\r\n    if (childsCount == 0) {\r\n      return \"rgba(65, 131, 215, 1)\";\r\n    } else {\r\n      return \"rgba(214, 69, 65, 1)\";\r\n    }\r\n  };\r\n\r\n  //Projection and path calculator\r\n  projection() {\r\n    var geoMercator = d3\r\n    .geoMercator()\r\n    .center([0,-60])\r\n    .scale(80)\r\n    .translate([800 / 2, 650 / 2]);\r\n\r\n    var projection2 = d3\r\n      .geoOrthographic()\r\n      .scale(300)\r\n      .precision(0.1);\r\n    var projection3 = d3\r\n      .geoConicEqualArea()\r\n      .scale(150)\r\n      .center([0, 33])\r\n      //.translate([width / 2, height / 2])\r\n      .precision(0.3);\r\n    return geoMercator;\r\n  }\r\n  \r\n}\r\n\r\nexport default Region;\r\n","export default __webpack_public_path__ + \"static/media/countries.9e8d431d.tsv\";","import * as d3 from \"d3\";\r\nimport React, { Component } from \"react\";\r\nimport { feature } from \"topojson-client\";\r\nimport CoronaMapView from \"../mapD3/CoronaMapView\";\r\nimport Panel from \"../../panelchart/Panel\";\r\nimport Region from \"../../region/Region\";\r\nimport DataHelper from \"../../../utils/DataHelper.js\";\r\nimport countries110 from \"../../../countries-110m.json\";\r\nimport countries from \"../data/countries.tsv\";\r\n\r\nclass Container extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      worldData: [],\r\n      jsonData: [],\r\n      countries: [],\r\n      pieOpacity: 0,\r\n      panelOpacity: 0,\r\n\r\n      context: {\r\n        checkToggleBTn: false,\r\n        checkZoneDesease: false\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let worldData = countries110;\r\n\r\n    this.setState({\r\n      worldData: feature(worldData, worldData.objects.countries).features,\r\n      jsonData: worldData\r\n    });\r\n\r\n    d3.tsv(countries).then((response, error) => {\r\n      this.setState({\r\n        countries: response\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      worldData,\r\n      jsonData,\r\n      countries,\r\n      panelOpacity,\r\n      context\r\n    } = this.state;\r\n    const { covid19 } = this.props;\r\n    let zoneDeaths = \"\";\r\n\r\n    if (context && (context.checkToggleBTn || context.checkZoneDesease)) {\r\n      zoneDeaths = (\r\n        <Region\r\n          context = {context}\r\n          worldData={worldData}\r\n          countries={countries}\r\n          covid19={covid19}\r\n          clickOnCircle={d => {\r\n            this.clickOnCircle(d);\r\n          }}\r\n        />\r\n      );\r\n    }\r\n    if (jsonData.length != 0 && covid19) {\r\n      return (\r\n        <div>\r\n          <CoronaMapView\r\n            worldData={worldData}\r\n            jsonData={jsonData}\r\n            closePanel={() => {\r\n              this.closePanelDetails();\r\n            }}\r\n            countries={countries}\r\n            covid19={covid19}\r\n            clickOnCountry={d => {\r\n              this.clickOnCountry(d);\r\n            }}\r\n          />\r\n          {zoneDeaths}\r\n          <Panel\r\n            opacity={panelOpacity}\r\n            zIndex={this.state.panelZindex}\r\n            stat={this.state.stat}\r\n            closePanel={() => {\r\n              this.closePanelDetails();\r\n            }}\r\n            x={this.state.x}\r\n            y={this.state.y}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <div></div>;\r\n    }\r\n  }\r\n\r\n  getData = data => {\r\n    if (data) {\r\n      return [data.ActiveCases, data.TotalDeaths, data.TotalRecovered];\r\n    } else {\r\n      return [0];\r\n    }\r\n  };\r\n\r\n  clickOnCountry = d => {\r\n    \r\n\r\n    let stat = {};\r\n    let covid19 = this.props.covid19;\r\n    if (d) {\r\n      stat = DataHelper.getStatByPays({ name: d.properties.name }, covid19);\r\n    } else {\r\n      stat = DataHelper.getStatByPays({ name: \"Morocco\" }, covid19);\r\n    }\r\n    let position = this.getPositionPanel();\r\n    this.setState({\r\n      panelOpacity: 1,\r\n      panelZindex: 1,\r\n      stat: stat,\r\n      x: position.x,\r\n      y: position.y \r\n    });\r\n    this.sendSvgToBackground();\r\n    this.props.onclick(d)\r\n  };\r\n\r\n  getPositionPanel = ()=>{\r\n    let panelStatDim = d3.selectAll(\"#panelStat\").node().getBoundingClientRect();\r\n    let leftsideDim = d3.selectAll(\"#leftside\").node().getBoundingClientRect();\r\n    let headerDim = d3.selectAll(\"#header\").node().getBoundingClientRect();\r\n    let x = d3.event.pageX - leftsideDim.width - (panelStatDim.width / 2) - 15\r\n    let y = d3.event.pageY - panelStatDim.height -headerDim.height;\r\n    return {x,y}\r\n  }\r\n\r\n  sendSvgToBackground = () => {\r\n    d3.selectAll(\"#worldMap\").style(\"opacity\", 0.3);\r\n  };\r\n\r\n  sendSvgToFrontPage = () => {\r\n    d3.selectAll(\"#worldMap\").style(\"opacity\", 1);\r\n  };\r\n\r\n  closePanelDetails = () => {\r\n    this.setState({\r\n      panelOpacity: 0,\r\n      panelZindex: -1\r\n    });\r\n    this.sendSvgToFrontPage();\r\n    this.props.initGlobalStat();\r\n  };\r\n}\r\n\r\nexport default Container;\r\n","import React, { Component } from \"react\";\r\nimport uihelper from \"../../utils/UIHelper\";\r\nimport \"./Card.css\";\r\n\r\nexport default class Card extends Component {\r\n  render() {\r\n    const {covid19,totalInfo} = this.props;\r\n    const countryClicked = this.props.countryClicked;\r\n\r\n    let data = covid19;\r\n    let totalStatistics;\r\n    if (Array.isArray(data) && data.length) {\r\n      //FIXME : refactor this code\r\n      totalStatistics = data.filter((elt) => { return elt.Country == \"Total:\" })[7]\r\n    }\r\n    let totalConfirmed;\r\n    let activeCases;\r\n    let recovered;\r\n    let totalDeaths;\r\n    if (countryClicked) {\r\n      totalConfirmed = countryClicked.cases;\r\n      activeCases = countryClicked.active;\r\n      recovered = countryClicked.recovered;\r\n      totalDeaths = countryClicked.deaths;\r\n    } else {\r\n      //FIXME\r\n      totalConfirmed = totalInfo.cases;\r\n      activeCases = totalInfo.todayCases;\r\n      recovered = totalInfo.todayRecovered;\r\n      totalDeaths = totalInfo.todayDeaths;\r\n    }\r\n    //\r\n    return (\r\n      <div style={{ marginLeft: 10 + \"px\" }}>\r\n        <div className=\"card\">\r\n          <div className=\"red-title\"> <i className=\"fa fa-globe\" aria-hidden=\"true\"></i> Total Confirmed</div>\r\n    <div className=\"red-content\">{uihelper.buildCountUpByStringValue(totalConfirmed)}</div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"orange-title\"><i className=\"fa fa-ambulance\" aria-hidden=\"true\"></i> Active cases</div>\r\n          <div className=\"orange-content\">{uihelper.buildCountUpByStringValue(activeCases)}</div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"green-title\"><i className=\"fa fa-heart\" aria-hidden=\"true\"></i> Recovered</div>\r\n          <div className=\"green-content\">{uihelper.buildCountUpByStringValue(recovered)}</div>\r\n        </div>\r\n        <div className=\"card\">\r\n          <div className=\"black-title\"><i className=\"fa fa-heartbeat\" aria-hidden=\"true\"></i> Total Deaths</div>\r\n          <div className=\"black-content\">{uihelper.buildCountUpByStringValue(totalDeaths)}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  // buildCountUpByStringValue = (valueStr)=>{\r\n  //   return (\r\n  //     <CountUp\r\n  //       separator=\",\"\r\n  //       end={StringUtils.stringVirSepToNumber(valueStr)}\r\n  //     ></CountUp>\r\n  //   );\r\n  // }\r\n\r\n}\r\n","import React, { useState, ComponentProps } from 'react';\r\nimport { PieChart } from \"react-minimal-pie-chart\";\r\n\r\n\r\ntype Props = {\r\n  data: ComponentProps<typeof PieChart>['data'];\r\n  countryClicked : {};\r\n};\r\n\r\nfunction PieChartFullOption(props: Props) {\r\n  const [selected, setSelected] = useState<number | undefined>(0);\r\n  const [hovered, setHovered] = useState<number | undefined>(undefined);\r\n\r\n  const data = props.data.map((entry, i) => {\r\n    if (hovered === i) {\r\n      return {\r\n        ...entry,\r\n        color: 'grey',\r\n      };\r\n    }\r\n    return entry;\r\n  });\r\n\r\n  const lineWidth = 60;\r\n\r\n  return (\r\n    <PieChart\r\n      style={{\r\n        fontFamily:\r\n          '\"Nunito Sans\", -apple-system, Helvetica, Arial, sans-serif',\r\n        fontSize: '8px',\r\n      }}\r\n      data={data}\r\n      radius={PieChart.defaultProps.radius - 6}\r\n      lineWidth={60}\r\n      segmentsStyle={{ transition: 'stroke .3s', cursor: 'pointer' }}\r\n      segmentsShift={(index) => (index === selected ? 6 : 1)}\r\n      animate\r\n      label={({ dataEntry }) => Math.round(dataEntry.percentage) + '%'}\r\n      labelPosition={100 - lineWidth / 2}\r\n      labelStyle={{\r\n        fill: '#fff',\r\n        opacity: 0.75,\r\n        pointerEvents: 'none',\r\n      }}\r\n      onClick={(_, index) => {\r\n        setSelected(index === selected ? undefined : index);\r\n      }}\r\n      onMouseOver={(_, index) => {\r\n        setHovered(index);\r\n      }}\r\n      onMouseOut={() => {\r\n        setHovered(undefined);\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default PieChartFullOption;","import * as React from \"react\";\r\nimport Container from \"../../components/coronadash/container/Container\";\r\nimport { getTodayCovidData, getTodayTotalCovidData } from \"../../services/covidNinja/NinjaService\";\r\nimport Card from \"../../components/card/Card\";\r\nimport PieChartFullOption from \"../../components/pieChart/PieChartFullOption\";\r\n\r\n\r\ninterface Props {\r\n  dataset: any;\r\n  totalInfo: any;\r\n}\r\ninterface State {\r\n  countryClicked: any;\r\n}\r\nexport class Home extends React.Component<Props, State>{\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      countryClicked : undefined,\r\n    };\r\n  }\r\n  \r\n  render() {\r\n\r\n    let pieData;\r\n    if (this.state.countryClicked) {\r\n      pieData = this.getPieData(this.state.countryClicked);\r\n    } else {\r\n      pieData = this.getPieData(this.getGlobalStat(this.props.dataset));\r\n    }\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div\r\n          id=\"leftside\"\r\n          className=\"col-2\"\r\n          style={{\r\n            paddingRight: 0 + \"px\",\r\n            height: window.screen.height + \"px\",\r\n          }}\r\n        >\r\n          <div className=\"row cards\">\r\n            <Card\r\n              covid19={this.props.dataset}\r\n              totalInfo={this.props.totalInfo}\r\n              countryClicked={this.state.countryClicked}\r\n            ></Card>\r\n          </div>\r\n          <div\r\n            className=\"row statistics\"\r\n            style={{\r\n              overflow: \"hidden\",\r\n              width: \"auto\",\r\n              height: \"auto\",\r\n            }}\r\n          >\r\n            <PieChartFullOption\r\n              data={[\r\n                { title: \"total recovered\", value: parseInt(pieData[0]), color: \"rgb(44, 100, 6)\" },\r\n                { title: \"total cases\", value: parseInt(pieData[1]), color: \"rgb(201, 93, 22)\" },\r\n                { title: \"total deaths\", value: parseInt(pieData[2]), color: \"rgb(0, 0, 0)\" },\r\n              ]}\r\n              countryClicked={this.state && this.state.countryClicked}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div\r\n          className=\"col-10\"\r\n          style={{ height: window.screen.height + \"px\" }}\r\n        >\r\n          <div id=\"mapWW\" className=\"col\">\r\n            <Container\r\n              covid19={this.props.dataset}\r\n              onclick={(d) => this.onclickCountry(d)}\r\n              initGlobalStat={() => {\r\n                this.initGlobalStat();\r\n              }}\r\n            ></Container>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  clickPrevious() {\r\n  }\r\n\r\n  clickNext() {\r\n  }\r\n\r\n  getPieData = data => {\r\n    if (data) {\r\n      let totalCases = data.cases;\r\n      let totalRecovered = data.recovered;\r\n      let totalDeaths = data.deaths;\r\n      return [totalRecovered, totalCases, totalDeaths];\r\n    } else {\r\n      return [0];\r\n    }\r\n  };\r\n\r\n  getGlobalStat = data => {\r\n    let totalStatistics;\r\n    if (Array.isArray(data) && data.length) {\r\n      //FIXME : refactor this code\r\n      totalStatistics = data.filter(elt => {\r\n        return elt.country == \"Morocco\";\r\n      })[0];\r\n    }\r\n    return totalStatistics;\r\n  };\r\n\r\n  onclickCountry = (d) => {\r\n    var dataset = this.props.dataset;\r\n    var countryFiltered;\r\n    if (!d) {\r\n      countryFiltered = dataset.filter((elt) => {\r\n        return elt.country == \"Morocco\";\r\n      })\r\n    } else {\r\n      countryFiltered = dataset.filter((elt) => {\r\n        return elt.country == d.properties.name;\r\n      })\r\n    }\r\n    this.setState({\r\n      countryClicked: countryFiltered[0]\r\n    })\r\n  }\r\n\r\n\r\n  initGlobalStat = () => {\r\n    this.setState({\r\n      countryClicked: undefined\r\n    })\r\n  }\r\n}","import { JsonObject, JsonProperty } from \"json2typescript\";\r\n\r\n@JsonObject(\"CountryDailyInfo\")\r\nexport class CountryDailyInfo {\r\n  @JsonProperty(\"country\", String)\r\n  private id: string;\r\n  \r\n  @JsonProperty(\"updated\", Number)\r\n  private updated: number;\r\n  @JsonProperty(\"country\", String)\r\n  private country: string;\r\n  @JsonProperty(\"countryInfo\", Object)\r\n  private countryInfo : Object;\r\n  @JsonProperty(\"cases\", Number)\r\n  private cases: number;\r\n  @JsonProperty(\"todayCases\", Number)\r\n  private todayCases: number;\r\n  @JsonProperty(\"deaths\", Number)\r\n  private deaths: number;\r\n  @JsonProperty(\"todayDeaths\", Number)\r\n  private todayDeaths: number;\r\n  @JsonProperty(\"recovered\", Number)\r\n  private recovered: number;\r\n  @JsonProperty(\"todayRecovered\", Number)\r\n  private todayRecovered: number;\r\n  @JsonProperty(\"active\", Number)\r\n  private active: number;\r\n  @JsonProperty(\"critical\", Number)\r\n  private critical: number;\r\n  @JsonProperty(\"tests\", Number)\r\n  private tests: number;\r\n  @JsonProperty(\"population\", Number)\r\n  private population: number;\r\n  @JsonProperty(\"continent\", String)\r\n  private continent: string;\r\n\r\n  constructor() {\r\n      this.id = \"\";\r\n    this.updated = 0;\r\n    this.country = \"\";\r\n    this.countryInfo = {};\r\n    this.cases = 0;\r\n    this.todayCases = 0;\r\n    this.deaths = 0;\r\n    this.todayDeaths = 0;\r\n    this.recovered = 0;\r\n    this.todayRecovered = 0;\r\n    this.active = 0;\r\n    this.critical = 0;\r\n    this.tests = 0;\r\n    this.population = 0;\r\n    this.continent = \"\";\r\n  }\r\n}\r\n","import { DataGrid } from '@mui/x-data-grid';\r\nimport * as React from 'react';\r\n\r\nconst columnsSchema = [\r\n  { field: 'countryInfo', headerName: 'ID', width: 90 ,\r\n  valueGetter: (params) =>\r\n    `${params.row.countryInfo.iso3}`,},\r\n  { field: 'country', headerName: 'country name', width: 150 },\r\n  {\r\n    field: 'cases',\r\n    headerName: 'total cases',\r\n    width: 150,\r\n    editable: false,\r\n  },\r\n  {\r\n    field: 'todayCases',\r\n    headerName: 'Today cases',\r\n    width: 150,\r\n    editable: false,\r\n  },\r\n  {\r\n    field: 'deaths',\r\n    headerName: 'Total deaths',\r\n    type: 'number',\r\n    width: 110,\r\n    editable: false,\r\n  },\r\n  {\r\n    field: 'todayDeaths',\r\n    headerName: 'Today deaths',\r\n    description: 'todo',\r\n    width: 160\r\n  },\r\n  {\r\n    field: 'recovered',\r\n    headerName: 'Total recovered',\r\n    sortable: true,\r\n    width: 160,\r\n  },\r\n];\r\n\r\nconst DataTable = (props)=>{\r\n  return (\r\n    <div style={{ height: 500, width: '100%' }}>\r\n      <DataGrid\r\n        rows={props.data}\r\n        columns={columnsSchema}\r\n        pageSize={20}\r\n        rowsPerPageOptions={[5]}\r\n        checkboxSelection\r\n        disableSelectionOnClick\r\n      />\r\n    </div>\r\n  );\r\n}\r\nexport default DataTable;","import { JsonConvert } from \"json2typescript\";\r\nimport * as React from \"react\";\r\nimport { CountryDailyInfo } from \"../../components/models/CountryDailyInfo\";\r\nimport DataTable from \"../../components/table/DataTable\";\r\n\r\ninterface Props {\r\n    dataset : any;\r\n}\r\ninterface State {\r\n\r\n}\r\nexport class Statistics extends React.Component<Props, State>{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    render() {\r\n          let jsonConvert: JsonConvert = new JsonConvert();\r\n          let coutriesDailyinfo : CountryDailyInfo[] = jsonConvert.deserializeArray(this.props.dataset, CountryDailyInfo);\r\n        return (\r\n            <div>\r\n                <DataTable data={coutriesDailyinfo}></DataTable>\r\n            </div>\r\n        )\r\n    }\r\n}","import * as React from \"react\";\r\nimport { Route, Routes } from \"react-router-dom\";\r\nimport { Home } from \"../pages/home/Home\";\r\nimport { Statistics } from \"../pages/statistics/Statistics\";\r\n\r\ninterface Props{\r\n    dataset:any;\r\n    totalInfo:any;\r\n}\r\ninterface State{\r\n\r\n}\r\nexport class Router extends React.Component<Props,State> {\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Routes>\r\n                    <Route\r\n                        path={\"/\"}\r\n                        element={\r\n                            <Home dataset={this.props.dataset} totalInfo={this.props.totalInfo}/>\r\n                        }\r\n                    />\r\n                    <Route\r\n                        path={\"/map\"}\r\n                        element={\r\n                            <Home dataset={this.props.dataset} totalInfo={this.props.totalInfo}/>\r\n                        }\r\n                    />\r\n                    <Route path={\"/stat\"} element={<Statistics dataset={this.props.dataset} />} />\r\n                </Routes>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { Footer } from \"./pages/footer/footer\";\r\nimport { Header } from \"./pages/header/header\";\r\nimport { Router } from \"./routes/router\";\r\nimport { getTodayCovidData, getTodayTotalCovidData } from \"./services/covidNinja/NinjaService\";\r\n\r\nexport default class App extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dataset: {},\r\n      totalInfo: {},\r\n      isDataLoaded:false\r\n    };\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    let dataset = {};\r\n    getTodayCovidData().then((response) => {\r\n      dataset = response.filter((d) => {\r\n        return d.country != \"Western Sahara\";\r\n      });\r\n      getTodayTotalCovidData().then((response) => {\r\n        this.setState({\r\n          dataset,\r\n          totalInfo: response,\r\n          isDataLoaded: true,\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.isDataLoaded) {\r\n      return \"\";\r\n    }\r\n    console.log(\"App render\");\r\n    console.log(\"v104\");\r\n    return (\r\n      <div\r\n        className=\"container-fluid\"\r\n        style={{ overflow: \"auto\", height: \"1500px\" }}\r\n      >\r\n        <div id=\"header\" className=\"row\">\r\n          <Header />\r\n        </div>\r\n        <div>\r\n          <Router dataset={this.state.dataset} totalInfo={this.state.totalInfo}/>\r\n        </div>\r\n        <div className=\"footer\">\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","\r\n// const URL_DATA_YESTERDAY : string = \"https://corona.lmao.ninja/v2/countries?yesterday&sort\";\r\nconst URL_DATA_TODAY : string = \"https://corona.lmao.ninja/v2/countries?today&sort\";\r\nconst URL_DATA_TODAY_TOTAL : string = \"https://corona.lmao.ninja/v2/all?today\";\r\n// const URL_DATA_YESTERDAY_TOTAL : string = \"https://corona.lmao.ninja/v2/all?yesterday\";\r\n\r\n    // export const getYesterDayCovidData  = ()=>{\r\n    //     return fetch(URL_DATA_YESTERDAY).then((data)=>{\r\n    //         return data.json();\r\n    //     })\r\n    // }\r\n\r\n    export const getTodayCovidData = ()=>{\r\n        return fetch(URL_DATA_TODAY).then((data)=>{\r\n            return data.json();\r\n        })\r\n    }\r\n\r\n    export const getTodayTotalCovidData  = ()=>{\r\n        return fetch(URL_DATA_TODAY_TOTAL).then((data)=>{\r\n            return data.json();\r\n        })\r\n    }\r\n\r\n    // export const getYesterdayTotalCovidData  = ()=>{\r\n    //     return fetch(URL_DATA_YESTERDAY_TOTAL).then((data)=>{\r\n    //         return data.json();\r\n    //     })\r\n    // }","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n// window.screen.orientation.lock('landscape');\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter >\r\n            <App />\r\n        </HashRouter>\r\n    </React.StrictMode>\r\n, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}